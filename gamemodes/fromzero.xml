<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet href="file:///C|/Users/vlogs/Desktop/BlackMoon Community/BlackMoon-Gamemode/pawno/xml/pawndoc.xsl" type="text/xsl"?>
<doc source="C:\Users\vlogs\Desktop\BlackMoon Community\BlackMoon-Gamemode\gamemodes\fromzero.pwn">
	<assembly>
		<name>fromzero.pwn</name>
	</assembly>

	<!-- general -->
	<general>
		<!--  <transition target[^/]+/>  :::::::: README ::::::::  To read the generated XML output, copy `pawndoc.xsl` to `pawno/xml/`.  This information goes very close to the top of the generated XML documentation  (because of include dependency orders), but doesn't appear in the visual output.  There is a bug in the compiler related to outputting documentation on state  transitions (<a href="https://github.com/Zeex/pawn/issues/184" />).  So after  generation of the XML file, you should clean it up with the following RegEx  replacement:  Search: <transition target[^/]+/>  Replace: (nothing)  This works 99% of the time, though you may get one where the corrupted target  includes the character `/`, in which case you should manually delete them.  Note  that YSI now includes manual documentation for transitions, but these all  include the parameter `keep="true"`, which exists simply to not match that  RegEx.  I also put the search at the top of this block so it is easier to find  in the output code.  --> <p/> <library name="y_iterate">  <section>  Description  </section>  Provides efficient looping through sparse data sets, such as connected  players.  Significantly improved from the original version to be a generic  loop system, rather then purely a player loop system.  When used for  players this has constant time O(n) for number of connected players (n),  unlike standard player loops which are O(MAX_PLAYERS), regardless of the  actual number of connected players.  Even when n is MAX_PLAYERS this is  still faster.  For extensive documentation on writing and using iterators, see this topic:  <a href="http://forum.sa-mp.com/showthread.php?t=481877" />  <section>  Version  </section>  0.4  <section>  Functions  </section>  <subsection>  Public  </subsection><ul>  <symbol name="OnPlayerDisconnect">Called when a player leaves to remove them.</symbol>  <symbol name="OnPlayerConnect">Called when a player connects to add them.</symbol>  </ul><subsection>  Stock  </subsection><ul>  <symbol name="Iter_ShowArray">Displays the contents of the array.</symbol>  <symbol name="Iter_AddInternal">Add a value to an iterator.</symbol>  <symbol name="Iter_RemoveInternal">Remove a value from an iterator.</symbol>  <symbol name="Iter_RandomInternal">Get a random item from an iterator.</symbol>  <symbol name="Iter_FreeInternal">Gets the first free slot in the iterator.</symbol>  <symbol name="Iter_InitInternal">Initialises a multi-dimensional iterator.</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="Iter_Create">Create a new iterator value set.</symbol>  <symbol name="Iter_Add">Wraps Iter_AddInternal.</symbol>  <symbol name="Iter_Remove">Wraps Iter_RemoveInternal.</symbol>  <symbol name="Iter_Random">Wraps Iter_RandomInternal.</symbol>  <symbol name="Iter_Count">Gets the number of items in an iterator.</symbol>  <symbol name="Iter_Debug">Wraps around Iter_ShowArray.</symbol>  <symbol name="Iter_Free">Wraps around Iter_FreeInternal.</symbol>  <symbol name="Iter_Create2">Create a new iterator array value set.</symbol>  <symbol name="Iter_Add2">Wraps Iter_AddInternal for arrays.</symbol>  <symbol name="Iter_Remove2">Wraps Iter_RemoveInternal for arrays.</symbol>  <symbol name="Iter_Random2">Wraps Iter_RandomInternal for arrays.</symbol>  <symbol name="Iter_Count2">Gets the number of items in an iterator array.</symbol>  <symbol name="Iter_Debug2">Wraps around Iter_ShowArray for arrays.</symbol>  <symbol name="Iter_Free2">Wraps around Iter_FreeInternal for arrays.</symbol>  </ul><section>  Hooks  </section><ul>  <symbol name="Iter_OnPlayerConnect">Hook for the OnPlayerConnect callback.</symbol>  <symbol name="Iter_OnPlayerDisconnect">Hook for the OnPlayerDisconnect callback.</symbol>  <symbol name="Iter_OnGameModeInit">Only exists to make the code compile correctly...</symbol>  </ul><section>  Keywords  </section><ul>  <symbol name="foreach">Command to loop an iterator.</symbol>  <symbol name="foreachex">Like foreach but without a new variable.</symbol>  <symbol name="foreach2">Command to loop through an iterator array.</symbol>  <symbol name="foreachex">Like foreach2 but without a new variable.</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Iterator">Declare an iterator.</symbol>  </ul><section>  Variables  </section>  <subsection>  Static  </subsection><ul>  <symbol name="YSI_g_OPC">Records wether Iter_OnPlayerConnect exists for speed.</symbol>  <symbol name="YSI_g_OPDC">Records wether Iter_OnPlayerDisconnect exists for speed.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_ITTER_NO_SORT">Removed.</symbol>  <symbol name="FOREACH_NO_BOTS">Remove the bot iterators for smaller code.</symbol>  <symbol name="FOREACH_NO_PLAYERS">Remove all default code for player itteration.</symbol>  </ul><section>  Iterators  </section><ul>  <symbol name="Player">List of all players connected.</symbol>  <symbol name="Bot">List of all bots (npcs) connected.</symbol>  <symbol name="NPC">Alias of Bot.</symbol>  <symbol name="Character">All players and bots.</symbol>  </ul><section>  Examples  </section>  <subsection>Basic Iterators</subsection>  <p>  Basic iterators are simply collections of numbers - little more than an array.  A number is either in the array, or not in the array, <em>y_iterate</em> loops  through only the <em>in</em> numbers.</p>  <p><em>Players</em><br /><br />  This code will loop through every player connected to the server.  <code>  foreach (new i : Player)																				<br />  {																				<br /><indent />  printf("player %d is connected", i);																				<br />  }  </code>  </p>  <p><em>Vehicles</em><br /><br />  This code will loop through all the created vehicles on the server (including  those made in other running scripts).  <code>  foreach (new vid : Vehicle)																				<br />  {																				<br /><indent />  printf("vehicleid %d has been created", vid);																				<br />  }  </code>  </p>  <p><em>Create An Iterator</em><br /><br />  To create your own iterator, first declare it, then add things to it, then loop  over it:  <code>  new																				<br /><indent />  Iterator:MyIter&lt;100&gt;; // First declare it (this has room for 100 items numbered 0-99).									 											<br />  // Then add things to it.																				<br />  Iter_Add(MyIter, 0);  // Fine.																				<br />  Iter_Add(MyIter, 55); // Fine.																				<br />  Iter_Add(MyIter, 100); // Will fail.																				<br />  // Then loop over it.																				<br />  foreach (new i : MyIter)																				<br />  {																				<br /><indent />  printf("%d", i); // Will print "0" then "55".																				<br />  }  </code>  </p>  <subsection>Special Iterators</subsection>  </library> <p/> <param name="expr"><code>var : Iterator</code></param>  <remarks>  </remarks> <p/> <library name="y_utils">  <section>  Description  </section>  Misc functions used throughout.  <section>  Version  </section>  0.1.3  <section>  Functions  </section>  <subsection>Stock</subsection>  <ul>  <symbol name="StrToLower">Convert a whole string to lower-case.</symbol>  <symbol name="StrToUpper">Convert a whole string to upper-case.</symbol>  <symbol name="Random">Generate a random number, optionally takes lower and upper bounds.</symbol>  <symbol name="RandomFloat">Same as <symbolref name="Random" />, but for floats.</symbol>  <symbol name="StripNL">Strips the newline characters from the end of a string.</symbol>  <symbol name="StripL">Remove whitespace from the start of a string.</symbol>  <symbol name="Strip">Remove whitespace from both ends of a string.</symbol>  <symbol name="endofline">Check if the given position is the end of a string (ignoring whitespace).</symbol>  <symbol name="chrfind">Return the first position (after <symbolref name="start" />) of the given character.</symbol>  <symbol name="chrfindp">Like <symbolref name="chrfind" />, but without the upper-bounds check.</symbol>  <symbol name="bernstein">Generate the Bernstein hash of the given string.</symbol>  <symbol name="ishex">Is the given string hexadecimal?</symbol>  <symbol name="unpack">Version of <symbolref name="strunpack" /> that returns the result.</symbol>  <symbol name="returnstringarg">Get the string passed as a variable argument from the given index.</symbol>  <symbol name="va_return">Like <symbolref name="sprintf" />, formats a string and returns the result.</symbol>  <symbol name="isnumeric">Is the given string a number?</symbol>  <symbol name="hexstr">Return the value of the given hexadecimal string.</symbol>  <symbol name="boolstr">Return the value of the given boolean string.</symbol>  <symbol name="binstr">Return the value of the given binary string.</symbol>  <symbol name="rawMemcpy">Copy memory between two address, instead of two arrays.</symbol>  <symbol name="memset">Set all of an array to a value.</symbol>  <symbol name="rawMemset">Set all of a given memory region to a value.</symbol>  <symbol name="ReturnPlayerName">Return a player's name.</symbol>  <symbol name="ftouch">Ensures that a file exists, but nothing more.</symbol>  <symbol name="InterpolateColour">Get the colour (in 3D RGB space) between two other colours.</symbol>  <symbol name="SkipWhitespace">Return the first position in a string of a non-whitespace character.</symbol>  <symbol name="Trim">Get the first and last positions of non-whitespace characters in the string.  Like  <symbolref name="Strip" />, but doesn't modify the string.</symbol>  <symbol name="Sum">Get the total (sum) of an array.</symbol>  <symbol name="Mean">Get the mathematical mean of an array.</symbol>  <symbol name="Mode">Get the mathematical mode of an array.</symbol>  <symbol name="Median">Get the mathematical median of an array.</symbol>  <symbol name="Range">Get the mathematical range of an array.</symbol>  </ul>  <subsection>Inline</subsection>  <ul>  <symbol name="UCMP">Unsigned compare.</symbol>  <symbol name="VALID_PLAYERID">Check if a player ID is valid (in range).</symbol>  <symbol name="IS_IN_RANGE">Check if a number is in range.</symbol>  <symbol name="NOT_IN_RANGE">Check if a number is outside a range.</symbol>  <symbol name="ceildiv">Divide two numbers and round up.</symbol>  <symbol name="floordiv">Divide two numbers and round down.</symbol>  <symbol name="isnull">Checks if a string is NULL (<c>\1\0</c> or <c>\0</c>).</symbol>  <symbol name="isodd">Checks if a number is odd.</symbol>  <symbol name="iseven">Checks if a number is even.</symbol>  <symbol name="strcpy">Copy one string to another.</symbol>  <symbol name="GetIP">Return the encoded (32-bit) version of a player's IP.</symbol>  <synonym name="getstring" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetString" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="getstringarg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="GetStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="ReturnStringArg" for="returnstringarg"> (there are a lot)</synonym>  <synonym name="InterpolateColor" for="InterpolateColour" />  <synonym name="StripR" for="StripNL" />  </ul>  <section>  Variables  </section>  <subsection>Global</subsection>  <ul>  <symbol name="TRUE">True hack for infinate loops.</symbol>  <symbol name="FALSE">False hack for one-time loops.</symbol>  <symbol name="NULL">1 long string for passing via Call(Remote|Local)Function.</symbol>  </ul>  </library> <p/> <library name="y_scriptinit">  <section>  Description  </section>  This file provides "OnScriptInit" and "OnScriptExit" which are called at the  start and end of the current script, regardless of what the type of the  script is (note: doesn't support NPC modes).  It also provides  "YSI_FILTERSCRIPT" as a (partial) replacement for "FILTERSCRIPT" which  detects what the mode is at runtime for a more reliable system (but it is a  run-time variable, not a compile-time constant).  <section>  Version  </section>  1.0  </library> <p/> <library name="y_debug">  <section>  Description  </section>  <p>Ensures debug levels are set and defines debug functions.</p>  <p>General debug levels:</p>  <ul>  <li>-1 - Run-time selected debug level.</li>  <li>0 - No debug information.</li>  <li>1 - Callbacks and timers.</li>  <li>2 - Remote functions.</li>  <li>3 - Stock functions.</li>  <li>4 - Static functions.</li>  <li>5 - Code.</li>  <li>6 - Loops.</li>  <li>7 - Extra loop code.</li>  </ul>  <p>If you use <c>P:0</c> you get an optional debug print controlled by the  global state <c>ysi_debug</c> - which is either on or off.</p>  <section>  Version  </section>  1.0  <section>  Functions  </section>  <subsection>  Inline  </subsection><ul>  <symbol name="Debug_Code">Runs defined code if a certain level is active.</symbol>  <symbol name="Debug_Print">Prints the formatted string provided at the given level.</symbol>  </ul><subsection>  Stock  </subsection><ul>  <symbol name="Debug_PrintArray">Print several items from an array for debugging purposes.</symbol>  <symbol name="Debug_Enable">Turn on level 0 prints.</symbol>  <symbol name="Debug_Disable">Turn off level 0 prints.</symbol>  <symbol name="Debug_Level">Set the debug level when the code is compiled with  <c>_DEBUG=-1</c>, which means full run-time selection.</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="P:&lt;0-6&gt;">Print a message.</symbol>  <symbol name="P:C">Run debug code.</symbol>  <symbol name="P:E">Print an error message.</symbol>  <symbol name="P:W">Print a warning message.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="_DEBUG">Debugging level to use.</symbol>  </ul>  </library> <p/> <library name="y_amx">  <section>  Description  </section>  Allows a script access to information about itself, such as function names.  This can be used for a range of things, including automatic callback hooking  and testing.  <section>  Version  </section>  1.0  </library> <p/> <library name="y_va">  <section>  Description  </section>  This library currently provides two functions - va_printf and va_format  which perform printf and format using variable arguments passed to another  function.  This is bsed on the variable parameter passing method based on code by Zeex.  See page 15 of the code optimisations topic.  <section>  Version  </section>  1.0  </library> <p/> <library name="y_hooks">  <section>  Description  </section>  Automatically hooks any callbacks with a very simple syntax.  <section>  Version  </section>  2.0  </library> <p/> <library name="y_cell">  <section>  Description  </section>  Provides a few functions for manipulating the bits in single cells.  Note  that this is distinct from the y_bit library.  <section>  Version  </section>  0.2  </library> <p/> <library name="y_bit">  <section>  Description  </section>  Provides functions for bit manipulation and bit arrays greater than 32bits.  The arrays are usually bigger than required due to cell boundaries but this  shouldn't cause a major problem (bit tests on the 101st bit of a 100 bit  array won't return 0 for out of bounds, but the 129th will).  Note that y_commands has a few optimisations which bypass the code in here  so any modifications to bit array layouts will need to be reflected there.  <section>  Version  </section>  0.2  <section>  Functions  </section>  <subsection>  Stock  </subsection><ul>  <symbol name="Bit_Set">Sets a slot to the given value.</symbol>  <symbol name="Bit_Get">Gets a slot state.</symbol>  <symbol name="Bit_SetAll">Sets all the slots in an array to the same thing.</symbol>  <symbol name="Bit_GetCount">Gets the number of 1s in a bit array.</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="Bit_Bits">Gets the number of cells required for a bit array.</symbol>  <symbol name="Bit_Let">Sets a slot to 1.</symbol>  <symbol name="Bit_Vet">Sets a slot to 0.</symbol>  <symbol name="Bit_GetBits">Gets the bit at a slot unsafely.</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="CELLSHIFT">Number of bits that can hold "cellbits"</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Bit">Bit array type.</symbol>  </ul>  </library> <p/> <library name="y_als">  <section>  Description  </section>  Provides a number of macros for making ALS (Advanced Library System)  callback hooking simpler.  <section>  Version  </section>  1.0  </library> <p/> <library name="y_remote">  <section>  Description  </section>  Wrapper for "__CallRemoteFunction".  Enforces some features like no returns  and arrays being followed by their length.  <section>  Version  </section>  1.0  <section>  Macros  </section><ul>  <symbol name="remotefunc">Define a function to be called remotely (use like "stock").</symbol>  <symbol name="broadcastfunc">Call the function, but in all scripts.</symbol>  <symbol name="localfunc">Call the function by name, not address, in the current script.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_NO_MASTER">Disable all knowledge of other scripts.</symbol>  </ul>  </library> <p/> <library name="y_timers">  <section>  Description  </section>  Sets up repeating timers without requiring any SetTimers and arranges them  so that they will be very unlikely to meet (at least for a long time) using  scheduling algorithms to get timers with the same period to be offset.  Also  fixes arrays and strings in timers so they can be passed properly.  <section>  Version  </section>  2.0  </library> <p/> <library name="y_malloc">  <section>  Description  </section>  Functions for using malloc/calloc/free type functions in PAWN.  <section>  Version  </section>  0.1  <section>  Functions  </section>  <subsection>  Stock  </subsection><ul>  <symbol name="malloc">Allocate a block of memory (may be inline).</symbol>  <symbol name="calloc">Allocate a block of memory and blank.</symbol>  <symbol name="free">Free an allocated block of memory (may be inline).</symbol>  <symbol name="Malloc_Set">Set a value in an allocated array (may be inline).</symbol>  <symbol name="Malloc_Get">Get a value in an allocated array (may be inline).</symbol>  <symbol name="Malloc_SetS">Set a string in an allocated array.</symbol>  <symbol name="Malloc_GetS">Get a string in an allocated array.</symbol>  <symbol name="Malloc_Allocate">Do the memory allocation (may be static).</symbol>  <symbol name="Malloc_Free">Do the memory freeing (may be static).</symbol>  <symbol name="Malloc_SlotSize">Get the size of an allocated block (may be inline).</symbol>  <symbol name="Malloc_NewS">Allocate for and store a given string.</symbol>  </ul><subsection>  Static  </subsection><ul>  <symbol name="Malloc_Allocate">Do the memory allocation (may be stock).</symbol>  <symbol name="Malloc_Free">Do the memory freeing (may be stock).</symbol>  </ul><subsection>  Inline  </subsection><ul>  <symbol name="mget">Get data from an allocation unit.</symbol>  <symbol name="mset">Set data in an allocation unit.</symbol>  <symbol name="mgets">Get a string from an allocation unit.</symbol>  <symbol name="msets">Set a string in an allocation unit.</symbol>  <symbol name="malloc">Allocate a block of memory (may be stock).</symbol>  <symbol name="free">Free an allocated block of memory (may be stock).</symbol>  <symbol name="Malloc_Set">Set a value in an allocated array (may be stock).</symbol>  <symbol name="Malloc_Get">Get a value in an allocated array (may be stock).</symbol>  <symbol name="Malloc_NextSlot">Get the next free data block.</symbol>  <symbol name="Malloc_GetSlotSize">Get the size of a slot.</symbol>  <symbol name="Malloc_SetSlotSize">Set the size of a block.</symbol>  <symbol name="Malloc_GetData">Direct data access getter.</symbol>  <symbol name="Malloc_SetData">Direct data access setter.</symbol>  <symbol name="Malloc_SlotSize">Get the size of an allocated block (may be stock).</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="MALLOC_KB_TO_CELL">Multiplication value to convert kb to cells.</symbol>  <symbol name="NO_ALLOC">A failed allocation (NULL, but YSI already has NULL).</symbol>  </ul><section>  Tags  </section><ul>  <symbol name="Alloc">An allocated block handle variable.</symbol>  </ul><section>  Variables  </section>  <subsection>  Global  </subsection><ul>  <symbol name="YSI_gMallocMemory">Stores the data (may be static).</symbol>  </ul><subsection>  Static  </subsection><ul>  <symbol name="YSI_gMallocMemory">Stores the data (may be global).</symbol>  <symbol name="_YSI_g_sUnusedStart">Start of free memory.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="MALLOC_MEMORY">Number of cells to reserve.</symbol>  <symbol name="MALLOC_MEMORY_KB">Number of killobytes to reserve.</symbol>  <symbol name="MALLOC_MEMORY_B">Number of bytes to reserve.</symbol>  <symbol name="MALLOC_MEMORY_MB">Number of megabytes to reserve.</symbol>  <symbol name="YSI_MALLOC_SECURE">Use enhanced bounds checking.</symbol>  <symbol name="YSI_MALLOC_NO_SHORT">Avoid conflicts with mget/mset.</symbol>  </ul>  </library> <p/> <library name="y_master">  <section>  Description  </section>  Handles distribution of control of code segments across all running scripts  with YSI to avoid conflicts of checkpoint streamers etc and allow features  like "/commands" displaying all commands on the server.  Now fully autonomous - to use the master system simply define which one you  want and include the script:  <c>  #define MASTER 14  #include "Master"  </c>  That will make the current script attempt to make itself the main master -  you don't need ANY other code for initialisation anywhere (which took a  while to figure out)...  This is now over 2000 lines of repetitive and complex macros!  <section>  Version  </section>  0.2  <section>  Macros  </section><ul>  <symbol name="RF">Declare a function which may be remote.</symbol>  <symbol name="RV">Declare a void function which may be remote.</symbol>  <symbol name="RS">Declare an optional callback.</symbol>  <symbol name="RFN">Declare an optional callback with no parameters.</symbol>  <symbol name="RFC">Declare a slower but shorter function.</symbol>  <symbol name="RFP">Declare a function with tags and give recall hints.</symbol>  <symbol name="RFPC">Combination of P and C.</symbol>  <symbol name="RFCP">Combination of P and C.</symbol>  </ul><section>  Variables  </section>  <subsection>  Global  </subsection><ul>  <symbol name="_@">ID of this script.</symbol>  </ul><section>Compile options</section><ul>  <symbol name="YSI_NO_MASTER">Don't use the master system.</symbol>  <symbol name="YSI_IS_CLIENT">Script is a client only script.</symbol>  <symbol name="YSI_IS_SERVER">Script is a server only script.</symbol>  </ul>  </library> <p/> <library name="y_inline">  <section>  Description  </section>  This library allows a user to write inline functions in their script.  It  first detects all inline functions and generates data on them, such as  parameter counts and addresses.  When an inline function is passed in code  its current context data is stored.  Finally, when an inline function is  found to be called at some point its current local stack is stored in global  memory.  When the function actually is called, the stack is restored, and  additional parameters which are the inline function parameters, are passed.  <section>  Version  </section>  1.0  </library> <p/> <param name="func">The function to call on a delay.</param>  <param name="delay">how long before the first call?</param>  <param name="interval">How long between subsequent calls?</param>  <param name="repeat">How many times to call the function.</param>  <param name="format">The additional parameters' types.</param>  <param name="">The additional parameters.</param>  <remarks>  Calls a function, which may be an inline function, after a given delay, and  with the given regularity after that.  The parameters are slightly different  to those in SetTimer - that takes only an interval and a repeat boolean.  This instead takes two times - the first is the delay before the first call,  the second is the delay between all subsequent calls (mainly to offset  different timers within a given period).  The "repeat" parameter is also  different - instead of being a boolean, it is a count.  "0" no longer means  "don't repeat", but "repeat forever".  "1" no longer means "repeat forever",  but "call once".  All other numbers (beside 0) specify an exact number of  times to call the function before calling it no more.  This is in line with  the "SetTimer_" and "SetTimerEx_" functions in the fixes2 plugin.  </remarks> <p/> <library name="y_stringhash">  <section>  Description  </section>  Allows you to hash strings at compile time to use them in a switch.  <section>  Version  </section>  2.0  <section>  Functions  </section>  <subsection>  Stock  </subsection><ul>  <symbol name="YHash">Generate a string hash at run time.</symbol>  </ul><section>  Definitions  </section><ul>  <symbol name="_H">Generate a string hash at compile time.</symbol>  <symbol name="_I">Generate a case insensitive string hash at compile time.</symbol>  </ul>  </library> <p/> MySQL plugin R41-4 
	</general>

	<members>

		<!-- enumerations -->
		<member name="T:AMX_FUNCSTUBNT" value="2">
			<tagname value="AMX_FUNCSTUBNT"/>
			<member name="C:AMX_FUNCSTUBNT_ADDRESS" value="0">
			</member>
			<member name="C:AMX_FUNCSTUBNT_NAMEOFS" value="1">
			</member>
			<referrer name="GetPublicAddressFromIndex"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeAddressFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarAddressFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagIDFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="IsTagIndexStrong"/>
			<referrer name="IsTagIndexWeak"/>
		</member>
		<member name="T:AMX_HDR" value="17">
			<tagname value="AMX_HDR"/>
			<member name="C:AMX_HDR_SIZE" value="0">
			</member>
			<member name="C:AMX_HDR_MAGIC" value="1">
			</member>
			<member name="C:AMX_HDR_FILE_VERSION" value="2">
			</member>
			<member name="C:AMX_HDR_AMX_VERSION" value="3">
			</member>
			<member name="C:AMX_HDR_FLAGS" value="4">
			</member>
			<member name="C:AMX_HDR_DEFSIZE" value="5">
			</member>
			<member name="C:AMX_HDR_COD" value="6">
			</member>
			<member name="C:AMX_HDR_DAT" value="7">
			</member>
			<member name="C:AMX_HDR_HEA" value="8">
			</member>
			<member name="C:AMX_HDR_STP" value="9">
			</member>
			<member name="C:AMX_HDR_CIP" value="10">
			</member>
			<member name="C:AMX_HDR_PUBLICS" value="11">
			</member>
			<member name="C:AMX_HDR_NATIVES" value="12">
			</member>
			<member name="C:AMX_HDR_LIBRARIES" value="13">
			</member>
			<member name="C:AMX_HDR_PUBVARS" value="14">
			</member>
			<member name="C:AMX_HDR_TAGS" value="15">
			</member>
			<member name="C:AMX_HDR_NAMETABLE" value="16">
			</member>
			<referrer name="AsmGetJumpAddressFromOffset"/>
			<referrer name="AsmGetCode"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmInit"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="ProfilerInit"/>
		</member>
		<member name="T:AsmContext" value="21">
			<tagname value="AsmContext"/>
			<member name="C:AsmContext_buffer" value="0">
			</member>
			<member name="C:AsmContext_buffer_size" value="1">
			</member>
			<member name="C:AsmContext_buffer_offset" value="2">
			</member>
			<member name="C:AsmContext_error" value="3">
			</member>
			<member name="C:AsmContext_error_handler" value="4">
			</member>
			<member name="C:AsmContext_label_names" value="5">
				<size value="8"/>
			</member>
			<member name="C:AsmContext_labels" value="13">
				<size value="8"/>
			</member>
			<referrer name="AMX_Read"/>
			<referrer name="bernstein"/>
			<referrer name="rawMemset"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@E"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
		</member>
		<member name="T:CodeScanMatcher" value="267">
			<tagname value="CodeScanMatcher"/>
			<member name="C:CodeScanMatcher_func" value="0">
			</member>
			<member name="C:CodeScanMatcher_user_data" value="1">
			</member>
			<member name="C:CodeScanMatcher_code" value="2">
				<size value="128"/>
			</member>
			<member name="C:CodeScanMatcher_len" value="130">
			</member>
			<member name="C:CodeScanMatcher_offset" value="131">
				<size value="2"/>
			</member>
			<member name="C:CodeScanMatcher_start" value="133">
				<size value="2"/>
			</member>
			<member name="C:CodeScanMatcher_holeidx" value="135">
				<size value="2"/>
			</member>
			<member name="C:CodeScanMatcher_holes" value="137">
				<size value="128"/>
			</member>
			<member name="C:CodeScanMatcher_next" value="265">
			</member>
			<member name="C:CodeScanMatcher_flags" value="266">
			</member>
			<referrer name="CodeScanDeref"/>
			<referrer name="YVA2_Initalise"/>
		</member>
		<member name="T:CodeScanner" value="211">
			<tagname value="CodeScanner"/>
			<member name="C:CodeScanMatch_func" value="0">
			</member>
			<member name="C:CodeScanMatch_size" value="1">
			</member>
			<member name="C:CodeScanMatch_type" value="2">
			</member>
			<member name="C:CodeScanMatch_heap" value="3">
			</member>
			<member name="C:CodeScanMatch_stack" value="4">
			</member>
			<member name="C:CodeScanMatch_params" value="5">
			</member>
			<member name="C:CodeScanMatch_cip" value="6">
			</member>
			<member name="C:CodeScanMatch_holes" value="7">
				<size value="64"/>
			</member>
			<member name="C:CodeScanMatch_name" value="71">
				<size value="8"/>
			</member>
			<member name="C:CodeScanner_first" value="79">
			</member>
			<member name="C:CodeScanner_minn" value="80">
			</member>
			<member name="C:CodeScanner_jump_switch" value="81">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_jump_target" value="113">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_jump_stack" value="145">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_jump_heap" value="177">
				<size value="32"/>
			</member>
			<member name="C:CodeScanner_state" value="209">
			</member>
			<member name="C:CodeScanner_param" value="210">
			</member>
			<referrer name="YVA2_Initalise"/>
		</member>
		<member name="T:DisasmContext" value="22">
			<tagname value="DisasmContext"/>
			<member name="C:DisasmContext_start_ip" value="0">
			</member>
			<member name="C:DisasmContext_end_ip" value="1">
			</member>
			<member name="C:DisasmContext_nip" value="2">
			</member>
			<member name="C:DisasmContext_cip" value="3">
			</member>
			<member name="C:DisasmContext_opcode" value="4">
				<tagname value="Opcode"/>
			</member>
			<member name="C:DisasmContext_insn" value="5">
				<size value="17"/>
			</member>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanRun"/>
			<referrer name="AMX_Read"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
		</member>
		<member name="T:E_CALLBACK_DATA" value="5">
			<tagname value="E_CALLBACK_DATA"/>
			<member name="C:E_CALLBACK_DATA_ALLOC" value="0">
				<tagname value="ResolvedAlloc"/>
			</member>
			<member name="C:E_CALLBACK_DATA_POINTER" value="1">
				<tagname value="Function"/>
			</member>
			<member name="C:E_CALLBACK_DATA_OFFSET" value="2">
			</member>
			<member name="C:E_CALLBACK_DATA_FORMAT" value="3">
				<size value="2"/>
			</member>
			<referrer name="Callback_Get"/>
		</member>
		<member name="T:E_HOOK_NAME_REPLACEMENT_DATA" value="34">
			<tagname value="E_HOOK_NAME_REPLACEMENT_DATA"/>
			<member name="C:E_HOOK_NAME_REPLACEMENT_SHORT" value="0">
				<size value="16"/>
			</member>
			<member name="C:E_HOOK_NAME_REPLACEMENT_LONG" value="16">
				<size value="16"/>
			</member>
			<member name="C:E_HOOK_NAME_REPLACEMENT_MIN" value="32">
			</member>
			<member name="C:E_HOOK_NAME_REPLACEMENT_MAX" value="33">
			</member>
		</member>
		<member name="T:E_ITER_YIELD" value="11">
			<tagname value="E_ITER_YIELD"/>
			<member name="C:E_ITER_YIELD_STACK_START" value="0">
			</member>
			<member name="C:E_ITER_YIELD_STACK_END" value="1">
			</member>
			<member name="C:E_ITER_YIELD_STACK_SIZE" value="2">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_START" value="3">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_END" value="4">
			</member>
			<member name="C:E_ITER_YIELD_HEAP_SIZE" value="5">
			</member>
			<member name="C:E_ITER_YIELD_FIRST" value="6">
			</member>
			<member name="C:E_ITER_YIELD_FRM" value="7">
			</member>
			<member name="C:E_ITER_YIELD_CIP" value="8">
			</member>
			<member name="C:E_ITER_YIELD_FRAME" value="9">
			</member>
			<member name="C:E_ITER_YIELD_RETURN" value="10">
			</member>
		</member>
		<member name="T:E_MAP_ZONE_AREA_DATA" value="7">
			<tagname value="E_MAP_ZONE_AREA_DATA"/>
			<member name="C:E_MAP_ZONE_AREA_ID" value="0">
				<tagname value="MapZone"/>
			</member>
			<member name="C:E_MAP_ZONE_AREA_MIN_X" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:E_MAP_ZONE_AREA_MIN_Y" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:E_MAP_ZONE_AREA_MIN_Z" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:E_MAP_ZONE_AREA_MAX_X" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:E_MAP_ZONE_AREA_MAX_Y" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:E_MAP_ZONE_AREA_MAX_Z" value="6">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:E_MAP_ZONE_DATA" value="9">
			<tagname value="E_MAP_ZONE_DATA"/>
			<member name="C:E_MAP_ZONE_NAME" value="0">
				<size value="7"/>
			</member>
			<member name="C:E_MAP_ZONE_SOUND_ID" value="7">
			</member>
			<member name="C:E_MAP_ZONE_AREA_COUNT" value="8">
			</member>
		</member>
		<member name="T:E_PRE_HOOK" value="17">
			<tagname value="E_PRE_HOOK"/>
			<member name="C:E_PRE_HOOK_NAME" value="0">
				<size value="16"/>
			</member>
			<member name="C:E_PRE_HOOK_VALUE" value="16">
			</member>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_DoAllHooks"/>
		</member>
		<member name="T:OpcodeInsnInfo" value="17">
			<tagname value="OpcodeInsnInfo"/>
			<member name="C:OpcodeInsnInfo_name" value="0">
				<size value="15"/>
			</member>
			<member name="C:OpcodeInsnInfo_num_opers" value="15">
			</member>
			<member name="C:OpcodeInsnInfo_needs_reloc" value="16">
				<tagname value="bool"/>
			</member>
		</member>
		<member name="T:ProfCallInfo" value="2">
			<tagname value="ProfCallInfo"/>
			<member name="C:pci_index" value="0">
			</member>
			<member name="C:pci_start_time" value="1">
			</member>
			<referrer name="enter_public"/>
		</member>
		<member name="T:ProfEntryCode" value="8">
			<tagname value="ProfEntryCode"/>
			<member name="C:pec_push_address" value="0">
				<size value="2"/>
			</member>
			<member name="C:pec_push_index" value="2">
				<size value="2"/>
			</member>
			<member name="C:pec_push_8" value="4">
				<size value="2"/>
			</member>
			<member name="C:pec_call_enter" value="6">
				<size value="2"/>
			</member>
			<referrer name="new_pec"/>
		</member>
		<member name="T:ProfPublicInfo" value="3">
			<tagname value="ProfPublicInfo"/>
			<member name="C:ppi_child_time" value="0">
			</member>
			<member name="C:ppi_total_time" value="1">
			</member>
			<member name="C:ppi_num_calls" value="2">
			</member>
		</member>
		<member name="T:SAZONE_MAIN" value="34">
			<tagname value="SAZONE_MAIN"/>
			<member name="C:SAZONE_NAME" value="0">
				<size value="28"/>
			</member>
			<member name="C:SAZONE_AREA" value="28">
				<tagname value="Float"/>
				<size value="6"/>
			</member>
		</member>
		<member name="T:businessInfoEnum" value="150">
			<tagname value="businessInfoEnum"/>
			<member name="C:bizID" value="0">
			</member>
			<member name="C:bizTitle" value="1">
				<size value="33"/>
			</member>
			<member name="C:bizDescription" value="34">
				<size value="65"/>
			</member>
			<member name="C:bizOwner" value="99">
				<size value="33"/>
			</member>
			<member name="C:bizX" value="132">
				<tagname value="Float"/>
			</member>
			<member name="C:bizY" value="133">
				<tagname value="Float"/>
			</member>
			<member name="C:bizZ" value="134">
				<tagname value="Float"/>
			</member>
			<member name="C:bizExtX" value="135">
				<tagname value="Float"/>
			</member>
			<member name="C:bizExtY" value="136">
				<tagname value="Float"/>
			</member>
			<member name="C:bizExtZ" value="137">
				<tagname value="Float"/>
			</member>
			<member name="C:bizFee" value="138">
			</member>
			<member name="C:bizStatic" value="139">
			</member>
			<member name="C:bizType" value="140">
			</member>
			<member name="C:bizInterior" value="141">
			</member>
			<member name="C:bizOwned" value="142">
			</member>
			<member name="C:bizPrice" value="143">
			</member>
			<member name="C:bizOwnerID" value="144">
			</member>
			<member name="C:bizLocked" value="145">
			</member>
			<member name="C:bizBalance" value="146">
			</member>
			<member name="C:bizText" value="147">
				<tagname value="Text3D"/>
			</member>
			<member name="C:bizPickup" value="148">
			</member>
			<member name="C:bizArea" value="149">
			</member>
		</member>
		<member name="T:clanInfoEnum" value="429">
			<tagname value="clanInfoEnum"/>
			<member name="C:cID" value="0">
			</member>
			<member name="C:cOwnerID" value="1">
			</member>
			<member name="C:cName" value="2">
				<size value="24"/>
			</member>
			<member name="C:cTag" value="26">
				<size value="16"/>
			</member>
			<member name="C:cClanColor" value="42">
				<size value="32"/>
			</member>
			<member name="C:cMotd" value="74">
				<size value="128"/>
			</member>
			<member name="C:cRank1" value="202">
				<size value="32"/>
			</member>
			<member name="C:cRank2" value="234">
				<size value="32"/>
			</member>
			<member name="C:cRank3" value="266">
				<size value="32"/>
			</member>
			<member name="C:cRank4" value="298">
				<size value="32"/>
			</member>
			<member name="C:cRank5" value="330">
				<size value="32"/>
			</member>
			<member name="C:cRank6" value="362">
				<size value="32"/>
			</member>
			<member name="C:cRank7" value="394">
				<size value="32"/>
			</member>
			<member name="C:cDays" value="426">
			</member>
			<member name="C:cSlots" value="427">
			</member>
			<member name="C:cTotal" value="428">
			</member>
		</member>
		<member name="T:contractEnum" value="3">
			<tagname value="contractEnum"/>
			<member name="C:cID" value="0">
			</member>
			<member name="C:cAgainst" value="1">
			</member>
			<member name="C:cMoney" value="2">
			</member>
		</member>
		<member name="T:dInfo" value="4">
			<tagname value="dInfo"/>
			<member name="C:dID" value="0">
			</member>
			<member name="C:dModel" value="1">
			</member>
			<member name="C:dPrice" value="2">
			</member>
			<member name="C:dStock" value="3">
			</member>
		</member>
		<member name="T:e_PLAYER_DATA" value="25">
			<tagname value="e_PLAYER_DATA"/>
			<member name="C:e_bFlags" value="0">
				<tagname value="e_PLAYER_FLAGS"/>
			</member>
			<member name="C:e_fPacket" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:e_iHoldTimer" value="2">
			</member>
			<member name="C:e_iFrames" value="3">
			</member>
			<member name="C:e_iDrunk" value="4">
			</member>
			<member name="C:e_iMoney" value="5">
			</member>
			<member name="C:e_iTargetID" value="6">
			</member>
			<member name="C:e_iAction" value="7">
			</member>
			<member name="C:e_iAnimIndex" value="8">
			</member>
			<member name="C:e_iHoverColor" value="9">
			</member>
			<member name="C:e_iShotsFired" value="10">
				<size value="12"/>
			</member>
			<member name="C:e_iLastGun" value="22">
			</member>
			<member name="C:e_iLastAmmo" value="23">
			</member>
			<member name="C:e_iVehicleID" value="24">
			</member>
		</member>
		<member name="T:e_PLAYER_TICK_ENUM" value="6">
			<member name="C:e_PLAYER_TICK" value="0">
			</member>
			<member name="C:e_PLAYER_LAST_UPDATE" value="1">
			</member>
			<member name="C:e_PLAYER_LAST_SHOT" value="2">
			</member>
			<member name="C:e_PLAYER_LAST_JUMP" value="3">
			</member>
			<member name="C:e_PLAYER_BURN_TICK" value="4">
			</member>
			<member name="C:e_PLAYER_VENDING_TICK" value="5">
			</member>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
		</member>
		<member name="T:e_VEHICLE_DATA" value="5">
			<tagname value="e_VEHICLE_DATA"/>
			<member name="C:e_iPanels" value="0">
			</member>
			<member name="C:e_iDoors" value="1">
			</member>
			<member name="C:e_iLights" value="2">
			</member>
			<member name="C:e_fHealth" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:e_fSpeed" value="4">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:e_VEHICLE_GARAGES" value="4">
			<tagname value="e_VEHICLE_GARAGES"/>
			<member name="C:e_VEHICLE_GARAGE_TYPE" value="0">
			</member>
			<member name="C:e_VEHICLE_GARAGE_X" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:e_VEHICLE_GARAGE_Y" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:e_VEHICLE_GARAGE_Z" value="3">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:e_VENDING_MACHINES" value="4">
			<tagname value="e_VENDING_MACHINES"/>
			<member name="C:e_VENDING_MACHINE_TYPE" value="0">
			</member>
			<member name="C:e_VENDING_MACHINE_X" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:e_VENDING_MACHINE_Y" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:e_VENDING_MACHINE_Z" value="3">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:examenInfoEnum" value="4">
			<tagname value="examenInfoEnum"/>
			<member name="C:dmvID" value="0">
			</member>
			<member name="C:dmvX" value="1">
				<tagname value="Float"/>
			</member>
			<member name="C:dmvY" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:dmvZ" value="3">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:factionInfoEnum" value="187">
			<tagname value="factionInfoEnum"/>
			<member name="C:fID" value="0">
			</member>
			<member name="C:fName" value="1">
				<size value="33"/>
			</member>
			<member name="C:fMotd" value="34">
				<size value="129"/>
			</member>
			<member name="C:fMinLevel" value="163">
			</member>
			<member name="C:fMaxMembers" value="164">
			</member>
			<member name="C:fInterior" value="165">
			</member>
			<member name="C:fType" value="166">
			</member>
			<member name="C:fMapIconType" value="167">
			</member>
			<member name="C:fApps" value="168">
			</member>
			<member name="C:fLocked" value="169">
			</member>
			<member name="C:fEnterX" value="170">
				<tagname value="Float"/>
			</member>
			<member name="C:fEnterY" value="171">
				<tagname value="Float"/>
			</member>
			<member name="C:fEnterZ" value="172">
				<tagname value="Float"/>
			</member>
			<member name="C:fExitX" value="173">
				<tagname value="Float"/>
			</member>
			<member name="C:fExitY" value="174">
				<tagname value="Float"/>
			</member>
			<member name="C:fExitZ" value="175">
				<tagname value="Float"/>
			</member>
			<member name="C:fCommands" value="176">
				<size value="8"/>
			</member>
			<member name="C:fText" value="184">
				<tagname value="Text3D"/>
			</member>
			<member name="C:fMapIcon" value="185">
			</member>
			<member name="C:fPickup" value="186">
			</member>
		</member>
		<member name="T:gasCanEnum" value="8">
			<tagname value="gasCanEnum"/>
			<member name="C:gID" value="0">
			</member>
			<member name="C:gBizID" value="1">
			</member>
			<member name="C:gX" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:gY" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:gZ" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:gFull" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:gLabel" value="6">
				<tagname value="Text3D"/>
			</member>
			<member name="C:gPickup" value="7">
			</member>
		</member>
		<member name="T:houseInfoEnum" value="151">
			<tagname value="houseInfoEnum"/>
			<member name="C:hID" value="0">
			</member>
			<member name="C:hTitle" value="1">
				<size value="33"/>
			</member>
			<member name="C:hDescription" value="34">
				<size value="65"/>
			</member>
			<member name="C:hExtX" value="99">
				<tagname value="Float"/>
			</member>
			<member name="C:hExtY" value="100">
				<tagname value="Float"/>
			</member>
			<member name="C:hExtZ" value="101">
				<tagname value="Float"/>
			</member>
			<member name="C:hX" value="102">
				<tagname value="Float"/>
			</member>
			<member name="C:hY" value="103">
				<tagname value="Float"/>
			</member>
			<member name="C:hZ" value="104">
				<tagname value="Float"/>
			</member>
			<member name="C:hInterior" value="105">
			</member>
			<member name="C:hLocked" value="106">
			</member>
			<member name="C:hPrice" value="107">
			</member>
			<member name="C:hBalance" value="108">
			</member>
			<member name="C:hOwner" value="109">
				<size value="33"/>
			</member>
			<member name="C:hOwnerID" value="142">
			</member>
			<member name="C:hOwned" value="143">
			</member>
			<member name="C:hRentabil" value="144">
			</member>
			<member name="C:hRenters" value="145">
			</member>
			<member name="C:hUpgrade" value="146">
			</member>
			<member name="C:hRentPrice" value="147">
			</member>
			<member name="C:hText" value="148">
				<tagname value="Text3D"/>
			</member>
			<member name="C:hPickup" value="149">
			</member>
			<member name="C:hArea" value="150">
			</member>
		</member>
		<member name="T:jobInfoEnum" value="46">
			<tagname value="jobInfoEnum"/>
			<member name="C:jobID" value="0">
			</member>
			<member name="C:jobName" value="1">
				<size value="33"/>
			</member>
			<member name="C:jobLevel" value="34">
			</member>
			<member name="C:jobLegal" value="35">
			</member>
			<member name="C:jobX" value="36">
				<tagname value="Float"/>
			</member>
			<member name="C:jobY" value="37">
				<tagname value="Float"/>
			</member>
			<member name="C:jobZ" value="38">
				<tagname value="Float"/>
			</member>
			<member name="C:jobXST" value="39">
				<tagname value="Float"/>
			</member>
			<member name="C:jobYST" value="40">
				<tagname value="Float"/>
			</member>
			<member name="C:jobZST" value="41">
				<tagname value="Float"/>
			</member>
			<member name="C:jobText" value="42">
				<tagname value="Text3D"/>
			</member>
			<member name="C:jobTextST" value="43">
				<tagname value="Text3D"/>
			</member>
			<member name="C:jobPickup" value="44">
			</member>
			<member name="C:jobPickupST" value="45">
			</member>
		</member>
		<member name="T:personalVehicleEnum" value="73">
			<tagname value="personalVehicleEnum"/>
			<member name="C:pvID" value="0">
			</member>
			<member name="C:pvModelID" value="1">
			</member>
			<member name="C:pvOwnerID" value="2">
			</member>
			<member name="C:pvColorOne" value="3">
			</member>
			<member name="C:pvColorTwo" value="4">
			</member>
			<member name="C:pvX" value="5">
				<tagname value="Float"/>
			</member>
			<member name="C:pvY" value="6">
				<tagname value="Float"/>
			</member>
			<member name="C:pvZ" value="7">
				<tagname value="Float"/>
			</member>
			<member name="C:pvAngle" value="8">
				<tagname value="Float"/>
			</member>
			<member name="C:pvOdometer" value="9">
				<tagname value="Float"/>
			</member>
			<member name="C:pvFuel" value="10">
				<tagname value="Float"/>
			</member>
			<member name="C:pvHealth" value="11">
				<tagname value="Float"/>
			</member>
			<member name="C:pvAge" value="12">
			</member>
			<member name="C:pvCarPlate" value="13">
				<size value="32"/>
			</member>
			<member name="C:pvComponents" value="45">
				<size value="17"/>
			</member>
			<member name="C:pvInsurancePoints" value="62">
			</member>
			<member name="C:pvLock" value="63">
			</member>
			<member name="C:pvVirtualWorld" value="64">
			</member>
			<member name="C:pvInterior" value="65">
			</member>
			<member name="C:pvDamagePanels" value="66">
			</member>
			<member name="C:pvDamageDoors" value="67">
			</member>
			<member name="C:pvDamageLights" value="68">
			</member>
			<member name="C:pvDamageTires" value="69">
			</member>
			<member name="C:pvPaintJob" value="70">
			</member>
			<member name="C:pvSpawnedID" value="71">
			</member>
			<member name="C:pvDespawnTime" value="72">
			</member>
		</member>
		<member name="T:pickInfo" value="6">
			<tagname value="pickInfo"/>
			<member name="C:BIZZ" value="0">
			</member>
			<member name="C:HOUSE" value="1">
			</member>
			<member name="C:GASCAN" value="2">
			</member>
			<member name="C:FACTION" value="3">
			</member>
			<member name="C:JOB" value="4">
			</member>
			<member name="C:SAFE" value="5">
			</member>
		</member>
		<member name="T:playerInfoEnum" value="625">
			<tagname value="playerInfoEnum"/>
			<member name="C:pSQLID" value="0">
			</member>
			<member name="C:pName" value="1">
				<size value="24"/>
			</member>
			<member name="C:pPassword" value="25">
				<size value="65"/>
			</member>
			<member name="C:pEMail" value="90">
				<size value="128"/>
			</member>
			<member name="C:pTutorial" value="218">
				<tagname value="bool"/>
			</member>
			<member name="C:pGender" value="219">
			</member>
			<member name="C:pSkin" value="220">
			</member>
			<member name="C:pAdmin" value="221">
			</member>
			<member name="C:pHelper" value="222">
			</member>
			<member name="C:pRespectPoints" value="223">
			</member>
			<member name="C:pLevel" value="224">
			</member>
			<member name="C:pMoney" value="225">
			</member>
			<member name="C:pBank" value="226">
			</member>
			<member name="C:pStoreBank" value="227">
			</member>
			<member name="C:pHours" value="228">
				<tagname value="Float"/>
			</member>
			<member name="C:pSeconds" value="229">
				<tagname value="Float"/>
			</member>
			<member name="C:pDrivingLicense" value="230">
			</member>
			<member name="C:pDrivingLicenseSuspend" value="231">
			</member>
			<member name="C:pWeaponLicense" value="232">
			</member>
			<member name="C:pWeaponLicenseSuspend" value="233">
			</member>
			<member name="C:pFlyLicense" value="234">
			</member>
			<member name="C:pFlyLicenseSuspend" value="235">
			</member>
			<member name="C:pBoatLicense" value="236">
			</member>
			<member name="C:pBoatLicenseSuspend" value="237">
			</member>
			<member name="C:pMute" value="238">
			</member>
			<member name="C:pWarn" value="239">
			</member>
			<member name="C:pReportMute" value="240">
			</member>
			<member name="C:pJob" value="241">
			</member>
			<member name="C:pBusiness" value="242">
			</member>
			<member name="C:pBusinessID" value="243">
			</member>
			<member name="C:pHouse" value="244">
			</member>
			<member name="C:pHouseID" value="245">
			</member>
			<member name="C:pRent" value="246">
			</member>
			<member name="C:pSpawnChange" value="247">
			</member>
			<member name="C:pVehicleSlots" value="248">
			</member>
			<member name="C:pFishTimes" value="249">
			</member>
			<member name="C:pFishSkill" value="250">
			</member>
			<member name="C:pTruckTimes" value="251">
			</member>
			<member name="C:pTruckSkill" value="252">
			</member>
			<member name="C:pArmsTimes" value="253">
			</member>
			<member name="C:pArmsSkill" value="254">
			</member>
			<member name="C:pDrugsTimes" value="255">
			</member>
			<member name="C:pDrugsSkill" value="256">
			</member>
			<member name="C:pCarpenterSkill" value="257">
			</member>
			<member name="C:pCarpenterTimes" value="258">
			</member>
			<member name="C:pIp" value="259">
				<size value="16"/>
			</member>
			<member name="C:pLastIp" value="275">
				<size value="16"/>
			</member>
			<member name="C:pDrugs" value="291">
			</member>
			<member name="C:pPremium" value="292">
			</member>
			<member name="C:pVIP" value="293">
			</member>
			<member name="C:pBeta" value="294">
			</member>
			<member name="C:pMats" value="295">
			</member>
			<member name="C:pFaction" value="296">
			</member>
			<member name="C:pFactionPunish" value="297">
			</member>
			<member name="C:pFactionWarns" value="298">
			</member>
			<member name="C:pFactionAge" value="299">
			</member>
			<member name="C:pFactionRank" value="300">
			</member>
			<member name="C:pPhone" value="301">
			</member>
			<member name="C:pPhoneBook" value="302">
			</member>
			<member name="C:pWantedLevel" value="303">
			</member>
			<member name="C:pJailed" value="304">
			</member>
			<member name="C:pJailTime" value="305">
			</member>
			<member name="C:pArrested" value="306">
			</member>
			<member name="C:pWantedDeaths" value="307">
			</member>
			<member name="C:pCommands" value="308">
			</member>
			<member name="C:pNeedProgress" value="309">
				<size value="2"/>
			</member>
			<member name="C:pDailyMission" value="311">
				<size value="2"/>
			</member>
			<member name="C:pProgress" value="313">
				<size value="2"/>
			</member>
			<member name="C:pWTChannel" value="315">
			</member>
			<member name="C:pWTalkie" value="316">
			</member>
			<member name="C:pWToggle" value="317">
			</member>
			<member name="C:pLiveToggle" value="318">
			</member>
			<member name="C:pWantedTime" value="319">
			</member>
			<member name="C:pGuns" value="320">
				<tagname value="bool"/>
				<size value="6"/>
			</member>
			<member name="C:pClan" value="326">
			</member>
			<member name="C:pClanTag" value="327">
			</member>
			<member name="C:pClanRank" value="328">
			</member>
			<member name="C:pClanAge" value="329">
			</member>
			<member name="C:pClanWarns" value="330">
			</member>
			<member name="C:pPremiumPoints" value="331">
			</member>
			<member name="C:pFPSShow" value="332">
			</member>
			<member name="C:pLoginTries" value="333">
			</member>
			<member name="C:pAFKSeconds" value="334">
			</member>
			<member name="C:pLogged" value="335">
				<tagname value="bool"/>
			</member>
			<member name="C:pLoginEnabled" value="336">
				<tagname value="bool"/>
			</member>
			<member name="C:pLoginTimer" value="337">
				<tagname value="Timer"/>
			</member>
			<member name="C:pLastPosX" value="338">
				<tagname value="Float"/>
			</member>
			<member name="C:pLastPosY" value="339">
				<tagname value="Float"/>
			</member>
			<member name="C:pLastPosZ" value="340">
				<tagname value="Float"/>
			</member>
			<member name="C:pExamenVehicle" value="341">
			</member>
			<member name="C:pExamenCheckpoint" value="342">
			</member>
			<member name="C:pFlymode" value="343">
				<tagname value="bool"/>
			</member>
			<member name="C:pFreeze" value="344">
				<tagname value="bool"/>
			</member>
			<member name="C:pMark" value="345">
				<tagname value="bool"/>
			</member>
			<member name="C:pMarkX" value="346">
				<tagname value="Float"/>
			</member>
			<member name="C:pMarkY" value="347">
				<tagname value="Float"/>
			</member>
			<member name="C:pMarkZ" value="348">
				<tagname value="Float"/>
			</member>
			<member name="C:pHealth" value="349">
				<tagname value="Float"/>
			</member>
			<member name="C:pArmour" value="350">
				<tagname value="Float"/>
			</member>
			<member name="C:pMarkInterior" value="351">
			</member>
			<member name="C:pTutorialSeconds" value="352">
			</member>
			<member name="C:pReportChat" value="353">
			</member>
			<member name="C:pTutorialActive" value="354">
			</member>
			<member name="C:pCheckpoint" value="355">
			</member>
			<member name="C:pCheckpointID" value="356">
			</member>
			<member name="C:pinBusiness" value="357">
			</member>
			<member name="C:pinHouse" value="358">
			</member>
			<member name="C:pinVehicle" value="359">
			</member>
			<member name="C:pinDealer" value="360">
			</member>
			<member name="C:pinFaction" value="361">
			</member>
			<member name="C:pTintaApasata" value="362">
			</member>
			<member name="C:pTransferMoney" value="363">
			</member>
			<member name="C:pTransferPlayer" value="364">
			</member>
			<member name="C:pspecFaction" value="365">
			</member>
			<member name="C:pPhoneOnline" value="366">
			</member>
			<member name="C:pReply" value="367">
			</member>
			<member name="C:pDistanceCheckpoint" value="368">
			</member>
			<member name="C:pFactionDuty" value="369">
			</member>
			<member name="C:pCuffed" value="370">
			</member>
			<member name="C:pTazer" value="371">
			</member>
			<member name="C:pMDCon" value="372">
			</member>
			<member name="C:pCollision" value="373">
			</member>
			<member name="C:pUnFreezeTime" value="374">
			</member>
			<member name="C:pFreezed" value="375">
			</member>
			<member name="C:pAnimLibLoaded" value="376">
			</member>
			<member name="C:pAnimLooping" value="377">
			</member>
			<member name="C:pTaxiDuty" value="378">
			</member>
			<member name="C:pTaxiFare" value="379">
			</member>
			<member name="C:pTaxiDriver" value="380">
			</member>
			<member name="C:pTaxiMoney" value="381">
			</member>
			<member name="C:pLiveOffer" value="382">
			</member>
			<member name="C:pTalkingLive" value="383">
			</member>
			<member name="C:pQuestionText" value="384">
				<size value="180"/>
			</member>
			<member name="C:pInLesson" value="564">
			</member>
			<member name="C:pLesson" value="565">
			</member>
			<member name="C:pLicense" value="566">
			</member>
			<member name="C:pLicenseOffer" value="567">
			</member>
			<member name="C:pShowTurfs" value="568">
			</member>
			<member name="C:pSafeID" value="569">
			</member>
			<member name="C:pSelectedItem" value="570">
			</member>
			<member name="C:pOnTurf" value="571">
			</member>
			<member name="C:areaBizz" value="572">
			</member>
			<member name="C:areaHouse" value="573">
			</member>
			<member name="C:areaFaction" value="574">
			</member>
			<member name="C:areaJob" value="575">
			</member>
			<member name="C:areaGascan" value="576">
			</member>
			<member name="C:areaSafe" value="577">
			</member>
			<member name="C:pEnableBoost" value="578">
			</member>
			<member name="C:pAdminCover" value="579">
				<size value="24"/>
			</member>
			<member name="C:pDrunkLevel" value="603">
			</member>
			<member name="C:pFPS" value="604">
			</member>
			<member name="C:pSelectVehicle" value="605">
				<size value="20"/>
			</member>
		</member>
		<member name="T:reportInfoEnum" value="132">
			<tagname value="reportInfoEnum"/>
			<member name="C:reportID" value="0">
			</member>
			<member name="C:reportPlayer" value="1">
			</member>
			<member name="C:reportText" value="2">
				<size value="128"/>
			</member>
			<member name="C:reportType" value="130">
			</member>
			<member name="C:reportTimer" value="131">
				<tagname value="Timer"/>
			</member>
		</member>
		<member name="T:safeEnum" value="11">
			<tagname value="safeEnum"/>
			<member name="C:sID" value="0">
			</member>
			<member name="C:sFactionID" value="1">
			</member>
			<member name="C:sPosX" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:sPosY" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:sPosZ" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:sMoney" value="5">
			</member>
			<member name="C:sDrugs" value="6">
			</member>
			<member name="C:sMaterials" value="7">
			</member>
			<member name="C:sVirtualID" value="8">
			</member>
			<member name="C:sPickup" value="9">
			</member>
			<member name="C:sText" value="10">
				<tagname value="Text3D"/>
			</member>
		</member>
		<member name="T:turfsEnum" value="6">
			<tagname value="turfsEnum"/>
			<member name="C:tID" value="0">
			</member>
			<member name="C:tOwned" value="1">
			</member>
			<member name="C:tMinX" value="2">
				<tagname value="Float"/>
			</member>
			<member name="C:tMaxX" value="3">
				<tagname value="Float"/>
			</member>
			<member name="C:tMinY" value="4">
				<tagname value="Float"/>
			</member>
			<member name="C:tMaxY" value="5">
				<tagname value="Float"/>
			</member>
		</member>
		<member name="T:warInfoEnum" value="3">
			<tagname value="warInfoEnum"/>
			<member name="C:wFaction" value="0">
			</member>
			<member name="C:wAttacker" value="1">
			</member>
			<member name="C:wTime" value="2">
			</member>
		</member>
		<member name="T:zoneInfo" value="15">
			<tagname value="zoneInfo"/>
			<member name="C:zexist" value="0">
				<tagname value="bool"/>
			</member>
			<member name="C:npart" value="1">
				<size value="5"/>
			</member>
			<member name="C:npart2" value="6">
				<size value="5"/>
			</member>
			<member name="C:border" value="11">
				<size value="4"/>
			</member>
		</member>

		<!-- constants -->
		<member name="C:AMX_HDR_OFFSET_AMX_VERSION" value="7">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_CIP" value="28">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_COD" value="12">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_DAT" value="16">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_DEFSIZE" value="10">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_FILE_VERSION" value="6">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_FLAGS" value="8">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_HEA" value="20">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_LIBRARIES" value="40">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_MAGIC" value="4">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_NAMETABLE" value="52">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_NATIVES" value="36">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_PUBLICS" value="32">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_PUBVARS" value="44">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_SIZE" value="0">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_STP" value="24">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:AMX_HDR_OFFSET_TAGS" value="48">
			<referrer name="GetAmxHeaderNow"/>
		</member>
		<member name="C:CHECKPOINT_ARMSDEALER" value="8">
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
		</member>
		<member name="C:CHECKPOINT_ARMSDEALER2" value="9">
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_CARPENTER" value="10">
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
		</member>
		<member name="C:CHECKPOINT_CARPENTER2" value="11">
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_DRUGSDEALER" value="6">
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
		</member>
		<member name="C:CHECKPOINT_DRUGSDEALER2" value="7">
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_FACTION_DUTY" value="12">
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="C:CHECKPOINT_FINDCAR" value="2">
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="C:CHECKPOINT_GETHIT" value="15">
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="pc_cmd_gethit"/>
		</member>
		<member name="C:CHECKPOINT_GPS" value="13">
			<referrer name="dialog_GPS1"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="C:CHECKPOINT_JOB" value="1">
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_NONE" value="0">
			<referrer name="resetVars"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="CancelJob"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerCarFind"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="C:CHECKPOINT_TRUCKERLS" value="5">
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_TRUCKERLV" value="4">
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_TRUCKERSF" value="3">
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="C:CHECKPOINT_WANTEDFIND" value="14">
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
		</member>
		<member name="C:EOS" value="0">
			<referrer name="string_fast"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="formatNumber"/>
			<referrer name="update"/>
			<referrer name="resetVars"/>
			<referrer name="sendPlayerError"/>
			<referrer name="sendPlayerSyntax"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="getDateTime"/>
			<referrer name="sendAdmin"/>
			<referrer name="sendHelper"/>
			<referrer name="sendStaff"/>
			<referrer name="oocNews"/>
			<referrer name="kickPlayer"/>
			<referrer name="getWeaponName"/>
			<referrer name="sendToAdmin"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="factionLog"/>
			<referrer name="wantedName"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="showFactionMembers"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="sendClanMessage"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="C:E_STREAMER_EXTRA_ID" value="15">
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
		</member>
		<member name="C:FEMALE_GENDER" value="0">
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
		</member>
		<member name="C:JOB_ARMSDEALER" value="4">
			<referrer name="returnNeededPoints"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="C:JOB_CARPENTER" value="5">
			<referrer name="returnNeededPoints"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="C:JOB_DRUGSDEALER" value="3">
			<referrer name="returnNeededPoints"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="C:JOB_FISHER" value="1">
			<referrer name="returnNeededPoints"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="CancelJob"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="C:JOB_NONE" value="0">
			<referrer name="@yH_OnPlayerConnect@008"/>
		</member>
		<member name="C:JOB_TRUCKER" value="2">
			<referrer name="returnNeededPoints"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="C:MALE_GENDER" value="1">
			<referrer name="dialog_GENDER"/>
		</member>
		<member name="C:NUM_OPCODES" value="138">
			<referrer name="IsOpcodeValid"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="UnrelocateOpcode"/>
			<referrer name="GetOpcodeInstructionInformation"/>
			<referrer name="GetOpcodeInstructionName"/>
			<referrer name="GetOpcodeInstructionParameters"/>
			<referrer name="GetOpcodeInstructionRelocatable"/>
			<referrer name="AsmEmitOpcode"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmNext"/>
		</member>
		<member name="C:REPORT_TYPE_CHEATER" value="1">
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
		</member>
		<member name="C:REPORT_TYPE_NONE" value="3">
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="C:REPORT_TYPE_NORMAL" value="0">
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
		</member>
		<member name="C:REPORT_TYPE_STUCK" value="2">
			<referrer name="dialog_DIALOG_REPORT"/>
		</member>
		<member name="C:SERVICE_INSTRUCTOR" value="2">
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="C:SERVICE_PARAMEDICS" value="0">
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="C:SERVICE_TAXI" value="1">
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="C:__Pawn" value="778">
		</member>
		<member name="C:cellbits" value="32">
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="YVA2_CodeGenDeepCleanup"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Bit_Set"/>
			<referrer name="Iter_Func@Bits"/>
			<referrer name="Iter_Func@Blanks"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="Malloc_TrySetup"/>
		</member>
		<member name="C:cellmax" value="2147483647">
			<referrer name="operator!(Float:)"/>
			<referrer name="CodeScanGetFunctionAsm"/>
			<referrer name="CodeScanGetMatchAsm"/>
			<referrer name="exit_public"/>
			<referrer name="Range"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="C:cellmin" value="-2147483648">
			<referrer name="operator-(Float:)"/>
			<referrer name="CallN"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<referrer name="CallNative"/>
			<referrer name="CallNativeByAddress"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanInit"/>
			<referrer name="exit_public"/>
			<referrer name="Random"/>
			<referrer name="endofline"/>
			<referrer name="ishex"/>
			<referrer name="isnumeric"/>
			<referrer name="SkipWhitespace"/>
			<referrer name="Trim"/>
			<referrer name="Range"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_Alloc_InternalC"/>
			<referrer name="Iter_Alloc_InternalD"/>
			<referrer name="Iter_Free_Internal"/>
			<referrer name="Iter_FreeMulti_Internal"/>
			<referrer name="Iter_Add_InternalC"/>
			<referrer name="Iter_Add_InternalD"/>
			<referrer name="Iter_Index_Internal"/>
			<referrer name="Iter_SafeRemove_InternalC"/>
			<referrer name="Iter_SafeRemove_InternalD"/>
			<referrer name="Iter_GetMulti_Internal"/>
			<referrer name="Iter_Func@Range"/>
			<referrer name="Iter_Func@Random"/>
		</member>
		<member name="C:debug" value="2">
			<referrer name="RelocateOpcodeNow"/>
		</member>
		<member name="C:false" value="0">
			<tagname value="bool"/>
			<referrer name="GangZoneDestroyEx"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="GetOpcodeInstructionRelocatable"/>
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmWrite"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanGetFuncName"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanCall"/>
			<referrer name="ProfilerWriteData"/>
			<referrer name="Utils_PreSort"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="Hooks_IsolateName"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="@yH_OnPlayerDisconnect@002"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="_Master_Get"/>
			<referrer name="Master_GetCurrentMaster"/>
			<referrer name="Callback_Get"/>
			<referrer name="InitFly"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<referrer name="StopFly"/>
			<referrer name="CB_ApplyAnimation"/>
			<referrer name="CB_CancelSelectTextDraw"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
			<referrer name="TrollDetect"/>
			<referrer name="IsVehicleOccupied"/>
			<referrer name="isPlane"/>
			<referrer name="isBoat"/>
			<referrer name="isBike"/>
			<referrer name="isMotor"/>
			<referrer name="strmatch"/>
			<referrer name="isValidEmail"/>
			<referrer name="isPlayerLogged"/>
			<referrer name="resetVars"/>
			<referrer name="IsSeatTaked"/>
			<referrer name="PlayerHaveReport"/>
			<referrer name="PlayerMoney"/>
			<referrer name="CheckerBigInt"/>
			<referrer name="FormatIntNumber"/>
			<referrer name="GetMapZoneName"/>
			<referrer name="GetMapZoneSoundID"/>
			<referrer name="GetMapZoneAreaCount"/>
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="SetPlayerToFactionColor"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="dialog_DIALOG_SETGUN"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="CancelJob"/>
			<referrer name="sendClanMessage"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="SetPlayerFreeze"/>
			<referrer name="faceReclama"/>
			<referrer name="removeFunction"/>
			<referrer name="PlayerToPoint"/>
			<referrer name="IsPlayerInTurf"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerRequestSpawn"/>
		</member>
		<member name="C:true" value="1">
			<tagname value="bool"/>
			<referrer name="IsPlayerInZone"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="ResetStaticAmxHeader"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="GetTagNameFromID"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="AsmEmitJrelLabelStringize"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmWrite"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanGetFuncName"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanRun"/>
			<referrer name="ProfilerWriteData"/>
			<referrer name="boolstr"/>
			<referrer name="Utils_PreSort"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetFunctionWritePoint"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="_Timer_D"/>
			<referrer name="_Master_Get"/>
			<referrer name="Callback_Get"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="StartFly"/>
			<referrer name="StopFly"/>
			<referrer name="CB_SelectTextDraw"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Callback_CheckAnimation"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
			<referrer name="IsVehicleOccupied"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="sendSplitMessage"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="isPlane"/>
			<referrer name="isBoat"/>
			<referrer name="isBike"/>
			<referrer name="isMotor"/>
			<referrer name="setSkin"/>
			<referrer name="showStats"/>
			<referrer name="showLicenses"/>
			<referrer name="playerTextDraws"/>
			<referrer name="updateLevelBar"/>
			<referrer name="destroyPlayerTextDraws"/>
			<referrer name="serverTextDraws"/>
			<referrer name="destroyServerTextDraws"/>
			<referrer name="strmatch"/>
			<referrer name="isValidEmail"/>
			<referrer name="isPlayerLogged"/>
			<referrer name="resetVars"/>
			<referrer name="clearChat"/>
			<referrer name="sendAdmin"/>
			<referrer name="sendHelper"/>
			<referrer name="sendStaff"/>
			<referrer name="oocNews"/>
			<referrer name="IsNumeric"/>
			<referrer name="examenFail"/>
			<referrer name="kickPlayer"/>
			<referrer name="IsSeatTaked"/>
			<referrer name="GetPlayerWeapons"/>
			<referrer name="PlayerHaveReport"/>
			<referrer name="GetPlayerID"/>
			<referrer name="sendToAdmin"/>
			<referrer name="SetPlayerHealthEx"/>
			<referrer name="SetPlayerArmourEx"/>
			<referrer name="removeMaps"/>
			<referrer name="PlayerMoney"/>
			<referrer name="Add64Bit"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="updatePlayer"/>
			<referrer name="CheckerBigInt"/>
			<referrer name="Translate32Bit"/>
			<referrer name="formatNumbers2"/>
			<referrer name="FormatIntNumber"/>
			<referrer name="dialog_EMAIL"/>
			<referrer name="wrongPass"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_SPAWNCHANGE"/>
			<referrer name="dialog_GPS"/>
			<referrer name="dialog_GPS1"/>
			<referrer name="dialog_TOG"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="dialog_DIALOG_HUD"/>
			<referrer name="@yH_OnGameModeInit@005"/>
			<referrer name="@yH_OnPlayerConnect@005"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_ADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_houseoption"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_renters"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="_GetMapZoneLoopStartIndex"/>
			<referrer name="GetMapZoneName"/>
			<referrer name="GetMapZoneSoundID"/>
			<referrer name="GetMapZoneAreaCount"/>
			<referrer name="@yH_OnGameModeInit@007"/>
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="factionLog"/>
			<referrer name="save_guns"/>
			<referrer name="@yH_OnPlayerEnterVehicle@007"/>
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="showMDC"/>
			<referrer name="whenPlayerLeaveFaction"/>
			<referrer name="sendPolice"/>
			<referrer name="SetPlayerToFactionColor"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_blockf"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_members"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="dialog_DIALOG_SETGUN"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="TimerGetHit"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="pc_cmd_myraport"/>
			<referrer name="addRaportPoint"/>
			<referrer name="saveSafe"/>
			<referrer name="pc_cmd_fdeposit"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="@yH_OnGameModeInit@008"/>
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="@yH_OnPlayerDisconnect@008"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="FishingTimer"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="usedrugsTimer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
			<referrer name="@yH_OnGameModeInit@009"/>
			<referrer name="@yH_OnPlayerConnect@009"/>
			<referrer name="advertismentTimer"/>
			<referrer name="dialog_BIZ_OPTION"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_ADMIN"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizoption"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_balance"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_myad"/>
			<referrer name="pc_cmd_deletemyad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="@yH_OnPlayerConnect@010"/>
			<referrer name="@yH_OnPlayerDisconnect@010"/>
			<referrer name="CautaHelper"/>
			<referrer name="helpnTimer"/>
			<referrer name="pc_cmd_helduty"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="@yH_OnPlayerConnect@011"/>
			<referrer name="sendClanMessage"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="pc_cmd_clan"/>
			<referrer name="dialog_DIALOG_CLAN"/>
			<referrer name="dialog_DIALOG_CLANTAG"/>
			<referrer name="SetClanTag"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="MySQLLoad"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkPlayerAccount"/>
			<referrer name="assignCheckpointID"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="BanIPOffline"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountJail"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="checkAccountJailo"/>
			<referrer name="serverWeapon"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="SetPlayerFreeze"/>
			<referrer name="questProgress"/>
			<referrer name="giveQuest"/>
			<referrer name="resetQuest"/>
			<referrer name="checkMission"/>
			<referrer name="faceReclama"/>
			<referrer name="removeFunction"/>
			<referrer name="Reclama"/>
			<referrer name="PlayerToPoint"/>
			<referrer name="IsPlayerInTurf"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="dialog_MY_GARAGE"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="getVehicleOwner"/>
			<referrer name="ModVehicle"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="updateGasCan"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="Timers"/>
			<referrer name="TimersWantedFind"/>
			<referrer name="TimerPos"/>
			<referrer name="TimerCarFind"/>
			<referrer name="TimerTutorial"/>
			<referrer name="respawnTimer"/>
			<referrer name="ExpirationReport"/>
			<referrer name="closeGate"/>
			<referrer name="tazerTimer"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_ah"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_resetquests"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_speed"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="pc_cmd_spawnchange"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_animlist"/>
			<referrer name="pc_cmd_carhand"/>
			<referrer name="pc_cmd_lifejump"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_exhaust"/>
			<referrer name="pc_cmd_rcarjack1"/>
			<referrer name="pc_cmd_lcarjack1"/>
			<referrer name="pc_cmd_rcarjack2"/>
			<referrer name="pc_cmd_lcarjack2"/>
			<referrer name="pc_cmd_hoodfrisked"/>
			<referrer name="pc_cmd_lightcig"/>
			<referrer name="pc_cmd_tapcig"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_clearanim"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_box"/>
			<referrer name="pc_cmd_lowthrow"/>
			<referrer name="pc_cmd_highthrow"/>
			<referrer name="pc_cmd_leftslap"/>
			<referrer name="pc_cmd_handsup"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_laugh"/>
			<referrer name="pc_cmd_lookout"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_crossarms"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_vomit"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_frisked"/>
			<referrer name="pc_cmd_exhausted"/>
			<referrer name="pc_cmd_injured"/>
			<referrer name="pc_cmd_slapass"/>
			<referrer name="pc_cmd_deal"/>
			<referrer name="pc_cmd_dealstance"/>
			<referrer name="pc_cmd_crack"/>
			<referrer name="pc_cmd_wank"/>
			<referrer name="pc_cmd_salute"/>
			<referrer name="pc_cmd_gro"/>
			<referrer name="pc_cmd_sup"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_push"/>
			<referrer name="pc_cmd_akick"/>
			<referrer name="pc_cmd_lowbodypush"/>
			<referrer name="pc_cmd_headbutt"/>
			<referrer name="pc_cmd_pee"/>
			<referrer name="pc_cmd_koface"/>
			<referrer name="pc_cmd_kostomach"/>
			<referrer name="pc_cmd_kiss"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_lay2"/>
			<referrer name="pc_cmd_hitch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_medic"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_sit"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_bomb"/>
			<referrer name="pc_cmd_getarrested"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_fucku"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_dance"/>
			<referrer name="pc_cmd_jumpwater"/>
			<referrer name="pc_cmd_quests"/>
			<referrer name="pc_cmd_wthelp"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_freqmembers"/>
			<referrer name="pc_cmd_tog"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="dialog_DIALOG_HELP"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="ShowCamera"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="HideDealerShipTD"/>
			<referrer name="LoadDsVehs"/>
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerConnect@013"/>
			<referrer name="@yH_OnPlayerDeath@013"/>
			<referrer name="@yH_OnPlayerStateChange@013"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="InsertEmail"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="dialog_DIALOG_EMAILS2"/>
			<referrer name="pc_cmd_emails"/>
			<referrer name="pc_cmd_insertemail"/>
			<referrer name="OnQueryError"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>

		<!-- variables -->
		<member name="F:@Ix">
			<attribute name="public"/>
		</member>
		<member name="F:AMX_BASE_ADDRESS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_InvalidateName"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_ComparePublics"/>
			<referrer name="Hooks_SortPublics"/>
			<referrer name="@yH_OnScriptInit@003"/>
			<referrer name="I@E"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:AMX_HEADER_AMX_VERSION">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_CIP">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_COD">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobal"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_Read"/>
			<referrer name="bernstein"/>
			<referrer name="rawMemset"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@E"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_IsHooked"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
		</member>
		<member name="F:AMX_HEADER_DAT">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_TraceCode"/>
			<referrer name="AMX_TraceMemory"/>
			<referrer name="HookChain_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_DEFSIZE">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_FILE_VERSION">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_FLAGS">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_HEA">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_TraceMemory"/>
			<referrer name="Malloc_TrySetup"/>
		</member>
		<member name="F:AMX_HEADER_LIBRARIES">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_MAGIC">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_NAMETABLE">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_NATIVES">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntryFromNativeIndex"/>
			<referrer name="AMX_GetNativeIndexFromEntry"/>
			<referrer name="Hooks_SortPublics"/>
		</member>
		<member name="F:AMX_HEADER_PUBLICS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
			<referrer name="AMX_GetEntryFromPublicIndex"/>
			<referrer name="AMX_GetPublicIndexFromEntry"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="Hooks_ComparePublics"/>
			<referrer name="Hooks_SortPublics"/>
			<referrer name="StoredF_WritePublicCode"/>
		</member>
		<member name="F:AMX_HEADER_PUBVARS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_HEADER_SIZE">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_STP">
			<referrer name="Debug_OnScriptInit"/>
		</member>
		<member name="F:AMX_HEADER_TAGS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetBaseCount"/>
		</member>
		<member name="F:AMX_REAL_ADDRESS">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="I@E"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:AMX_REAL_DATA">
			<referrer name="Debug_OnScriptInit"/>
			<referrer name="AMX_GetGlobalAddress"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Callback_Array"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
		</member>
		<member name="F:ASM_ARGUMENTS_OFFSET">
			<referrer name="AsmGetArgOffset"/>
		</member>
		<member name="F:ASM_CALLER_FRAME_OFFSET">
		</member>
		<member name="F:ASM_CTRL_CIP">
		</member>
		<member name="F:ASM_CTRL_COD">
		</member>
		<member name="F:ASM_CTRL_DAT">
		</member>
		<member name="F:ASM_CTRL_FRM">
		</member>
		<member name="F:ASM_CTRL_HEA">
		</member>
		<member name="F:ASM_CTRL_JIT">
		</member>
		<member name="F:ASM_CTRL_JMP">
		</member>
		<member name="F:ASM_CTRL_STK">
		</member>
		<member name="F:ASM_CTRL_STP">
		</member>
		<member name="F:ASM_LOCALS_OFFSET">
		</member>
		<member name="F:ASM_RETURN_ADDR_OFFSET">
		</member>
		<member name="F:AdText">
			<referrer name="advertismentTimer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_myad"/>
			<referrer name="pc_cmd_deletemyad"/>
			<referrer name="pc_cmd_deletead"/>
		</member>
		<member name="F:AdTimer">
			<referrer name="@yH_OnPlayerConnect@009"/>
			<referrer name="totalAds"/>
			<referrer name="advertismentTimer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_myad"/>
			<referrer name="pc_cmd_deletemyad"/>
			<referrer name="pc_cmd_deletead"/>
		</member>
		<member name="F:AntiCheatWarnings">
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:CELLMIN_ON_MATCHES">
		</member>
		<member name="F:ClockTD">
			<tagname value="Text"/>
			<referrer name="serverTextDraws"/>
			<referrer name="destroyServerTextDraws"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerM"/>
			<referrer name="Timers"/>
		</member>
		<member name="F:Contract">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="TimerGetHit"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:ConversationOpen">
			<referrer name="@yH_OnPlayerConnect@010"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_ar"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
		</member>
		<member name="F:CountTime">
			<referrer name="Timers"/>
			<referrer name="pc_cmd_count"/>
		</member>
		<member name="F:DSModels">
			<referrer name="ShowDealerShipTD"/>
			<referrer name="LoadDSVehicles"/>
			<referrer name="LoadDsVehs"/>
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
		</member>
		<member name="F:DealerCar">
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
		</member>
		<member name="F:DealerCarType">
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
		</member>
		<member name="F:DealerID">
			<referrer name="ShowDealerShipTD"/>
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
		</member>
		<member name="F:DebugVehicles">
			<tagname value="Float"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="InsertCarDS"/>
		</member>
		<member name="F:Diley">
			<referrer name="OnPlayerText"/>
		</member>
		<member name="F:DileyCMD">
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="OnPlayerCommandPerformed"/>
		</member>
		<member name="F:F@o">
		</member>
		<member name="F:FALSE">
			<tagname value="bool"/>
		</member>
		<member name="F:FishNames">
			<referrer name="FishingTimer"/>
		</member>
		<member name="F:FishTimer">
			<tagname value="Timer"/>
			<referrer name="@yH_OnPlayerDisconnect@008"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="F:FishWeight">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="CancelJob"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:Fishing">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="F:GunName">
			<referrer name="pc_cmd_setguns"/>
			<referrer name="dialog_DIALOG_SETGUN"/>
		</member>
		<member name="F:GunOrder">
			<referrer name="pc_cmd_order"/>
		</member>
		<member name="F:HelperAtribut">
			<referrer name="@yH_OnPlayerConnect@010"/>
			<referrer name="CautaHelperNou"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_n"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:HelperBusy">
			<referrer name="@yH_OnPlayerConnect@010"/>
			<referrer name="CautaHelperNou"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_ar"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="pc_cmd_skipn"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:HelperDuty">
			<referrer name="@yH_OnPlayerConnect@010"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_helduty"/>
			<referrer name="pc_cmd_helpers"/>
		</member>
		<member name="F:I@">
			<referrer name="Iter_YieldReturn"/>
			<referrer name="Iter_ActorDo_"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_VehicleDo_"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="_Timer_C"/>
			<referrer name="banPlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="wrongPass"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="@yH_OnGameModeInit@005"/>
			<referrer name="@yH_OnGameModeInit@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="fareUpdateTimer_yT@"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar_yT@"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="TimerGetHit_yT@"/>
			<referrer name="@yH_OnGameModeInit@008"/>
			<referrer name="FishingTimer_yT@"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="usedrugsTimer_yT@"/>
			<referrer name="@yH_OnGameModeInit@009"/>
			<referrer name="advertismentTimer_yT@"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="CautaHelper"/>
			<referrer name="helpnTimer_yT@"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="removeFunction"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar_yT@"/>
			<referrer name="TimerSpeedo_yT@"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer_yT@"/>
			<referrer name="kickEx_yT@"/>
			<referrer name="TimerJail_yT@"/>
			<referrer name="TimerWanted_yT@"/>
			<referrer name="TimersWantedFind_yT@"/>
			<referrer name="TimerPos_yT@"/>
			<referrer name="TimerCarFind_yT@"/>
			<referrer name="TimerTutorial_yT@"/>
			<referrer name="respawnTimer_yT@"/>
			<referrer name="ExpirationReport_yT@"/>
			<referrer name="closeGate_yT@"/>
			<referrer name="tazerTimer_yT@"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="testDriveTimer_yT@"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<referrer name="OnPlayerCommandReceived"/>
		</member>
		<member name="F:IDSelected">
			<referrer name="@yH_OnPlayerConnect@005"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="@yH_OnPlayerConnect@009"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_adminbusiness"/>
		</member>
		<member name="F:InWar">
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:InstructorAcceptedCall">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:Iter_Single@Actor">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="Iter_ActorDo"/>
		</member>
		<member name="F:Iter_Single@AdminVehicles">
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="OnVehicleDeath"/>
		</member>
		<member name="F:Iter_Single@BetaPlayers">
			<referrer name="checkPanel"/>
		</member>
		<member name="F:Iter_Single@Bot">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iter_Single@Character">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iter_Single@Contracts">
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:Iter_Single@ExamenCheckpoints">
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="assignCheckpointID"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:Iter_Single@FactionMembers">
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:Iter_Single@FactionSafes">
			<referrer name="LoadSafes"/>
		</member>
		<member name="F:Iter_Single@Freqs">
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_freqmembers"/>
		</member>
		<member name="F:Iter_Single@JailedPlayers">
			<referrer name="pc_cmd_arrest"/>
			<referrer name="TimerJail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
		</member>
		<member name="F:Iter_Single@LocalActor">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:Iter_Single@LocalVehicle">
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:Iter_Single@MutedPlayers">
			<referrer name="mutePlayer"/>
			<referrer name="checkPanel"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@Player">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@PlayerInVehicle">
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:Iter_Single@PlayerVehicles">
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
		</member>
		<member name="F:Iter_Single@PremiumPlayers">
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="checkPanel"/>
		</member>
		<member name="F:Iter_Single@RentersHouses">
			<referrer name="@yH_OnPlayerConnect@005"/>
			<referrer name="pc_cmd_renters"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
		</member>
		<member name="F:Iter_Single@Reports">
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@ServerAdmins">
			<referrer name="showStats"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@ServerBusinesses">
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
		</member>
		<member name="F:Iter_Single@ServerClans">
			<referrer name="LoadClans"/>
			<referrer name="Timers"/>
		</member>
		<member name="F:Iter_Single@ServerFactions">
			<referrer name="LoadFactions"/>
			<referrer name="pc_cmd_factions"/>
		</member>
		<member name="F:Iter_Single@ServerGasCan">
			<referrer name="LoadGasCan"/>
			<referrer name="pc_cmd_addbizgas"/>
		</member>
		<member name="F:Iter_Single@ServerHelpers">
			<referrer name="showStats"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@ServerHouses">
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:Iter_Single@ServerJobs">
			<referrer name="LoadJobs"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="pc_cmd_getjob"/>
		</member>
		<member name="F:Iter_Single@ServerStaff">
			<referrer name="onPlayerLogin"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@ServerTurfs">
			<referrer name="LoadTurfs"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="pc_cmd_attack"/>
		</member>
		<member name="F:Iter_Single@ServerWars">
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:Iter_Single@ServiceCalls">
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:Iter_Single@TotalClanMembers">
			<referrer name="sendClanMessage"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@TotalPlayerVehicles">
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="InsertCarDS"/>
		</member>
		<member name="F:Iter_Single@Vehicle">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="Iter_VehicleDo"/>
		</member>
		<member name="F:Iter_Single@VipPlayers">
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="checkPanel"/>
		</member>
		<member name="F:Iter_Single@Wanteds">
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="onPlayerLogin"/>
		</member>
		<member name="F:Iter_Single@loggedPlayers">
			<referrer name="onPlayerLogin"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iter_Single@serverModelsDS">
			<referrer name="LoadDSVehicles"/>
			<referrer name="LoadDsVehs"/>
		</member>
		<member name="F:Iterator@Actor">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="Iter_ActorDo"/>
		</member>
		<member name="F:Iterator@AdminVehicles">
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="OnVehicleDeath"/>
		</member>
		<member name="F:Iterator@BetaPlayers">
			<referrer name="checkPanel"/>
		</member>
		<member name="F:Iterator@Bot">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iterator@Character">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
		</member>
		<member name="F:Iterator@Contracts">
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:Iterator@ExamenCheckpoints">
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="assignCheckpointID"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:Iterator@FactionMembers">
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:Iterator@FactionSafes">
			<referrer name="LoadSafes"/>
			<referrer name="pc_cmd_createsafe"/>
		</member>
		<member name="F:Iterator@Fib">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Filter">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Freqs">
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_freqmembers"/>
		</member>
		<member name="F:Iterator@JailedPlayers">
			<referrer name="pc_cmd_arrest"/>
			<referrer name="TimerJail"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
		</member>
		<member name="F:Iterator@LocalActor">
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
		</member>
		<member name="F:Iterator@LocalVehicle">
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
		</member>
		<member name="F:Iterator@MutedPlayers">
			<referrer name="mutePlayer"/>
			<referrer name="checkPanel"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@NonNull">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Null">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Player">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="_Timer_D"/>
			<referrer name="isPlayerLogged"/>
			<referrer name="oocNews"/>
			<referrer name="IsSeatTaked"/>
			<referrer name="PayDay"/>
			Create the internal iterators. 
		</member>
		<member name="F:Iterator@PlayerInVehicle">
			<referrer name="IsVehicleOccupied"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:Iterator@PlayerVehicles">
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="InsertCarDS"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:Iterator@Powers">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@PremiumPlayers">
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="checkPanel"/>
		</member>
		<member name="F:Iterator@Random">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Range">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@RentersHouses">
			<referrer name="@yH_OnPlayerConnect@005"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_upgradehouse"/>
		</member>
		<member name="F:Iterator@Reports">
			<referrer name="PlayerHaveReport"/>
			<referrer name="GetReportID"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@ServerAdmins">
			<referrer name="sendAdmin"/>
			<referrer name="sendToAdmin"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="removeFunction"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_ah"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@ServerBusinesses">
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_findbusiness"/>
		</member>
		<member name="F:Iterator@ServerClans">
			<referrer name="sendClanMessage"/>
			<referrer name="LoadClans"/>
			<referrer name="Timers"/>
		</member>
		<member name="F:Iterator@ServerFactions">
			<referrer name="LoadFactions"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_createsafe"/>
		</member>
		<member name="F:Iterator@ServerGasCan">
			<referrer name="LoadGasCan"/>
			<referrer name="pc_cmd_addbizgas"/>
		</member>
		<member name="F:Iterator@ServerHelpers">
			<referrer name="sendHelper"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_helduty"/>
			<referrer name="pc_cmd_ar"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_skipn"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@ServerHouses">
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_findhouse"/>
		</member>
		<member name="F:Iterator@ServerJobs">
			<referrer name="returnNeededPoints"/>
			<referrer name="LoadJobs"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="pc_cmd_gotojob"/>
		</member>
		<member name="F:Iterator@ServerStaff">
			<referrer name="sendStaff"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@ServerTurfs">
			<referrer name="LoadTurfs"/>
		</member>
		<member name="F:Iterator@ServerWars">
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:Iterator@ServiceCalls">
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:Iterator@TotalClanMembers">
			<referrer name="sendClanMessage"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:Iterator@TotalPlayerVehicles">
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="Timers"/>
			<referrer name="InsertCarDS"/>
		</member>
		<member name="F:Iterator@Until">
			<tagname value="F@z"/>
		</member>
		<member name="F:Iterator@Vehicle">
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="GetClosestVehicle"/>
		</member>
		<member name="F:Iterator@VipPlayers">
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="checkPanel"/>
		</member>
		<member name="F:Iterator@Wanteds">
			<referrer name="chasedBy"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="onPlayerLogin"/>
		</member>
		<member name="F:Iterator@loggedPlayers">
			<referrer name="sendNearbyMessage"/>
			<referrer name="GetPlayerID"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="TimerWar"/>
			<referrer name="totalAds"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="resetQuest"/>
			<referrer name="getVehicleOwner"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:Iterator@serverModelsDS">
			<referrer name="LoadDSVehicles"/>
		</member>
		<member name="F:J@">
			<referrer name="Iter_ActorDo_"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_VehicleDo_"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="banPlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="wrongPass"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="fareUpdateTimer_yT@"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar_yT@"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="TimerGetHit_yT@"/>
			<referrer name="FishingTimer_yT@"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="usedrugsTimer_yT@"/>
			<referrer name="advertismentTimer_yT@"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="CautaHelper"/>
			<referrer name="helpnTimer_yT@"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="removeFunction"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar_yT@"/>
			<referrer name="TimerSpeedo_yT@"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer_yT@"/>
			<referrer name="kickEx_yT@"/>
			<referrer name="TimerJail_yT@"/>
			<referrer name="TimerWanted_yT@"/>
			<referrer name="TimersWantedFind_yT@"/>
			<referrer name="TimerPos_yT@"/>
			<referrer name="TimerCarFind_yT@"/>
			<referrer name="TimerTutorial_yT@"/>
			<referrer name="respawnTimer_yT@"/>
			<referrer name="ExpirationReport_yT@"/>
			<referrer name="closeGate_yT@"/>
			<referrer name="tazerTimer_yT@"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="testDriveTimer_yT@"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<referrer name="OnPlayerCommandReceived"/>
		</member>
		<member name="F:JobMoney">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
		</member>
		<member name="F:JobVehicle">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="AttachTrailer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:MATCH_NAME_PARTIAL">
		</member>
		<member name="F:MapZoneAreaData">
			<referrer name="_GetMapZoneLoopStartIndex"/>
			<referrer name="GetMapZoneAtPoint"/>
			<referrer name="GetMapZoneAtPoint2D"/>
			<referrer name="GetMapZoneAreaPos"/>
		</member>
		<member name="F:MapZoneData">
			<referrer name="GetMapZoneName"/>
			<referrer name="GetMapZoneSoundID"/>
			<referrer name="GetMapZoneAreaCount"/>
		</member>
		<member name="F:MaxSeats">
			<referrer name="pc_cmd_goto"/>
		</member>
		<member name="F:MedicAcceptedCall">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:MoneyMoney">
			<referrer name="GetCashStr"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="updatePlayer"/>
			<referrer name="GetPlayerCash"/>
			<referrer name="ResetPlayerCash"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:MonthTimes">
			<referrer name="TimestampToDate"/>
			<referrer name="DateToTimestamp"/>
		</member>
		<member name="F:MoonBot">
			<tagname value="DCC_Channel"/>
			<referrer name="OnPlayerText"/>
		</member>
		<member name="F:NULL">
			<referrer name="_@_y_inline_@_"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
		</member>
		<member name="F:O@V_">
			<referrer name="O@A_"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="YVA2_Initalise"/>
		</member>
		<member name="F:OLD_DEFAULT_CUSTOM">
		</member>
		<member name="F:OLD_DEFAULT_KUSTOM">
		</member>
		<member name="F:OLD_DEFAULT_NAME">
		</member>
		<member name="F:OnFly">
			<tagname value="bool"/>
			<referrer name="InitFly"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<referrer name="StopFly"/>
		</member>
		<member name="F:PayDayTime">
			<referrer name="Timers"/>
			<referrer name="PayDay"/>
			<referrer name="CB_OnGameModeInit"/>
		</member>
		<member name="F:PickInfo">
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="updateGasCan"/>
		</member>
		<member name="F:PlayerNumber">
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_reply"/>
		</member>
		<member name="F:Q@">
			<referrer name="S@"/>
			<referrer name="G@"/>
			<referrer name="F@"/>
		</member>
		<member name="F:QuestionStock">
			<referrer name="@yH_OnPlayerConnect@010"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_n"/>
			<referrer name="pc_cmd_ch"/>
		</member>
		<member name="F:Questions">
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
		</member>
		<member name="F:REF">
		</member>
		<member name="F:SQL">
			<tagname value="MySQL"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="update"/>
			<referrer name="kickPlayer"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_members"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="MySQLLoad"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="pc_cmd_emails"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:SSCANF_QUIET">
		</member>
		<member name="F:SSCANF_gInit">
			<tagname value="bool"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
		</member>
		<member name="F:SSCANF_g_sPlayers">
		</member>
		<member name="F:Selected">
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
		</member>
		<member name="F:SelectedCar">
			<referrer name="ShowDealerShipTD"/>
			<referrer name="LoadDsVehs"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
		</member>
		<member name="F:SpawnPos">
			<tagname value="Float"/>
			<referrer name="OnPlayerSpawn"/>
		</member>
		<member name="F:SpeedVehicle">
			<referrer name="ShowDealerShipTD"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
		</member>
		<member name="F:StoreMoney">
			<referrer name="GetCashStr"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="updatePlayer"/>
			<referrer name="GetPlayerCash"/>
			<referrer name="ResetPlayerCash"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:Streamer_IncludeFileVersion">
			<attribute name="public"/>
		</member>
		<member name="F:THE_CURRENT_MASTER_IS_CLOUD">
		</member>
		<member name="F:TRUE">
			<tagname value="bool"/>
			<referrer name="YVA2_DummyPush"/>
		</member>
		<member name="F:TaxiAcceptedCall">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:TestingModel">
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerConnect@013"/>
			<referrer name="@yH_OnPlayerDeath@013"/>
			<referrer name="@yH_OnPlayerStateChange@013"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
		</member>
		<member name="F:TotalDealerCars">
			<referrer name="LoadDsVehs"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
		</member>
		<member name="F:Trailer">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="AttachTrailer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="CancelJob"/>
		</member>
		<member name="F:UNIQUE_SYMBOL_DOESNT_EXIST">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:UNIQUE_SYMBOL_LESS_THAN_100">
		</member>
		<member name="F:Undercover">
			<tagname value="bool"/>
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_gethit"/>
		</member>
		<member name="F:UsingDrugs">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="usedrugsTimer"/>
		</member>
		<member name="F:WarScore">
			<tagname value="Float"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:WarScore2">
			<tagname value="Float"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
		</member>
		<member name="F:WarSeconds">
			<referrer name="@yH_OnPlayerConnect@007"/>
		</member>
		<member name="F:WeaponAmmo">
			<referrer name="resetWeapons"/>
			<referrer name="serverWeapon"/>
		</member>
		<member name="F:Weapons">
			<referrer name="resetWeapons"/>
			<referrer name="serverWeapon"/>
		</member>
		<member name="F:Working">
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
			<referrer name="serverWeapon"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:YSI_FILTERSCRIPT">
			<tagname value="bool"/>
			<referrer name="OnFilterScriptInit"/>
			<referrer name="OnGameModeInit"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<referrer name="YVers_OnScriptInit"/>
		</member>
		<member name="F:YSI_gDebugLevel">
			<referrer name="Debug_Level"/>
		</member>
		<member name="F:YSI_gInlineRet">
			<tagname value="InlineRet"/>
		</member>
		<member name="F:YSI_gIteratorDepth">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_gMallocMemory">
			<referrer name="Malloc_TrySetup"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<referrer name="Malloc_SetVAA"/>
			<referrer name="calloc"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
			<referrer name="Malloc_Resolve"/>
			<referrer name="Malloc_Reconcile"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
			<referrer name="_Timer_F"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Release"/>
			<referrer name="Remote_RawStrpack"/>
		</member>
		<member name="F:YSI_gPlayerIP">
			<referrer name="OnPlayerConnect"/>
			<referrer name="OnPlayerDisconnect"/>
		</member>
		<member name="F:YSI_g_sCodeEnd">
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="CGen_UseCodeSpace"/>
		</member>
		<member name="F:YSI_g_sCodeSpace">
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="CGen_UseCodeSpace"/>
			<referrer name="CGen_GetCodeSpace"/>
			<referrer name="CGen_AddCodeSpace"/>
		</member>
		<member name="F:YSI_g_sContexts">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sCurInlineCode">
			<referrer name="I@F"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sCurInlineEntry">
			<referrer name="I@E"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sCurInlineLocals">
			<referrer name="I@E"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sCurInlineLoop">
			<referrer name="I@F"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sCurInlineParams">
			<referrer name="I@E"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sCurInlinePointer">
			<referrer name="I@E"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sFirstSlot">
			<tagname value="Alloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
		</member>
		<member name="F:YSI_g_sHeapSetup">
			<referrer name="Malloc_SolidifyHeap"/>
			<referrer name="Malloc_DoPlayerConnect"/>
		</member>
		<member name="F:YSI_g_sInitialised">
			<referrer name="YVA2_DummyPush"/>
			<referrer name="AMX_OnScriptInit"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sIteratorStack">
			<referrer name="Iter_YieldEnter"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sJumpAddress">
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
			<returns>  0  </returns>  <remarks>  AKA. Inline_Main.  The code before the start of the function is split in to three parts:  The first part comes before the start of the loop condition, and is where  all the variables are initialised in the compiled code.  As we don't want to  initialise any variables, this can be repurposed for function entry code.  The address of this is stored in "entry", and it ends at "loop".  The second part is where the function loops back to.  This MUST start with a  "RETN" instruction to end the function in all cases, so any startup code in  the first segment must jump over that "RETN".  The remainder of this section  can be used for any more entry or exit code that is required.  Note that  it can also start with a "STACK" opcode when required.  This section starts  at "loop" and ends at "code".  The final segment is not technically BEFORE the main function code but  AFTER.  That's normally where the stack is restored, but we now have full  control of that (so don't forget to write it in to the process exit code).  "Inline_Allocator" currently marks the end of the first segment, and  "Inline_Main" marks the end of the second segment.  </remarks> 
		</member>
		<member name="F:YSI_g_sLastSlot">
			<tagname value="Alloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="_Timer_C"/>
		</member>
		<member name="F:YSI_g_sLength">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sMasterCount">
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Relinquish"/>
			<referrer name="_Master_Get"/>
		</member>
		<member name="F:YSI_g_sMasterData">
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Relinquish"/>
			<referrer name="_Master_Get"/>
		</member>
		<member name="F:YSI_g_sMaxNesting">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sPassthroughNestings">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sPlayerTimers">
			<referrer name="@yH_OnPlayerConnect@003"/>
			<referrer name="@yH_OnPlayerDisconnect@003"/>
			<referrer name="_Timer_D"/>
		</member>
		<member name="F:YSI_g_sPrevInlineFunc">
			<referrer name="Callback_Get"/>
			<referrer name="I@E"/>
		</member>
		<member name="F:YSI_g_sPrevJumpOver">
			<referrer name="I@E"/>
		</member>
		<member name="F:YSI_g_sPtr">
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sRemoteFunctions">
			<referrer name="GetRemoteFunction"/>
		</member>
		<member name="F:YSI_g_sRemoteSpecifiers">
			<referrer name="GetRemoteFunction"/>
		</member>
		<member name="F:YSI_g_sRemoteStringsEnd">
		</member>
		<member name="F:YSI_g_sRemoteStringsStart">
		</member>
		<member name="F:YSI_g_sRemoteStub">
			<referrer name="GetRemoteFunction"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
		</member>
		<member name="F:YSI_g_sReplacePtr">
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sReplacements">
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sReplacementsLongOrder">
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sReplacementsShortOrder">
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Hooks_SortReplacements"/>
		</member>
		<member name="F:YSI_g_sRequiredSpace">
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_sSkips">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_sStack">
			<referrer name="@yH_OnScriptInit@001"/>
		</member>
		<member name="F:YSI_g_sStackPtr">
			<referrer name="@yH_OnScriptInit@001"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
		</member>
		<member name="F:YSI_g_sStacks">
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
		</member>
		<member name="F:YSI_g_scError">
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
		</member>
		<member name="F:YSI_g_scErrorMessage1">
			<referrer name="OnRuntimeError"/>
		</member>
		<member name="F:YSI_g_scErrorMessage2">
			<referrer name="OnRuntimeError"/>
		</member>
		<member name="F:YSI_g_scErrorMessage3">
			<referrer name="OnRuntimeError"/>
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:Y_UNIQUE_000_to_099_CALLED">
		</member>
		<member name="F:_@">
			<attribute name="public"/>
			<referrer name="Y@"/>
			<referrer name="Iter_ActorDo@"/>
			<referrer name="Iter_VehicleDo@"/>
			<referrer name="Malloc_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
			<referrer name="@a"/>
		</member>
		<member name="F:_YCM_g@a">
			<tagname value="_E_YCM"/>
			<referrer name="Master_GetCurrentMaster"/>
			<referrer name="@a"/>
		</member>
		<member name="F:__YSI_g_sHeapStart">
			<referrer name="Malloc_TrySetup"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
		</member>
		<member name="F:__YSI_g_sUnusedStart">
			<referrer name="Malloc_TrySetup"/>
			<referrer name="Malloc_Allocate"/>
			<referrer name="Malloc_Free"/>
		</member>
		<member name="F:_pawncmd_is_gamemode">
			<tagname value="bool"/>
			<attribute name="public"/>
		</member>
		<member name="F:_pawncmd_version">
			<attribute name="public"/>
		</member>
		<member name="F:acDialog">
			<referrer name="@yH_resetVars@005"/>
			<referrer name="ShowPlayerDialogEx"/>
		</member>
		<member name="F:acTime">
			<referrer name="@yH_OnPlayerStateChange@005"/>
		</member>
		<member name="F:acVelocity">
			<tagname value="Float"/>
			<referrer name="TrollDetect"/>
		</member>
		<member name="F:bigInteriors">
			<tagname value="Float"/>
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:bigInteriorsID">
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:bizInfo">
			<referrer name="LoadBusinesses"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:bscoop">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:bventl">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:bventr">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:carFind">
			<tagname value="Timer"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:cellRandom">
			<tagname value="Float"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
		</member>
		<member name="F:clanChat">
			<referrer name="pc_cmd_clanchat"/>
		</member>
		<member name="F:clanInfo">
			<referrer name="LoadClans"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="dialog_DIALOG_CLAN"/>
			<referrer name="SetClanTag"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:clanInvitedBy">
			<referrer name="@yH_OnPlayerConnect@011"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:contractInfo">
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:decese">
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:examenInfo">
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="assignCheckpointID"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:exhaust">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:fSkins">
			<referrer name="LoadFactions"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:factionChat">
			<referrer name="pc_cmd_blockf"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
		</member>
		<member name="F:factionInfo">
			<referrer name="factionName"/>
			<referrer name="LoadFactions"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="raportPoints"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:fareTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="destroyPlayerTextDraws"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:fbbars">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:fbumper">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:gBase">
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanInit"/>
		</member>
		<member name="F:gCodBase">
			<referrer name="DisasmInit"/>
			<referrer name="DisasmReloc"/>
			<referrer name="DisasmWriteCode"/>
		</member>
		<member name="F:gCodeScanCallback_match">
			<referrer name="YVA2_Initalise"/>
		</member>
		<member name="F:gDat">
			<referrer name="CodeScanInit"/>
			<referrer name="CodeScanGetMatchFunc"/>
			<referrer name="CodeScanGetMatchAddress"/>
		</member>
		<member name="F:gFast">
			<referrer name="string_fast"/>
			<referrer name="update"/>
			<referrer name="sendAdmin"/>
			<referrer name="sendHelper"/>
			<referrer name="sendStaff"/>
			<referrer name="oocNews"/>
		</member>
		<member name="F:gHdr">
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanInit"/>
		</member>
		<member name="F:gHdr">
			<referrer name="ResetStaticAmxHeader"/>
			<referrer name="GetAmxHeader"/>
			<referrer name="GetAmxHeaderComponent"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
		</member>
		<member name="F:gInitialized">
			<tagname value="bool"/>
			<referrer name="ResetStaticAmxHeader"/>
			<referrer name="GetAmxHeader"/>
			<referrer name="GetAmxHeaderComponent"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
		</member>
		<member name="F:gPreviousWriteOffset">
			<referrer name="AsmEmitInstruction"/>
			<referrer name="AsmEmitJumpLabelInstruction"/>
			<referrer name="AsmGetPreviousWriteOffset"/>
		</member>
		<member name="F:gQuery">
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="factionLog"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:gSAZones">
			<referrer name="GetPlayer2DZone"/>
			<referrer name="GetPlayer3DZone"/>
			<referrer name="Get3DZone"/>
			<referrer name="Get2DPosZone"/>
		</member>
		<member name="F:gString">
			<referrer name="sendNearbyMessage"/>
			<referrer name="formatNumber"/>
			<referrer name="sendPlayerError"/>
			<referrer name="sendPlayerSyntax"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="getDateTime"/>
			<referrer name="getWeaponName"/>
			<referrer name="sendToAdmin"/>
			<referrer name="wantedName"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="showFactionMembers"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="sendClanMessage"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="InsertCarDS"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
		</member>
		<member name="F:g_args">
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="Call"/>
			<referrer name="CallN"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
		</member>
		<member name="F:g_call_depth">
			<referrer name="exit_public"/>
			<referrer name="enter_public"/>
		</member>
		<member name="F:g_call_stack">
			<referrer name="exit_public"/>
			<referrer name="enter_public"/>
		</member>
		<member name="F:g_nargs">
			<referrer name="Push"/>
			<referrer name="Pop"/>
			<referrer name="Call"/>
			<referrer name="CallN"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
		</member>
		<member name="F:g_num_pecs">
			<referrer name="new_pec"/>
		</member>
		<member name="F:g_num_publics">
			<referrer name="exit_public"/>
			<referrer name="ProfilerInit"/>
			<referrer name="ProfilerWriteData"/>
		</member>
		<member name="F:g_pecs">
			<referrer name="new_pec"/>
			<referrer name="ProfilerInit"/>
		</member>
		<member name="F:g_publics">
			<referrer name="exit_public"/>
			<referrer name="ProfilerInit"/>
			<referrer name="ProfilerWriteData"/>
		</member>
		<member name="F:gasInfo">
			<referrer name="LoadGasCan"/>
			<referrer name="updateGasCan"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer"/>
		</member>
		<member name="F:gates">
			<referrer name="Timers"/>
			<referrer name="closeGate"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="loadMaps"/>
		</member>
		<member name="F:getHit">
			<tagname value="Timer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="pc_cmd_gethit"/>
		</member>
		<member name="F:helpTimer">
			<tagname value="Timer"/>
			<referrer name="@yH_OnPlayerDisconnect@010"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:houseInfo">
			<referrer name="LoadHouses"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
		</member>
		<member name="F:hydraulics">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:insn_table">
			<referrer name="GetOpcodeInstructionInformation"/>
			<referrer name="GetOpcodeInstructionName"/>
			<referrer name="GetOpcodeInstructionParameters"/>
			<referrer name="GetOpcodeInstructionRelocatable"/>
		</member>
		<member name="F:invitedByPlayer">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:invitedPlayer">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:iterstart@Fib">
		</member>
		<member name="F:iterstart@Filter">
		</member>
		<member name="F:iterstart@NonNull">
		</member>
		<member name="F:iterstart@Null">
		</member>
		<member name="F:iterstart@Powers">
		</member>
		<member name="F:iterstart@Random">
		</member>
		<member name="F:iterstart@Range">
		</member>
		<member name="F:iterstart@Until">
		</member>
		<member name="F:jailTime">
			<tagname value="Timer"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="TimerJail"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="OnPlayerDeath"/>
		</member>
		<member name="F:jailTimeTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="TimerJail"/>
			<referrer name="pc_cmd_unjail"/>
		</member>
		<member name="F:jobInfo">
			<referrer name="LoadJobs"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="pc_cmd_gotojob"/>
		</member>
		<member name="F:levelBar">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="updateLevelBar"/>
		</member>
		<member name="F:lskirt">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:mediumInteriors">
			<tagname value="Float"/>
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:mediumInteriorsID">
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:nitro">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:opcode_table">
			<tagname value="Opcode"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="RelocateOpcode"/>
			<referrer name="UnrelocateOpcode"/>
		</member>
		<member name="F:opcode_table_is_ready">
			<tagname value="bool"/>
			<referrer name="InitOpcodeTable"/>
			<referrer name="RelocateOpcode"/>
			<referrer name="UnrelocateOpcode"/>
		</member>
		<member name="F:personalVehicle">
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="dialog_MY_GARAGE"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="ModVehicle"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="gasTimer"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="InsertCarDS"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:playerExamenPTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="examenFail"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
		</member>
		<member name="F:playerInfo">
			<referrer name="TrollDetect"/>
			<referrer name="@yH_OnPlayerStateChange@005"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="setSkin"/>
			<referrer name="showStats"/>
			<referrer name="showLicenses"/>
			<referrer name="updateLevelBar"/>
			<referrer name="isPlayerLogged"/>
			<referrer name="resetVars"/>
			<referrer name="oocNews"/>
			<referrer name="examenFail"/>
			<referrer name="kickPlayer"/>
			<referrer name="GetPlayerID"/>
			<referrer name="sendToAdmin"/>
			<referrer name="SetPlayerHealthEx"/>
			<referrer name="GetPlayerHealthEx"/>
			<referrer name="SetPlayerArmourEx"/>
			<referrer name="GetPlayerArmourEx"/>
			<referrer name="GetBankMoney"/>
			<referrer name="GivePlayerBank"/>
			<referrer name="GetPlayerBank"/>
			<referrer name="missionName"/>
			<referrer name="dialog_EMAIL"/>
			<referrer name="wrongPass"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_SPAWNCHANGE"/>
			<referrer name="dialog_GPS1"/>
			<referrer name="dialog_TOG"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="dialog_DIALOG_HUD"/>
			<referrer name="OnPlayerPickUpDynamicPickup"/>
			<referrer name="@yH_OnPlayerConnect@005"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_houseoption"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_renters"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="save_guns"/>
			<referrer name="@yH_OnPlayerEnterVehicle@007"/>
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="wantedName"/>
			<referrer name="showMDC"/>
			<referrer name="chasedBy"/>
			<referrer name="whenPlayerLeaveFaction"/>
			<referrer name="sendPolice"/>
			<referrer name="SetPlayerToFactionColor"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_blockf"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_members"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="dialog_DIALOG_SETGUN"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="pc_cmd_myraport"/>
			<referrer name="raportPoints"/>
			<referrer name="addRaportPoint"/>
			<referrer name="pc_cmd_fdeposit"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="returnNeededPoints"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="FishingTimer"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="CancelJob"/>
			<referrer name="advertismentTimer"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizoption"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_balance"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="CautaHelperNou"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_helduty"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="sendClanMessage"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="pc_cmd_clan"/>
			<referrer name="dialog_DIALOG_CLAN"/>
			<referrer name="dialog_DIALOG_CLANTAG"/>
			<referrer name="SetClanTag"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkPlayerAccount"/>
			<referrer name="assignSQLID"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="BanIPOffline"/>
			<referrer name="checkAccountJail"/>
			<referrer name="checkAccountJailo"/>
			<referrer name="serverWeapon"/>
			<referrer name="SetPlayerFreeze"/>
			<referrer name="StopLoopingAnim"/>
			<referrer name="getNeedProgress"/>
			<referrer name="questProgress"/>
			<referrer name="giveQuest"/>
			<referrer name="resetQuest"/>
			<referrer name="checkMission"/>
			<referrer name="removeFunction"/>
			<referrer name="Reclama"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="dialog_MY_GARAGE"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="getVehicleOwner"/>
			<referrer name="TimerCar"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="Timers"/>
			<referrer name="TimerPos"/>
			<referrer name="TimerCarFind"/>
			<referrer name="TimerTutorial"/>
			<referrer name="PayDay"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_ah"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_resetquests"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_speed"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_lifejump"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_exhaust"/>
			<referrer name="pc_cmd_hoodfrisked"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_box"/>
			<referrer name="pc_cmd_handsup"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_crossarms"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_frisked"/>
			<referrer name="pc_cmd_exhausted"/>
			<referrer name="pc_cmd_injured"/>
			<referrer name="pc_cmd_dealstance"/>
			<referrer name="pc_cmd_crack"/>
			<referrer name="pc_cmd_wank"/>
			<referrer name="pc_cmd_gro"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_pee"/>
			<referrer name="pc_cmd_koface"/>
			<referrer name="pc_cmd_kostomach"/>
			<referrer name="pc_cmd_kiss"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_lay2"/>
			<referrer name="pc_cmd_hitch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_medic"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_sit"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_getarrested"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_quests"/>
			<referrer name="pc_cmd_wthelp"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_freqmembers"/>
			<referrer name="pc_cmd_tog"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="dialog_DIALOG_HELP"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerDeath@013"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="InsertEmail"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="dialog_DIALOG_EMAILS2"/>
			<referrer name="pc_cmd_emails"/>
			<referrer name="pc_cmd_insertemail"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
		</member>
		<member name="F:playerLevelPTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="destroyPlayerTextDraws"/>
		</member>
		<member name="F:playerVehicle">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:rbbars">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:rbumper">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:reportInfo">
			<referrer name="PlayerHaveReport"/>
			<referrer name="GetReportID"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="F:reverse">
			<referrer name="@yH_OnPlayerKeyStateChange@012"/>
			<referrer name="TimerSpeedo"/>
		</member>
		<member name="F:rscoop">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:rskirt">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:s_DialogName">
			<referrer name="Dialog_Close"/>
			<referrer name="Dialog_Open"/>
			<referrer name="OnDialogResponse"/>
		</member>
		<member name="F:s_DialogOpened">
			<referrer name="Dialog_IsOpened"/>
			<referrer name="Dialog_Close"/>
			<referrer name="Dialog_Open"/>
		</member>
		<member name="F:s_aPlayerInfo">
			<referrer name="Callback_GetFlag"/>
			<referrer name="Callback_SetFlag"/>
			<referrer name="GetPlayerFPS"/>
			<referrer name="GetPlayerPacketLoss"/>
			<referrer name="GetPlayerAction"/>
			<referrer name="CB_SelectTextDraw"/>
			<referrer name="CB_CancelSelectTextDraw"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="Callback_CheckAnimation"/>
			<referrer name="Callback_HoldTimer"/>
		</member>
		<member name="F:s_aPlayerTickInfo">
			<referrer name="GetPlayerPausedTime"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
		</member>
		<member name="F:s_aVehicleGarages">
			<referrer name="IsPlayerNearGarage"/>
		</member>
		<member name="F:s_aVehicleInfo">
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
		</member>
		<member name="F:s_aVendingMachines">
			<referrer name="IsPlayerNearVending"/>
			<referrer name="OnPlayerUpdate"/>
		</member>
		<member name="F:safeInfo">
			<referrer name="saveSafe"/>
			<referrer name="LoadSafes"/>
			<referrer name="pc_cmd_fdeposit"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
		</member>
		<member name="F:selName">
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="dialog_DIALOG_EMAILS2"/>
		</member>
		<member name="F:serverDealerPTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="destroyPlayerTextDraws"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="HideDealerShipTD"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
		</member>
		<member name="F:serverDealerTD">
			<tagname value="Text"/>
			<referrer name="serverTextDraws"/>
			<referrer name="destroyServerTextDraws"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="HideDealerShipTD"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
		</member>
		<member name="F:serverHud">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="destroyPlayerTextDraws"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_acover"/>
		</member>
		<member name="F:size_l">
			<remarks>  <p>Because of the strange way we manipulate the stack, this function actually  gets called twice as often as you would expect.  Essentially, for this  (psudo-)loop:</p>  <code>  for (new i = iter_func(); Iter_YieldLoop(); )                              <br />  {                                                                          <br />  }  </code>  <p>The loop is entered and <c>iter_func()</c> is called.  This indirectly  calls <c>yield</c>, which returns to the call point of that function.  The  loop check is then entered and <c>Iter_YieldLoop()</c> is called.  Depending  on if <c>yield</c> was actually used, the main loop body is entered.  At the  end of that iteration, the loop check is run again and so  <c>Iter_YieldLoop()</c> is called again.</p>  <p>This is where it gets wierd!</p>  <p><c>Iter_YieldLoop()</c> does a stack copy and a jump in to the earlier  call to <c>iter_func</c>, whose return address is earlier in the code.  When  a <c>yield</c> is done again, that return is to the first part of the  <c>for</c> loop, which then instantly enters the loop check section and calls  <c>Iter_YieldLoop()</c> again (as a side-effect, saving the iterator value in  the loop variable).</p>  <p>So for <c>N</c> iterations of the loop, <c>Iter_YieldLoop()</c> is called  <c>2N + 1</c> times, and should be made aware of which phase of its calls it  is in.</p>  <p>This is, of course, made more complicated by nested loops, but that just  means we need to store the state on our own stack.</p>  </remarks> 
		</member>
		<member name="F:smallInteriors">
			<tagname value="Float"/>
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:smallInteriorsID">
			<referrer name="pc_cmd_createhouse"/>
		</member>
		<member name="F:speedo">
			<tagname value="Timer"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:spoiler">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:src_l">
		</member>
		<member name="F:svfVehicleObjects">
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:taxi">
			<tagname value="Timer"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:ticketMoney">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:ticketPlayer">
			<referrer name="@yH_OnPlayerConnect@007"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_accept"/>
		</member>
		<member name="F:turfInfo">
			<referrer name="LoadTurfs"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar"/>
			<referrer name="IsPlayerInTurf"/>
		</member>
		<member name="F:tutorial">
			<tagname value="Timer"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="TimerTutorial"/>
		</member>
		<member name="F:ucideri">
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:using_deprecated_foreach_syntax">
			<tagname value="bool"/>
			The workings of these macros are very extensively documented at:  <a href="http://forum.sa-mp.com/showpost.php?p=2823668" /> 
		</member>
		<member name="F:vbase">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:vehNames">
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehicleFaction">
			<referrer name="@yH_OnPlayerEnterVehicle@007"/>
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehicleHud">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehiclePlayerID">
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:vehicleRank">
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="removeFunction"/>
		</member>
		<member name="F:vehicle_bonnet">
			<tagname value="bool"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehicle_boot">
			<tagname value="bool"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehicle_engine">
			<tagname value="bool"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehicle_fuel">
			<tagname value="Float"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
		</member>
		<member name="F:vehicle_lights">
			<tagname value="bool"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vehicle_personal">
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="ModVehicle"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="gasTimer"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
		</member>
		<member name="F:vlights">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:wantedFind">
			<tagname value="Timer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
		</member>
		<member name="F:wantedTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="destroyPlayerTextDraws"/>
			<referrer name="TimerWanted"/>
		</member>
		<member name="F:wantedTime">
			<tagname value="Timer"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerWanted"/>
			<referrer name="OnPlayerDeath"/>
		</member>
		<member name="F:war">
			<tagname value="Timer"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:warInfo">
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:warTD">
			<tagname value="PlayerText"/>
			<referrer name="playerTextDraws"/>
			<referrer name="destroyPlayerTextDraws"/>
			<referrer name="TimerWar"/>
		</member>
		<member name="F:wheels">
			<referrer name="SaveComponent"/>
		</member>
		<member name="F:zGangZones">
			<referrer name="GangZoneCreateEx"/>
			<referrer name="GangZoneDestroyEx"/>
			<referrer name="GangZoneShowForPlayerEx"/>
			<referrer name="GangZoneHideForPlayerEx"/>
			<referrer name="GangZoneCreateNumber"/>
			<referrer name="GangZoneCreateNumber2"/>
		</member>

		<!-- functions -->
		<member name="M:operator!(Float:)" syntax="operator!(Float:)(oper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="cellmax"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(InlineRet:,bool:)" syntax="operator+(InlineRet:,bool:)(a, b)">
			<tagname value="InlineRet"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>InlineRet </paraminfo>
			</param>
			<param name="b">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:operator+(InlineRet:,Float:)" syntax="operator+(InlineRet:,Float:)(a, b)">
			<tagname value="InlineRet"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>InlineRet </paraminfo>
			</param>
			<param name="b">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(InlineRet:,_:)" syntax="operator+(InlineRet:,_:)(a, b)">
			<tagname value="InlineRet"/>
			<stacksize value="1"/>
			<param name="a">
				<paraminfo>InlineRet </paraminfo>
				Dummy variable.
			</param>
			<param name="b">
				Return value.
			</param>
			<summary>operator+</summary>      <remarks>  This is a prefix function that takes some value and returns it to the  caller's caller.  This makes "@return" in inline functions work.  </remarks> 
		</member>
		<member name="M:operator%(_:,Float:)" syntax="operator%(_:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator%(Float:,_:)" syntax="operator%(Float:,_:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator%(Float:,Float:)" syntax="operator%(Float:,Float:)(oper1, oper2)">
			<stacksize value="1"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator!=(Float:,_:)" syntax="operator!=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator!=(Float:,Float:)" syntax="operator!=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="RandomFloat"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(_:,Float:)" syntax="operator-(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,_:)" syntax="operator-(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="gasTimer"/>
			<referrer name="pc_cmd_slap"/>
			<dependency name="float"/>
			<dependency name="floatsub"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator+(Float:,_:)" syntax="operator+(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="slapPlayer"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="gasTimer"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<dependency name="float"/>
			<dependency name="floatadd"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator/(_:,Float:)" syntax="operator/(_:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,_:)" syntax="operator/(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="PayDay"/>
			<dependency name="float"/>
			<dependency name="floatdiv"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator*(Float:,_:)" syntax="operator*(Float:,_:)(oper1, oper2)">
			<tagname value="Float"/>
			<stacksize value="4"/>
			<referrer name="Callback_GetSpeed"/>
			<referrer name="TimerSpeedo"/>
			<dependency name="float"/>
			<dependency name="floatmul"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator++(Float:)" syntax="operator++(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="Timers"/>
			<dependency name="operator+(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:)" syntax="operator-(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<referrer name="RandomFloat"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="PlayerToPoint"/>
			<dependency name="cellmin"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator--(Float:)" syntax="operator--(Float:)(oper)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="operator-(Float:,Float:)"/>
			<param name="oper">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator-(Float:,Float:)" syntax="operator-(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator--(Float:)"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="GangZoneCreateNumber"/>
			<referrer name="GangZoneCreateNumber2"/>
			<referrer name="RandomFloat"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="Callback_IsVehicleInPoint"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="TrollDetect"/>
			<referrer name="GetDistancePlayerToVeh"/>
			<referrer name="AttachTrailer"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="PlayerToPoint"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_fill"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator+(Float:,Float:)" syntax="operator+(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator++(Float:)"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="GangZoneCreateNumber"/>
			<referrer name="GangZoneCreateNumber2"/>
			<referrer name="RandomFloat"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<referrer name="Callback_GetSpeed"/>
			<referrer name="Callback_IsVehicleInPoint"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<referrer name="updateLevelBar"/>
			<referrer name="getVehicleSpeed"/>
			<referrer name="GetDistanceBetweenPoints"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="PayDay"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator/(Float:,Float:)" syntax="operator/(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="__TU"/>
			<referrer name="RandomFloat"/>
			<referrer name="Fly"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator*(Float:,Float:)" syntax="operator*(Float:,Float:)(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="GangZoneCreateNumber"/>
			<referrer name="GangZoneCreateNumber2"/>
			<referrer name="RandomFloat"/>
			<referrer name="Fly"/>
			<referrer name="Callback_GetSpeed"/>
			<referrer name="Callback_IsVehicleInPoint"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<referrer name="updateLevelBar"/>
			<referrer name="getVehicleSpeed"/>
			<referrer name="GetDistancePlayerToVeh"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Float:operator=(_:)" syntax="Float:operator=(_:)(oper)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="resetVars"/>
			<referrer name="GetClosestVehicle"/>
			<referrer name="GetDistanceBetweenPoints"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="TimerGetHit"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="usedrugsTimer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="removeFunction"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="gasTimer"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_jumpwater"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<referrer name="loadMaps"/>
			<param name="oper">
			</param>
		</member>
		<member name="M:operator==(Float:,Float:)" syntax="operator==(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="Fly"/>
			<referrer name="TrollDetect"/>
			<referrer name="_GetMapZoneLoopStartIndex"/>
			<referrer name="TimerWar"/>
			<referrer name="TimerSpeedo"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator==(Float:,_:)" syntax="operator==(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="Fly"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(Float:,Float:)" syntax="operator&gt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="TrollDetect"/>
			<referrer name="TimerWar"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="PlayerToPoint"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;(Float:,_:)" syntax="operator&gt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="updateLevelBar"/>
			<referrer name="GetClosestVehicle"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;(_:,Float:)" syntax="operator&gt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,Float:)" syntax="operator&gt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="GetPlayer2DZone"/>
			<referrer name="GetPlayer3DZone"/>
			<referrer name="Get3DZone"/>
			<referrer name="Get2DPosZone"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="IsPlayerInTurf"/>
			<referrer name="pc_cmd_fill"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&gt;=(Float:,_:)" syntax="operator&gt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&gt;=(_:,Float:)" syntax="operator&gt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,Float:)" syntax="operator&lt;(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="RandomFloat"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="Callback_IsVehicleInPoint"/>
			<referrer name="TrollDetect"/>
			<referrer name="GetMapZoneAtPoint"/>
			<referrer name="GetMapZoneAtPoint2D"/>
			<referrer name="AttachTrailer"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="PlayerToPoint"/>
			<referrer name="IsPlayerInTurf"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_fill"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;(Float:,_:)" syntax="operator&lt;(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;(_:,Float:)" syntax="operator&lt;(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,Float:)" syntax="operator&lt;=(Float:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="GetPlayer2DZone"/>
			<referrer name="GetPlayer3DZone"/>
			<referrer name="Get3DZone"/>
			<referrer name="Get2DPosZone"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="GetMapZoneAtPoint"/>
			<referrer name="GetMapZoneAtPoint2D"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:operator&lt;=(Float:,_:)" syntax="operator&lt;=(Float:,_:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
			</param>
		</member>
		<member name="M:operator&lt;=(_:,Float:)" syntax="operator&lt;=(_:,Float:)(oper1, oper2)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="float"/>
			<dependency name="floatcmp"/>
			<param name="oper1">
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:@CO_HookChain" syntax="@CO_HookChain()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="@CO_Master"/>
			<dependency name="@CO_ScriptInit"/>
		</member>
		<member name="M:@CO_Master" syntax="@CO_Master()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="@CO_HookChain"/>
		</member>
		<member name="M:@CO_ScriptInit" syntax="@CO_ScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="@CO_HookChain"/>
		</member>
		<member name="M:@RETOnPlayerCommandText" syntax="@RETOnPlayerCommandText()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:@RETOnRconCommand" syntax="@RETOnRconCommand()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:@_yHCheckpoint" syntax="@_yHCheckpoint()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHCommand" syntax="@_yHCommand()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHContainer" syntax="@_yHContainer()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHDynamic" syntax="@_yHDynamic()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHDynamicCP" syntax="@_yHDynamicCP()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHInventory" syntax="@_yHInventory()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHObject" syntax="@_yHObject()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHTextDraw" syntax="@_yHTextDraw()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@_yHUpdate" syntax="@_yHUpdate()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="_Hooks_AddReplacement"/>
		</member>
		<member name="M:@a" syntax="@a()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<automaton name="@a"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Master_GetCurrentMaster"/>
			<dependency name="_@"/>
			<dependency name="_E_YCM@m"/>
			<dependency name="_E_YCM@n"/>
			<dependency name="_E_YCM@p"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Master_Relinquish"/>
			<dependency name="_YCM_g@a"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<transition keep="true" target="_YCM : m" source="_YCM : y" />  <transition keep="true" target="_YCM : p" source="_YCM : y" />  <transition keep="true" target="_YCM : n" source="_YCM : y" />  <transition keep="true" target="_YCM : y" source="_YCM : u" /> <p/> <transition target="" source="_ALS_go"/>

		</member>
		<member name="M:@dialog_format" syntax="@dialog_format()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="format"/>
		</member>
		<member name="M:@receivepacket" syntax="@receivepacket(packet[], size, source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="packet">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@receivestring" syntax="@receivestring(message[], source[])">
			<attribute name="public"/>
			<stacksize value="1"/>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnGameModeInit@005" syntax="@yH_OnGameModeInit@005()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="I@"/>
			<dependency name="true"/>
		</member>
		<member name="M:@yH_OnGameModeInit@007" syntax="@yH_OnGameModeInit@007()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="I@"/>
			<dependency name="true"/>
		</member>
		<member name="M:@yH_OnGameModeInit@008" syntax="@yH_OnGameModeInit@008()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="I@"/>
			<dependency name="true"/>
		</member>
		<member name="M:@yH_OnGameModeInit@009" syntax="@yH_OnGameModeInit@009()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="I@"/>
			<dependency name="true"/>
		</member>
		<member name="M:@yH_OnPlayerClickTextDraw@013" syntax="@yH_OnPlayerClickTextDraw@013(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CB_CancelSelectTextDraw"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="DSModels"/>
			<dependency name="DSModels"/>
			<dependency name="DealerCar"/>
			<dependency name="DealerCarType"/>
			<dependency name="DealerID"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="HideDealerShipTD"/>
			<dependency name="I@"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Single@PlayerVehicles"/>
			<dependency name="J@"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="PlayerTextDrawSetPreviewModel"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SQL"/>
			<dependency name="SelectedCar"/>
			<dependency name="SelectedCar"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SpeedVehicle"/>
			<dependency name="TestingModel"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="TotalDealerCars"/>
			<dependency name="dModel"/>
			<dependency name="dPrice"/>
			<dependency name="dStock"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pVehicleSlots"/>
			<dependency name="pinDealer"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="serverDealerTD"/>
			<dependency name="testDriveTimer_yT@"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@002" syntax="@yH_OnPlayerConnect@002(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<param name="playerid">
				Player who joined.
			</param>
			  <remarks>  Adds a player to the loop data.  Now sorts the list too.  Note that I found  the most bizzare bug ever (I *think* it may be a compiler but, but it  requires further investigation), basically it seems that multiple variables  were being treated as the same variable (namely @YSII_EgotS and  @YSII_CgharacterS were the same and @YSII_EgotC and @YSII_CgharacterC were the  same).  Adding print statements which reference these variables seem to fix  the problem, and I've tried to make sure that the values will never actually  get printed.  </remarks> 
		</member>
		<member name="M:@yH_OnPlayerConnect@003" syntax="@yH_OnPlayerConnect@003(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@005" syntax="@yH_OnPlayerConnect@005(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IDSelected"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@RentersHouses"/>
			<dependency name="Iterator@RentersHouses"/>
			<dependency name="pRent"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@007" syntax="@yH_OnPlayerConnect@007(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Contract"/>
			<dependency name="DeletePVar"/>
			<dependency name="InstructorAcceptedCall"/>
			<dependency name="MedicAcceptedCall"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="Undercover"/>
			<dependency name="WarSeconds"/>
			<dependency name="false"/>
			<dependency name="invitedByPlayer"/>
			<dependency name="invitedPlayer"/>
			<dependency name="pinFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="pspecFaction"/>
			<dependency name="ticketMoney"/>
			<dependency name="ticketPlayer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@008" syntax="@yH_OnPlayerConnect@008(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="FishWeight"/>
			<dependency name="Fishing"/>
			<dependency name="JOB_NONE"/>
			<dependency name="JobMoney"/>
			<dependency name="JobVehicle"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="Trailer"/>
			<dependency name="UsingDrugs"/>
			<dependency name="Working"/>
			<dependency name="false"/>
			<dependency name="pArmsSkill"/>
			<dependency name="pArmsTimes"/>
			<dependency name="pCarpenterSkill"/>
			<dependency name="pCarpenterTimes"/>
			<dependency name="pDrugsSkill"/>
			<dependency name="pDrugsTimes"/>
			<dependency name="pFishSkill"/>
			<dependency name="pFishTimes"/>
			<dependency name="pJob"/>
			<dependency name="pTruckSkill"/>
			<dependency name="pTruckTimes"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@009" syntax="@yH_OnPlayerConnect@009(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="AdTimer"/>
			<dependency name="IDSelected"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@010" syntax="@yH_OnPlayerConnect@010(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="ConversationOpen"/>
			<dependency name="HelperAtribut"/>
			<dependency name="HelperBusy"/>
			<dependency name="HelperDuty"/>
			<dependency name="QuestionStock"/>
			<dependency name="QuestionStock"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@011" syntax="@yH_OnPlayerConnect@011(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="clanInvitedBy"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerConnect@013" syntax="@yH_OnPlayerConnect@013(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="TestingModel"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@007" syntax="@yH_OnPlayerDeath@007(playerid, killerid)">
			<attribute name="public"/>
			<stacksize value="4143"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="DistanceToPlayer"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetWeaponName"/>
			<dependency name="IsPlayerInTurf"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@ServerWars"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="WarScore"/>
			<dependency name="WarScore"/>
			<dependency name="WarScore2"/>
			<dependency name="WarScore2"/>
			<dependency name="decese"/>
			<dependency name="decese"/>
			<dependency name="pFaction"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="ucideri"/>
			<dependency name="ucideri"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wAttacker"/>
			<dependency name="wFaction"/>
			<dependency name="warInfo"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDeath@013" syntax="@yH_OnPlayerDeath@013(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="TestingModel"/>
			<dependency name="cancelDriveTest"/>
			<dependency name="pinDealer"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@002" syntax="@yH_OnPlayerDisconnect@002(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
				Player who left.
			</param>
			<param name="reason">
			</param>
			  <remarks>  Removes a player from the loop data.  No longer uses "hook" to ENSURE  that this is always last.  Previously I think that the order of  evaluation in y_hooks meant that this got called before the user  "OnPlayerDisconnect".  </remarks> 
		</member>
		<member name="M:@yH_OnPlayerDisconnect@003" syntax="@yH_OnPlayerDisconnect@003(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@007" syntax="@yH_OnPlayerDisconnect@007(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="CHECKPOINT_FACTION_DUTY"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DestroyObject"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="IsValidObject"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iter_Single@ServiceCalls"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServiceCalls"/>
			<dependency name="MedicAcceptedCall"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="_Timer_F"/>
			<dependency name="addRaportPoint"/>
			<dependency name="fareTD"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pFaction"/>
			<dependency name="pName"/>
			<dependency name="pTaxiDriver"/>
			<dependency name="pTaxiMoney"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="svfVehicleObjects"/>
			<dependency name="taxi"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehiclePlayerID"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@008" syntax="@yH_OnPlayerDisconnect@008(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="FishTimer"/>
			<dependency name="_Timer_F"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@010" syntax="@yH_OnPlayerDisconnect@010(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="_Timer_F"/>
			<dependency name="helpTimer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_OnPlayerDisconnect@012" syntax="@yH_OnPlayerDisconnect@012(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="EOS"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<dependency name="Iter_Single@PlayerVehicles"/>
			<dependency name="Iter_Single@TotalPlayerVehicles"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="Iterator@TotalPlayerVehicles"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAge"/>
			<dependency name="pvAngle"/>
			<dependency name="pvCarPlate"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvComponents"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvFuel"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvInterior"/>
			<dependency name="pvLock"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOdometer"/>
			<dependency name="pvOwnerID"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="pvVirtualWorld"/>
			<dependency name="pvX"/>
			<dependency name="pvY"/>
			<dependency name="pvZ"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterCheckpoint@007" syntax="@yH_OnPlayerEnterCheckpoint@007(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CHECKPOINT_FACTION_DUTY"/>
			<dependency name="CHECKPOINT_GETHIT"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="CHECKPOINT_WANTEDFIND"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="MedicAcceptedCall"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="_Timer_F"/>
			<dependency name="getHit"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="wantedFind"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterCheckpoint@008" syntax="@yH_OnPlayerEnterCheckpoint@008(playerid)">
			<attribute name="public"/>
			<stacksize value="8201"/>
			<dependency name="CHECKPOINT_ARMSDEALER"/>
			<dependency name="CHECKPOINT_ARMSDEALER2"/>
			<dependency name="CHECKPOINT_CARPENTER"/>
			<dependency name="CHECKPOINT_CARPENTER2"/>
			<dependency name="CHECKPOINT_DRUGSDEALER"/>
			<dependency name="CHECKPOINT_DRUGSDEALER2"/>
			<dependency name="CHECKPOINT_JOB"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="CHECKPOINT_TRUCKERLS"/>
			<dependency name="CHECKPOINT_TRUCKERLV"/>
			<dependency name="CHECKPOINT_TRUCKERSF"/>
			<dependency name="Dialog_Open"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="EOS"/>
			<dependency name="GetDistanceBetweenPoints"/>
			<dependency name="GetVehicleTrailer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsTrailerAttachedToVehicle"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="JOB_ARMSDEALER"/>
			<dependency name="JOB_CARPENTER"/>
			<dependency name="JOB_DRUGSDEALER"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="JobMoney"/>
			<dependency name="JobVehicle"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="StoreMoney"/>
			<dependency name="Trailer"/>
			<dependency name="Working"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gString"/>
			<dependency name="pArmsSkill"/>
			<dependency name="pArmsTimes"/>
			<dependency name="pCarpenterSkill"/>
			<dependency name="pCarpenterTimes"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pDrugs"/>
			<dependency name="pDrugsSkill"/>
			<dependency name="pDrugsTimes"/>
			<dependency name="pMats"/>
			<dependency name="pSQLID"/>
			<dependency name="pTruckSkill"/>
			<dependency name="pTruckTimes"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="returnNeededPoints"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yH_OnPlayerEnterVehicle@007" syntax="@yH_OnPlayerEnterVehicle@007(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="slapPlayer"/>
			<dependency name="true"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:@yH_OnPlayerKeyStateChange@012" syntax="@yH_OnPlayerKeyStateChange@012(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="GetPlayerState"/>
			<dependency name="reverse"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:@yH_OnPlayerStateChange@005" syntax="@yH_OnPlayerStateChange@005(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GetTickCount"/>
			<dependency name="Kick"/>
			<dependency name="acTime"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:@yH_OnPlayerStateChange@007" syntax="@yH_OnPlayerStateChange@007(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehicleRank"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:@yH_OnPlayerStateChange@013" syntax="@yH_OnPlayerStateChange@013(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="TestingModel"/>
			<dependency name="cancelDriveTest"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:@yH_OnScriptInit@001" syntax="@yH_OnScriptInit@001()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_g_sStack"/>
			<dependency name="YSI_g_sStackPtr"/>
			<remarks>  </remarks> 
		</member>
		<member name="M:@yH_OnScriptInit@002" syntax="@yH_OnScriptInit@002()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="IsValidActor"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Single@Actor"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@Vehicle"/>
			<dependency name="Iterator@Actor"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<dependency name="Iterator@Vehicle"/>
			<remarks>  Sets up all existing iterators.  Does nothing for "XXLocal" ones, since they  are by definition empty when a script starts.  </remarks> 
		</member>
		<member name="M:@yH_OnScriptInit@003" syntax="@yH_OnScriptInit@003()">
			<attribute name="public"/>
			<stacksize value="51"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="SetTimerEx"/>
		</member>
		<member name="M:@yH_OnVehicleDeath@007" syntax="@yH_OnVehicleDeath@007(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="DestroyObject"/>
			<dependency name="IsValidObject"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="playerVehicle"/>
			<dependency name="svfVehicleObjects"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehiclePlayerID"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:@yH_resetVars@005" syntax="@yH_resetVars@005(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="acDialog"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:@yT_PayDay" syntax="@yT_PayDay(g, p)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="_Timer_I"/>
			<param name="g">
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:@yT_TimerM" syntax="@yT_TimerM(g, p)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="_Timer_I"/>
			<param name="g">
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:@yT_Timers" syntax="@yT_Timers(g, p)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="_Timer_I"/>
			<param name="g">
			</param>
			<param name="p">
			</param>
		</member>
		<member name="M:AMX_DoNothing" syntax="AMX_DoNothing()">
			<stacksize value="1"/>
			<referrer name="AMX_GetGlobal"/>
		</member>
		<member name="M:AMX_GetBaseCount" syntax="AMX_GetBaseCount(table, &amp;base, &amp;count)">
			<stacksize value="1"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetEntryPrefix"/>
			<referrer name="AMX_GetEntrySuffix"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_TABLE_LIBRARIES"/>
			<dependency name="AMX_TABLE_NATIVES"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="AMX_TABLE_PUBVARS"/>
			<dependency name="AMX_TABLE_TAGS"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="base">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntry" syntax="AMX_GetEntry(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="42"/>
			<referrer name="AMX_GetPointer"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetFunctionWritePoint"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetEntryFromNativeIndex" syntax="AMX_GetEntryFromNativeIndex(index)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<param name="index">
			</param>
		</member>
		<member name="M:AMX_GetEntryFromPublicIndex" syntax="AMX_GetEntryFromPublicIndex(index)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<param name="index">
			</param>
		</member>
		<member name="M:AMX_GetEntryPointer" syntax="AMX_GetEntryPointer(entry)">
			<stacksize value="1"/>
			<param name="entry">
			</param>
		</member>
		<member name="M:AMX_GetEntryPrefix" syntax="AMX_GetEntryPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="9"/>
			<referrer name="AMX_GetPointerPrefix"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_CountInvalidPublics"/>
			<referrer name="VA_OnScriptInit"/>
			<referrer name="@yH_OnScriptInit@003"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetEntrySuffix" syntax="AMX_GetEntrySuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="10"/>
			<referrer name="AMX_GetPointerSuffix"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetGlobal" syntax="AMX_GetGlobal()">
			<stacksize value="4"/>
			<referrer name="Debug_OnScriptInit"/>
			<dependency name="AMX_DoNothing"/>
			<dependency name="AMX_HEADER_COD"/>
		</member>
		<member name="M:AMX_GetGlobalAddress" syntax="AMX_GetGlobalAddress(...)">
			<stacksize value="2"/>
			<dependency name="AMX_REAL_DATA"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetName" syntax="AMX_GetName(table, idx, buffer[], pattern[], exact)">
			<stacksize value="10"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetNamePrefix" syntax="AMX_GetNamePrefix(table, idx, buffer[], pattern)">
			<stacksize value="9"/>
			<referrer name="Hooks_DoAllHooks"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetNameSuffix" syntax="AMX_GetNameSuffix(table, idx, buffer[], pattern)">
			<stacksize value="10"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetBaseCount"/>
			<dependency name="AMX_ReadString"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetNativeIndexFromEntry" syntax="AMX_GetNativeIndexFromEntry(entry)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<param name="entry">
			</param>
		</member>
		<member name="M:AMX_GetPointer" syntax="AMX_GetPointer(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="9"/>
			<referrer name="AMX_GetValue"/>
			<dependency name="AMX_GetEntry"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetPointerPrefix" syntax="AMX_GetPointerPrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValuePrefix"/>
			<referrer name="@yH_OnScriptInit@003"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPointerSuffix" syntax="AMX_GetPointerSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<referrer name="AMX_GetValueSuffix"/>
			<dependency name="AMX_GetEntrySuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetPublicIndexFromEntry" syntax="AMX_GetPublicIndexFromEntry(entry)">
			<stacksize value="1"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<param name="entry">
			</param>
		</member>
		<member name="M:AMX_GetRelativeAddress" syntax="AMX_GetRelativeAddress(...)">
			<stacksize value="2"/>
			<param name="...">
			</param>
		</member>
		<member name="M:AMX_GetStringFromEntry" syntax="AMX_GetStringFromEntry(entry, str[], size)">
			<stacksize value="6"/>
			<referrer name="Hooks_GetAllHooks"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_ReadString"/>
			<param name="entry">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_GetValue" syntax="AMX_GetValue(table, idx, &amp;buffer, pattern[], exact)">
			<stacksize value="9"/>
			<dependency name="AMX_GetPointer"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="exact">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AMX_GetValuePrefix" syntax="AMX_GetValuePrefix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerPrefix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_GetValueSuffix" syntax="AMX_GetValueSuffix(table, idx, &amp;buffer, pattern)">
			<stacksize value="8"/>
			<dependency name="AMX_GetPointerSuffix"/>
			<param name="table">
				<paraminfo>E_AMX_TABLE </paraminfo>
			</param>
			<param name="idx">
			</param>
			<param name="buffer">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="pattern">
			</param>
		</member>
		<member name="M:AMX_OnScriptInit" syntax="AMX_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="YSI_g_sInitialised"/>
			<dependency name="YVA2_Initalise"/>
		</member>
		<member name="M:AMX_RawRead" syntax="AMX_RawRead(addr)">
			<stacksize value="1"/>
			<referrer name="AMX_Read"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:AMX_RawWrite" syntax="AMX_RawWrite(addr, value)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AMX_Read" syntax="AMX_Read(addr)">
			<stacksize value="50"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_InvalidateName"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Hooks_CompareNextCell"/>
			<referrer name="Hooks_ComparePublics"/>
			<referrer name="Hooks_SortPublics"/>
			<referrer name="VA_OnScriptInit"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="Callback_Get"/>
			<referrer name="I@E"/>
			<referrer name="StoredF_IsHooked"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteJustSpec"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_RawRead"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitLrefSPri"/>
			<dependency name="AsmEmitNop"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="OP_PUSH_C"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:AMX_ReadArray" syntax="AMX_ReadArray(addr, dest[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_ReadString" syntax="AMX_ReadString(addr, str[], len)">
			<stacksize value="3"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="AMX_GetNamePrefix"/>
			<referrer name="AMX_GetNameSuffix"/>
			<referrer name="AMX_GetStringFromEntry"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="@yH_OnScriptInit@003"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_ReadUnpackedString" syntax="AMX_ReadUnpackedString(addr, str[], len)">
			<stacksize value="2"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_TraceCode" syntax="AMX_TraceCode(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="4"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_TraceMemory" syntax="AMX_TraceMemory(pattern[], &amp;addrRet, &amp;dataRet, size)">
			<stacksize value="4"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_HEA"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="addrRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="dataRet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AMX_Write" syntax="AMX_Write(addr, value)">
			<stacksize value="1"/>
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_InvalidateName"/>
			<referrer name="Hooks_ComparePublics"/>
			<referrer name="Hooks_SortPublics"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="I@E"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteJustSpec"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<param name="addr">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AMX_WriteArray" syntax="AMX_WriteArray(addr, src[], len)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AMX_WriteString" syntax="AMX_WriteString(addr, str[], len)">
			<stacksize value="4"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<param name="addr">
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:AbsToRel" syntax="AbsToRel(address)">
			<stacksize value="3"/>
			<referrer name="ReadPhysMemory"/>
			<referrer name="WritePhysMemory"/>
			<referrer name="ReadPhysMemoryCell"/>
			<referrer name="WritePhysMemoryCell"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetDat"/>
			<param name="address">
			</param>
		</member>
		<member name="M:Add64Bit" syntax="Add64Bit(&amp;ammount_store, &amp;ammount_more, value)">
			<stacksize value="4"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="GivePlayerBank"/>
			<referrer name="Translate32Bit"/>
			<dependency name="true"/>
			<param name="ammount_store">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ammount_more">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AddStaticVehicle" syntax="AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2)">
			<attribute name="native"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:AddStaticVehicleEx" syntax="AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2, respawn_delay, addsiren)">
			<attribute name="native"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:AddVehicleComponent" syntax="AddVehicleComponent(vehicleid, componentid)">
			<attribute name="native"/>
			<referrer name="ModVehicle"/>
			<referrer name="pc_cmd_addnos"/>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:AllowInteriorWeapons" syntax="AllowInteriorWeapons(allow)">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
			<param name="allow">
			</param>
		</member>
		<member name="M:AllowPlayerTeleport" syntax="AllowPlayerTeleport(playerid, allow)">
			<attribute name="native"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_setadmin"/>
			<param name="playerid">
			</param>
			<param name="allow">
			</param>
		</member>
		<member name="M:ApplyAnimation" syntax="ApplyAnimation(playerid, animlib[], animname[], fDelta, loop, lockx, locky, freeze, time, forcesync)">
			<attribute name="native"/>
			<referrer name="StartFly"/>
			<referrer name="Fly"/>
			<referrer name="CB_ApplyAnimation"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fDelta">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="loop">
			</param>
			<param name="lockx">
			</param>
			<param name="locky">
			</param>
			<param name="freeze">
			</param>
			<param name="time">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:AsmClearError" syntax="AsmClearError(ctx[])">
			<stacksize value="5"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmSetError"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitAdd" syntax="AsmEmitAdd(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADD"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitAddC" syntax="AsmEmitAddC(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="bernstein"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADD_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitAddrAlt" syntax="AsmEmitAddrAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADDR_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitAddrPri" syntax="AsmEmitAddrPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ADDR_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitAlignAlt" syntax="AsmEmitAlignAlt(ctx[], number)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ALIGN_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="number">
			</param>
		</member>
		<member name="M:AsmEmitAlignPri" syntax="AsmEmitAlignPri(ctx[], number)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ALIGN_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="number">
			</param>
		</member>
		<member name="M:AsmEmitAnd" syntax="AsmEmitAnd(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="rawMemset"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_AND"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitBounds" syntax="AsmEmitBounds(ctx[], bound)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="bound">
			</param>
		</member>
		<member name="M:AsmEmitBreak" syntax="AsmEmitBreak(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_BREAK"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitCall" syntax="AsmEmitCall(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Callback_Array"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CALL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitCallAbs" syntax="AsmEmitCallAbs(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="24"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="OP_CALL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitCallLabelStringize" syntax="AsmEmitCallLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_CALL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitCell" syntax="AsmEmitCell(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AsmEmitJumpStringize"/>
			<referrer name="AsmEmitOpcode"/>
			<referrer name="AsmEmitOperand"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="ASM_ERROR_SPACE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="AsmRaiseError"/>
			<dependency name="WriteAmxMemory"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitCmps" syntax="AsmEmitCmps(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CMPS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitConstAlt" syntax="AsmEmitConstAlt(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="bernstein"/>
			<referrer name="rawMemset"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CONST_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitConstPri" syntax="AsmEmitConstPri(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_CONST_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitDec" syntax="AsmEmitDec(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitDecAlt" syntax="AsmEmitDecAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitDecI" syntax="AsmEmitDecI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitDecPri" syntax="AsmEmitDecPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitDecS" syntax="AsmEmitDecS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_DEC_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitEq" syntax="AsmEmitEq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_EQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitEqCAlt" syntax="AsmEmitEqCAlt(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_EQ_C_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitEqCPri" syntax="AsmEmitEqCPri(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_EQ_C_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitFill" syntax="AsmEmitFill(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="rawMemset"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_FILL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitGeq" syntax="AsmEmitGeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_GEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitGrtr" syntax="AsmEmitGrtr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_GRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitHalt" syntax="AsmEmitHalt(ctx[], code)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_HALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="code">
			</param>
		</member>
		<member name="M:AsmEmitHeap" syntax="AsmEmitHeap(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_HEAP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitIdxaddr" syntax="AsmEmitIdxaddr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_IDXADDR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitIdxaddrB" syntax="AsmEmitIdxaddrB(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_IDXADDR_B"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
		</member>
		<member name="M:AsmEmitInc" syntax="AsmEmitInc(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitIncAlt" syntax="AsmEmitIncAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitIncI" syntax="AsmEmitIncI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitIncPri" syntax="AsmEmitIncPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitIncS" syntax="AsmEmitIncS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INC_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitInstruction" syntax="AsmEmitInstruction(ctx[], opcode, ...)">
			<tagname value="AsmError"/>
			<stacksize value="8"/>
			<referrer name="AsmEmitJumpInstruction"/>
			<referrer name="AsmEmitAdd"/>
			<referrer name="AsmEmitAddC"/>
			<referrer name="AsmEmitAddrAlt"/>
			<referrer name="AsmEmitAddrPri"/>
			<referrer name="AsmEmitAlignAlt"/>
			<referrer name="AsmEmitAlignPri"/>
			<referrer name="AsmEmitAnd"/>
			<referrer name="AsmEmitBounds"/>
			<referrer name="AsmEmitBreak"/>
			<referrer name="AsmEmitCall"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="AsmEmitCmps"/>
			<referrer name="AsmEmitConstAlt"/>
			<referrer name="AsmEmitConstPri"/>
			<referrer name="AsmEmitDec"/>
			<referrer name="AsmEmitDecAlt"/>
			<referrer name="AsmEmitDecI"/>
			<referrer name="AsmEmitDecPri"/>
			<referrer name="AsmEmitDecS"/>
			<referrer name="AsmEmitEq"/>
			<referrer name="AsmEmitEqCAlt"/>
			<referrer name="AsmEmitEqCPri"/>
			<referrer name="AsmEmitFill"/>
			<referrer name="AsmEmitGeq"/>
			<referrer name="AsmEmitGrtr"/>
			<referrer name="AsmEmitHalt"/>
			<referrer name="AsmEmitHeap"/>
			<referrer name="AsmEmitIdxaddr"/>
			<referrer name="AsmEmitIdxaddrB"/>
			<referrer name="AsmEmitInc"/>
			<referrer name="AsmEmitIncAlt"/>
			<referrer name="AsmEmitIncI"/>
			<referrer name="AsmEmitIncPri"/>
			<referrer name="AsmEmitIncS"/>
			<referrer name="AsmEmitInvert"/>
			<referrer name="AsmEmitJeq"/>
			<referrer name="AsmEmitJgeq"/>
			<referrer name="AsmEmitJgrtr"/>
			<referrer name="AsmEmitJleq"/>
			<referrer name="AsmEmitJless"/>
			<referrer name="AsmEmitJneq"/>
			<referrer name="AsmEmitJnz"/>
			<referrer name="AsmEmitJsgeq"/>
			<referrer name="AsmEmitJsgrtr"/>
			<referrer name="AsmEmitJsleq"/>
			<referrer name="AsmEmitJsless"/>
			<referrer name="AsmEmitJump"/>
			<referrer name="AsmEmitJzer"/>
			<referrer name="AsmEmitLctrl"/>
			<referrer name="AsmEmitLeq"/>
			<referrer name="AsmEmitLess"/>
			<referrer name="AsmEmitLidx"/>
			<referrer name="AsmEmitLidxB"/>
			<referrer name="AsmEmitLoadAlt"/>
			<referrer name="AsmEmitLoadPri"/>
			<referrer name="AsmEmitLoad"/>
			<referrer name="AsmEmitLoadI"/>
			<referrer name="AsmEmitLoadSAlt"/>
			<referrer name="AsmEmitLoadSPri"/>
			<referrer name="AsmEmitLodbI"/>
			<referrer name="AsmEmitLrefAlt"/>
			<referrer name="AsmEmitLrefPri"/>
			<referrer name="AsmEmitLrefSAlt"/>
			<referrer name="AsmEmitLrefSPri"/>
			<referrer name="AsmEmitMoveAlt"/>
			<referrer name="AsmEmitMovePri"/>
			<referrer name="AsmEmitMovs"/>
			<referrer name="AsmEmitNeg"/>
			<referrer name="AsmEmitNeq"/>
			<referrer name="AsmEmitNop"/>
			<referrer name="AsmEmitNot"/>
			<referrer name="AsmEmitOr"/>
			<referrer name="AsmEmitPopAlt"/>
			<referrer name="AsmEmitPopPri"/>
			<referrer name="AsmEmitProc"/>
			<referrer name="AsmEmitPushAdr"/>
			<referrer name="AsmEmitPushAlt"/>
			<referrer name="AsmEmitPushC"/>
			<referrer name="AsmEmitPushPri"/>
			<referrer name="AsmEmitPush"/>
			<referrer name="AsmEmitPushS"/>
			<referrer name="AsmEmitRet"/>
			<referrer name="AsmEmitRetn"/>
			<referrer name="AsmEmitSctrl"/>
			<referrer name="AsmEmitSdiv"/>
			<referrer name="AsmEmitSdivAlt"/>
			<referrer name="AsmEmitSgeq"/>
			<referrer name="AsmEmitSgrtr"/>
			<referrer name="AsmEmitShl"/>
			<referrer name="AsmEmitShlCAlt"/>
			<referrer name="AsmEmitShlCPri"/>
			<referrer name="AsmEmitShrCAlt"/>
			<referrer name="AsmEmitShrCPri"/>
			<referrer name="AsmEmitShr"/>
			<referrer name="AsmEmitSignAlt"/>
			<referrer name="AsmEmitSignPri"/>
			<referrer name="AsmEmitSleq"/>
			<referrer name="AsmEmitSless"/>
			<referrer name="AsmEmitSmul"/>
			<referrer name="AsmEmitSmulC"/>
			<referrer name="AsmEmitSshr"/>
			<referrer name="AsmEmitSrefAlt"/>
			<referrer name="AsmEmitSrefPri"/>
			<referrer name="AsmEmitSrefSAlt"/>
			<referrer name="AsmEmitSrefSPri"/>
			<referrer name="AsmEmitStack"/>
			<referrer name="AsmEmitStorAlt"/>
			<referrer name="AsmEmitStorPri"/>
			<referrer name="AsmEmitStorI"/>
			<referrer name="AsmEmitStorSAlt"/>
			<referrer name="AsmEmitStorSPri"/>
			<referrer name="AsmEmitStrbI"/>
			<referrer name="AsmEmitSub"/>
			<referrer name="AsmEmitSubAlt"/>
			<referrer name="AsmEmitSwapAlt"/>
			<referrer name="AsmEmitSwapPri"/>
			<referrer name="AsmEmitSysreqC"/>
			<referrer name="AsmEmitSysreqD"/>
			<referrer name="AsmEmitSysreqPri"/>
			<referrer name="AsmEmitUdiv"/>
			<referrer name="AsmEmitUdivAlt"/>
			<referrer name="AsmEmitUmul"/>
			<referrer name="AsmEmitXchg"/>
			<referrer name="AsmEmitXor"/>
			<referrer name="AsmEmitZero"/>
			<referrer name="AsmEmitZeroAlt"/>
			<referrer name="AsmEmitZeroPri"/>
			<referrer name="AsmEmitZeroS"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitOpcode"/>
			<dependency name="AsmEmitOperand"/>
			<dependency name="gPreviousWriteOffset"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:AsmEmitInvert" syntax="AsmEmitInvert(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_INVERT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJeq" syntax="AsmEmitJeq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJeqLabelStringize" syntax="AsmEmitJeqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJeqRel" syntax="AsmEmitJeqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJgeq" syntax="AsmEmitJgeq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJgeqLabelStringize" syntax="AsmEmitJgeqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJgeqRel" syntax="AsmEmitJgeqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJgrtr" syntax="AsmEmitJgrtr(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJgrtrLabelStringize" syntax="AsmEmitJgrtrLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJgrtrRel" syntax="AsmEmitJgrtrRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJleq" syntax="AsmEmitJleq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJleqLabelStringize" syntax="AsmEmitJleqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJleqRel" syntax="AsmEmitJleqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJless" syntax="AsmEmitJless(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJlessLabelStringize" syntax="AsmEmitJlessLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJlessRel" syntax="AsmEmitJlessRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJneq" syntax="AsmEmitJneq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JNEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJneqLabelStringize" syntax="AsmEmitJneqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JNEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJneqRel" syntax="AsmEmitJneqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JNEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJnz" syntax="AsmEmitJnz(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JNZ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJnzLabelStringize" syntax="AsmEmitJnzLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JNZ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJnzRel" syntax="AsmEmitJnzRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="bernstein"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JNZ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJrel" syntax="AsmEmitJrel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JREL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJrelLabelStringize" syntax="AsmEmitJrelLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JREL"/>
			<dependency name="true"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJsgeq" syntax="AsmEmitJsgeq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJsgeqLabelStringize" syntax="AsmEmitJsgeqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJsgeqRel" syntax="AsmEmitJsgeqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJsgrtr" syntax="AsmEmitJsgrtr(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJsgrtrLabelStringize" syntax="AsmEmitJsgrtrLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJsgrtrRel" syntax="AsmEmitJsgrtrRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJsleq" syntax="AsmEmitJsleq(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJsleqLabelStringize" syntax="AsmEmitJsleqLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJsleqRel" syntax="AsmEmitJsleqRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJsless" syntax="AsmEmitJsless(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JSLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJslessLabelStringize" syntax="AsmEmitJslessLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JSLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJslessRel" syntax="AsmEmitJslessRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JSLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJump" syntax="AsmEmitJump(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="I@E"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JUMP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJumpInstruction" syntax="AsmEmitJumpInstruction(ctx[], opcode, offset)">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="AsmEmitJeqRel"/>
			<referrer name="AsmEmitJgeqRel"/>
			<referrer name="AsmEmitJgrtrRel"/>
			<referrer name="AsmEmitJleqRel"/>
			<referrer name="AsmEmitJlessRel"/>
			<referrer name="AsmEmitJneqRel"/>
			<referrer name="AsmEmitJnzRel"/>
			<referrer name="AsmEmitJsgeqRel"/>
			<referrer name="AsmEmitJsgrtrRel"/>
			<referrer name="AsmEmitJsleqRel"/>
			<referrer name="AsmEmitJslessRel"/>
			<referrer name="AsmEmitJumpRel"/>
			<referrer name="AsmEmitJzerRel"/>
			<referrer name="AsmEmitJrel"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="AsmGetJumpAddressFromOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJumpLabelInstruction" syntax="AsmEmitJumpLabelInstruction(ctx[], opcode, label[], relative)">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<referrer name="AsmEmitCallLabelStringize"/>
			<referrer name="AsmEmitJeqLabelStringize"/>
			<referrer name="AsmEmitJgeqLabelStringize"/>
			<referrer name="AsmEmitJgrtrLabelStringize"/>
			<referrer name="AsmEmitJleqLabelStringize"/>
			<referrer name="AsmEmitJlessLabelStringize"/>
			<referrer name="AsmEmitJneqLabelStringize"/>
			<referrer name="AsmEmitJnzLabelStringize"/>
			<referrer name="AsmEmitJsgeqLabelStringize"/>
			<referrer name="AsmEmitJsgrtrLabelStringize"/>
			<referrer name="AsmEmitJsleqLabelStringize"/>
			<referrer name="AsmEmitJslessLabelStringize"/>
			<referrer name="AsmEmitJumpLabelStringize"/>
			<referrer name="AsmEmitJzerLabelStringize"/>
			<referrer name="AsmEmitJrelLabelStringize"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitJumpStringize"/>
			<dependency name="AsmEmitOpcode"/>
			<dependency name="gPreviousWriteOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="relative">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJumpLabelStringize" syntax="AsmEmitJumpLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JUMP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJumpRel" syntax="AsmEmitJumpRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JUMP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitJumpStringize" syntax="AsmEmitJumpStringize(ctx[], label[], relative)">
			<tagname value="AsmError"/>
			<stacksize value="10"/>
			<referrer name="AsmEmitJumpLabelInstruction"/>
			<dependency name="ASM_ERROR_LABEL_OVERFLOW"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_label_names"/>
			<dependency name="AsmContext_labels"/>
			<dependency name="AsmEmitCell"/>
			<dependency name="AsmFindLabelIndex"/>
			<dependency name="AsmHashLabel"/>
			<dependency name="AsmRaiseError"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="relative">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJzer" syntax="AsmEmitJzer(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_JZER"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitJzerLabelStringize" syntax="AsmEmitJzerLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="7"/>
			<dependency name="AsmEmitJumpLabelInstruction"/>
			<dependency name="OP_JZER"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitJzerRel" syntax="AsmEmitJzerRel(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="bernstein"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<dependency name="AsmEmitJumpInstruction"/>
			<dependency name="OP_JZER"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitLabelStringize" syntax="AsmEmitLabelStringize(ctx[], label[])">
			<tagname value="AsmError"/>
			<stacksize value="11"/>
			<dependency name="ASM_ERROR_LABEL_DUPLICATE"/>
			<dependency name="ASM_ERROR_LABEL_OVERFLOW"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_label_names"/>
			<dependency name="AsmContext_labels"/>
			<dependency name="AsmFindLabelIndex"/>
			<dependency name="AsmGetJumpAddressFromOffset"/>
			<dependency name="AsmHashLabel"/>
			<dependency name="AsmRaiseError"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="WriteAmxMemory"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitLctrl" syntax="AsmEmitLctrl(ctx[], index)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LCTRL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:AsmEmitLeq" syntax="AsmEmitLeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitLess" syntax="AsmEmitLess(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitLidx" syntax="AsmEmitLidx(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LIDX"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitLidxB" syntax="AsmEmitLidxB(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LIDX_B"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
		</member>
		<member name="M:AsmEmitLoad" syntax="AsmEmitLoad(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitLoadAlt" syntax="AsmEmitLoadAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitLoadI" syntax="AsmEmitLoadI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitLoadPri" syntax="AsmEmitLoadPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="rawMemset"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitLoadSAlt" syntax="AsmEmitLoadSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="rawMemset"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitLoadSPri" syntax="AsmEmitLoadSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="rawMemset"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitLodbI" syntax="AsmEmitLodbI(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LODB_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitLrefAlt" syntax="AsmEmitLrefAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitLrefPri" syntax="AsmEmitLrefPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitLrefSAlt" syntax="AsmEmitLrefSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitLrefSPri" syntax="AsmEmitLrefSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AMX_Read"/>
			<referrer name="bernstein"/>
			<referrer name="I@L"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_LREF_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitMoveAlt" syntax="AsmEmitMoveAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_MOVE_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitMovePri" syntax="AsmEmitMovePri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_MOVE_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitMovs" syntax="AsmEmitMovs(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_MOVS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitNeg" syntax="AsmEmitNeg(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Callback_Array"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NEG"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitNeq" syntax="AsmEmitNeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitNop" syntax="AsmEmitNop(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AMX_Read"/>
			<referrer name="Callback_Array"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NOP"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitNot" syntax="AsmEmitNot(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_NOT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitOpcode" syntax="AsmEmitOpcode(ctx[], opcode)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AsmEmitInstruction"/>
			<referrer name="AsmEmitJumpLabelInstruction"/>
			<dependency name="ASM_ERROR_OPCODE"/>
			<dependency name="AsmEmitCell"/>
			<dependency name="AsmRaiseError"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="RelocateOpcode"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitOperand" syntax="AsmEmitOperand(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AsmEmitInstruction"/>
			<dependency name="AsmEmitCell"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitOr" syntax="AsmEmitOr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_OR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitPadding" syntax="AsmEmitPadding(ctx[], op)">
			<stacksize value="7"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="GetOpcodeInstructionParameters"/>
			<dependency name="IsOpcodeValid"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="WriteAmxMemory"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="op">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitPopAlt" syntax="AsmEmitPopAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="AMX_Read"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_POP_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitPopArgs" syntax="AsmEmitPopArgs(ctx[], n)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitStack"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="n">
			</param>
		</member>
		<member name="M:AsmEmitPopPri" syntax="AsmEmitPopPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="YVA2_CodeGenDeepCleanup"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_POP_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitProc" syntax="AsmEmitProc(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="rawMemset"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PROC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitPush" syntax="AsmEmitPush(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitPushAdr" syntax="AsmEmitPushAdr(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_ADR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitPushAlt" syntax="AsmEmitPushAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitPushArg" syntax="AsmEmitPushArg(ctx[], n)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmGetArgOffset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="n">
			</param>
		</member>
		<member name="M:AsmEmitPushC" syntax="AsmEmitPushC(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitPushNumArgs"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitPushNumArgs" syntax="AsmEmitPushNumArgs(ctx[], n)">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitPushC"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="n">
			</param>
		</member>
		<member name="M:AsmEmitPushPri" syntax="AsmEmitPushPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitPushS" syntax="AsmEmitPushS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitPushArg"/>
			<referrer name="bernstein"/>
			<referrer name="YVA2_CodeGenPushVariable"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_PUSH_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitRet" syntax="AsmEmitRet(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_RET"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitRetn" syntax="AsmEmitRetn(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="rawMemset"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_RETN"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSctrl" syntax="AsmEmitSctrl(ctx[], index)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SCTRL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:AsmEmitSdiv" syntax="AsmEmitSdiv(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SDIV"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSdivAlt" syntax="AsmEmitSdivAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SDIV_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSgeq" syntax="AsmEmitSgeq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SGEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSgrtr" syntax="AsmEmitSgrtr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SGRTR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitShl" syntax="AsmEmitShl(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitShlCAlt" syntax="AsmEmitShlCAlt(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHL_C_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
		</member>
		<member name="M:AsmEmitShlCPri" syntax="AsmEmitShlCPri(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="rawMemset"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHL_C_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
		</member>
		<member name="M:AsmEmitShr" syntax="AsmEmitShr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitShrCAlt" syntax="AsmEmitShrCAlt(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHR_C_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
		</member>
		<member name="M:AsmEmitShrCPri" syntax="AsmEmitShrCPri(ctx[], shift)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SHR_C_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="shift">
			</param>
		</member>
		<member name="M:AsmEmitSignAlt" syntax="AsmEmitSignAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SIGN_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSignPri" syntax="AsmEmitSignPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SIGN_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSleq" syntax="AsmEmitSleq(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SLEQ"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSless" syntax="AsmEmitSless(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SLESS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSmul" syntax="AsmEmitSmul(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SMUL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSmulC" syntax="AsmEmitSmulC(ctx[], value)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="bernstein"/>
			<referrer name="Callback_Array"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SMUL_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:AsmEmitSrefAlt" syntax="AsmEmitSrefAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitSrefPri" syntax="AsmEmitSrefPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitSrefSAlt" syntax="AsmEmitSrefSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitSrefSPri" syntax="AsmEmitSrefSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SREF_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitSshr" syntax="AsmEmitSshr(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SSHR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitStack" syntax="AsmEmitStack(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitPopArgs"/>
			<referrer name="bernstein"/>
			<referrer name="YVA2_CodeGenDeepCleanup"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@L"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STACK"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitStorAlt" syntax="AsmEmitStorAlt(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitStorI" syntax="AsmEmitStorI(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitStorPri" syntax="AsmEmitStorPri(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="rawMemset"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="Callback_Array"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitStorSAlt" syntax="AsmEmitStorSAlt(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_S_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitStorSPri" syntax="AsmEmitStorSPri(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STOR_S_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmEmitStrbI" syntax="AsmEmitStrbI(ctx[], nbytes)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_STRB_I"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:AsmEmitSub" syntax="AsmEmitSub(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SUB"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSubAlt" syntax="AsmEmitSubAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SUB_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSwapAlt" syntax="AsmEmitSwapAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SWAP_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSwapPri" syntax="AsmEmitSwapPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SWAP_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSysreq" syntax="AsmEmitSysreq(ctx[], name[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="I@L"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AsmEmitSysreqC"/>
			<dependency name="GetNativeIndexFromName"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitSysreqC" syntax="AsmEmitSysreqC(ctx[], index)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitSysreq"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SYSREQ_C"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:AsmEmitSysreqD" syntax="AsmEmitSysreqD(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SYSREQ_D"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitSysreqPri" syntax="AsmEmitSysreqPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_SYSREQ_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitUdiv" syntax="AsmEmitUdiv(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_UDIV"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitUdivAlt" syntax="AsmEmitUdivAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_UDIV_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitUmul" syntax="AsmEmitUmul(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_UMUL"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitXchg" syntax="AsmEmitXchg(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="bernstein"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_XCHG"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitXor" syntax="AsmEmitXor(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_XOR"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitZero" syntax="AsmEmitZero(ctx[], address)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:AsmEmitZeroAlt" syntax="AsmEmitZeroAlt(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="Hooks_WriteFunction"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO_ALT"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitZeroPri" syntax="AsmEmitZeroPri(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="5"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO_PRI"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmEmitZeroS" syntax="AsmEmitZeroS(ctx[], offset)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="I@L"/>
			<dependency name="AsmEmitInstruction"/>
			<dependency name="OP_ZERO_S"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmFindLabelIndex" syntax="AsmFindLabelIndex(ctx[], hash)">
			<stacksize value="2"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpStringize"/>
			<dependency name="AsmContext_label_names"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="hash">
			</param>
		</member>
		<member name="M:AsmGetArgOffset" syntax="AsmGetArgOffset(n)">
			<stacksize value="1"/>
			<referrer name="AsmEmitPushArg"/>
			<dependency name="ASM_ARGUMENTS_OFFSET"/>
			<param name="n">
			</param>
		</member>
		<member name="M:AsmGetBufferSize" syntax="AsmGetBufferSize(ctx[])">
			<stacksize value="1"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmGetCode" syntax="AsmGetCode(ctx[])">
			<stacksize value="21"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="GetAmxHeader"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmGetCodeSize" syntax="AsmGetCodeSize(ctx[])">
			<stacksize value="1"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="AsmContext_buffer_offset"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmGetError" syntax="AsmGetError(ctx[])">
			<tagname value="AsmError"/>
			<stacksize value="1"/>
			<referrer name="Inline_OnAsmError"/>
			<dependency name="AsmContext_error"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmGetErrorHandler" syntax="AsmGetErrorHandler(ctx[])">
			<stacksize value="1"/>
			<dependency name="AsmContext_error_handler"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:AsmGetJumpAddressFromOffset" syntax="AsmGetJumpAddressFromOffset(ctx[], offset)">
			<stacksize value="22"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpInstruction"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:AsmGetPreviousWriteOffset" syntax="AsmGetPreviousWriteOffset()">
			<stacksize value="1"/>
			<referrer name="Inline_OnAsmError"/>
			<dependency name="gPreviousWriteOffset"/>
		</member>
		<member name="M:AsmHashLabel" syntax="AsmHashLabel(label[])">
			<stacksize value="4"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpStringize"/>
			<param name="label">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AsmInit" syntax="AsmInit(ctx[], buffer[], size)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="ref"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AsmInitPtr" syntax="AsmInitPtr(ctx[], buffer, size)">
			<tagname value="AsmError"/>
			<stacksize value="2"/>
			<referrer name="AsmInit"/>
			<referrer name="CodeScanGetFunctionAsm"/>
			<referrer name="CodeScanGetMatchAsm"/>
			<referrer name="AMX_Read"/>
			<referrer name="bernstein"/>
			<referrer name="rawMemset"/>
			<referrer name="CGen_UseCodeSpace"/>
			<referrer name="CallStoredFunction"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<referrer name="I@E"/>
			<referrer name="I@L"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="AsmContext_error_handler"/>
			<dependency name="AsmContext_label_names"/>
			<dependency name="AsmContext_labels"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="buffer">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:AsmRaiseError" syntax="AsmRaiseError(ctx[], error)">
			<tagname value="AsmError"/>
			<stacksize value="6"/>
			<referrer name="AsmEmitCell"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitJumpStringize"/>
			<referrer name="AsmEmitOpcode"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_error_handler"/>
			<dependency name="AsmSetError"/>
			<dependency name="CallFunction"/>
			<dependency name="ref"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
			</param>
		</member>
		<member name="M:AsmSetError" syntax="AsmSetError(ctx[], error)">
			<stacksize value="1"/>
			<referrer name="AsmRaiseError"/>
			<referrer name="AsmClearError"/>
			<dependency name="AsmContext_error"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
			</param>
		</member>
		<member name="M:AsmSetErrorHandler" syntax="AsmSetErrorHandler(ctx[], error_handler)">
			<tagname value="AsmError"/>
			<stacksize value="1"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_error_handler"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error_handler">
			</param>
		</member>
		<member name="M:AsmSetErrorHandlerName" syntax="AsmSetErrorHandlerName(ctx[], error_handler[])">
			<tagname value="AsmError"/>
			<stacksize value="4"/>
			<dependency name="ASM_ERROR_NONE"/>
			<dependency name="AsmContext_error_handler"/>
			<dependency name="GetPublicAddressFromName"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error_handler">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:AttachObjectToVehicle" syntax="AttachObjectToVehicle(objectid, vehicleid, OffsetX, OffsetY, OffsetZ, RotX, RotY, RotZ)">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<param name="objectid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="OffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="OffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="OffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="RotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="RotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="RotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:AttachTrailer" syntax="AttachTrailer(playerid)">
			<attribute name="public"/>
			<stacksize value="12"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="AttachTrailerToVehicle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="JobVehicle"/>
			<dependency name="Trailer"/>
			<dependency name="floatabs"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:AttachTrailerToVehicle" syntax="AttachTrailerToVehicle(trailerid, vehicleid)">
			<attribute name="native"/>
			<referrer name="AttachTrailer"/>
			<param name="trailerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:BanIPOffline" syntax="BanIPOffline(playerid, ip, reason)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="SetPVarInt"/>
			<dependency name="cache_affected_rows"/>
			<dependency name="gettime"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="ip">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:BanIPPlayer" syntax="BanIPPlayer(playerid, id, reason)">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="SetPVarInt"/>
			<dependency name="cache_affected_rows"/>
			<dependency name="gettime"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Bit_Bits" syntax="Bit_Bits(size)">
			<stacksize value="1"/>
			<param name="size">
				Number of bits required.
			</param>
			  <returns>  Number of cells required for the bit array.  </returns> 
		</member>
		<member name="M:Bit_Display" syntax="Bit_Display(array[], size)">
			<stacksize value="141"/>
			<dependency name="Bit_Display"/>
			<dependency name="Cell_ReverseBits"/>
			<dependency name="format"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Bit_FastSet" syntax="Bit_FastSet(array[], slot, set, size)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				State to set the slot to.
			</param>
			<param name="size">
				Size of array.
			</param>
			        <remarks>  Exactly the same as "Bit_Set", but as a macro not a function.  native Bit_FastSet(BitArray:array&lt;&gt;, slot, bool:set, size = sizeof (array));  </remarks> 
		</member>
		<member name="M:Bit_Get" syntax="Bit_Get(array[], slot)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <param name="size">Size of array.</param>  <returns>  State of the provided slot, 0 on fail.  </returns>  <remarks>  -  native Bit_Get(BitArray:array&lt;&gt;, slot);  </remarks> 
		</member>
		<member name="M:Bit_GetBit" syntax="Bit_GetBit(array[], slot)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <returns>  State of the provided slot, 0 on fail.  </returns>  <remarks>  Unsafe but faster for when you're sure you're within range.  </remarks> 
		</member>
		<member name="M:Bit_GetCount" syntax="Bit_GetCount(array[], size)">
			<stacksize value="6"/>
			<dependency name="Cell_CountBits"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array to count.
			</param>
			<param name="size">
				Size of array.
			</param>
			    <returns>  Number of 1s in the array.  </returns>  <remarks>  Code from:  <a href="http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetParallel" />  native Bit_Count(BitArray:array&lt;&gt;, size = sizeof (array));  </remarks> 
		</member>
		<member name="M:Bit_Let" syntax="Bit_Let(array[], slot)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <remarks>  Sets the slot to 1.  </remarks> 
		</member>
		<member name="M:Bit_Mask" syntax="Bit_Mask(value)">
			<stacksize value="1"/>
			<param name="value">
				Value to get the mask for
			</param>
			  <returns>  The bit in the array slot to use.  </returns> 
		</member>
		<member name="M:Bit_Set" syntax="Bit_Set(array[], slot, set)">
			<stacksize value="1"/>
			<dependency name="cellbits"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				State to set the slot to.
			</param>
			      <param name="size">Size of array.</param> 
		</member>
		<member name="M:Bit_SetAll" syntax="Bit_SetAll(array[], set, size)">
			<stacksize value="6"/>
			<dependency name="memset"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array to set all values of.
			</param>
			<param name="set">
				<paraminfo>bool </paraminfo>
				Wether to set them all 0 or 1.
			</param>
			<param name="size">
				Size of array.
			</param>
			     
		</member>
		<member name="M:Bit_Slot" syntax="Bit_Slot(value)">
			<stacksize value="1"/>
			<param name="value">
				Value to get the slot for.
			</param>
			  <returns>  The true array slot for this value.  </returns> 
		</member>
		<member name="M:Bit_Vet" syntax="Bit_Vet(array[], slot)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Bit [] </paraminfo>
				Array of bits.
			</param>
			<param name="slot">
				Bit slot.
			</param>
			    <remarks>  Sets the slot to 0.  </remarks> 
		</member>
		<member name="M:CB_AddStaticVehicle" syntax="CB_AddStaticVehicle(modelid, x, y, z, rotation, color1, color2)">
			<stacksize value="11"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Iter_AddStaticVehicle"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:CB_AddStaticVehicleEx" syntax="CB_AddStaticVehicleEx(modelid, x, y, z, rotation, color1, color2, respawn_delay, addsiren)">
			<stacksize value="13"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Iter_AddStaticVehicleEx"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:CB_ApplyAnimation" syntax="CB_ApplyAnimation(playerid, animlib[], animname[], fDelta, loop, lockx, locky, freeze, time, forcesync)">
			<stacksize value="13"/>
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="OnePlayAnim"/>
			<referrer name="StopLoopingAnim"/>
			<referrer name="PreloadAnimLib"/>
			<referrer name="LoopingAnim"/>
			<referrer name="pc_cmd_carhand"/>
			<referrer name="pc_cmd_clearanim"/>
			<referrer name="pc_cmd_salute"/>
			<referrer name="pc_cmd_jumpwater"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fDelta">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="loop">
			</param>
			<param name="lockx">
			</param>
			<param name="locky">
			</param>
			<param name="freeze">
			</param>
			<param name="time">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:CB_CancelSelectTextDraw" syntax="CB_CancelSelectTextDraw(playerid)">
			<stacksize value="7"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="CancelSelectTextDraw"/>
			<dependency name="e_bSelectTD"/>
			<dependency name="e_iHoverColor"/>
			<dependency name="false"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CB_CreateVehicle" syntax="CB_CreateVehicle(modelid, x, y, z, rotation, color1, color2, respawn_delay, addsiren)">
			<stacksize value="13"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Iter_CreateVehicle"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:CB_OnGameModeInit" syntax="CB_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="4103"/>
			<dependency name="AllowInteriorWeapons"/>
			<dependency name="DCC_GetBotPresenceStatus"/>
			<dependency name="DCC_SetBotActivity"/>
			<dependency name="DCC_SetBotPresenceStatus"/>
			<dependency name="DisableInteriorEnterExits"/>
			<dependency name="EnableStuntBonusForAll"/>
			<dependency name="IDLE"/>
			<dependency name="ManualVehicleEngineAndLights"/>
			<dependency name="MySQLLoad"/>
			<dependency name="PayDayTime"/>
			<dependency name="SetNameTagDrawDistance"/>
			<dependency name="ShowPlayerMarkers"/>
			<dependency name="UsePlayerPedAnims"/>
			<dependency name="false"/>
			<dependency name="gettime"/>
			<dependency name="loadMaps"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
		</member>
		<member name="M:CB_OnPlayerDisconnect" syntax="CB_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="CancelJob"/>
			<dependency name="DCC_GetBotPresenceStatus"/>
			<dependency name="DCC_SetBotActivity"/>
			<dependency name="DCC_SetBotPresenceStatus"/>
			<dependency name="EOS"/>
			<dependency name="IDLE"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@MutedPlayers"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="Iter_Single@ServerStaff"/>
			<dependency name="Iter_Single@TotalClanMembers"/>
			<dependency name="Iter_Single@loggedPlayers"/>
			<dependency name="Iterator@MutedPlayers"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="Iterator@ServerStaff"/>
			<dependency name="Iterator@TotalClanMembers"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="MoneyMoney"/>
			<dependency name="REPORT_TYPE_NONE"/>
			<dependency name="StoreMoney"/>
			<dependency name="Working"/>
			<dependency name="cClanColor"/>
			<dependency name="clanInfo"/>
			<dependency name="destroyPlayerTextDraws"/>
			<dependency name="gettime"/>
			<dependency name="pClan"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pReportChat"/>
			<dependency name="pReportMute"/>
			<dependency name="pSQLID"/>
			<dependency name="pSeconds"/>
			<dependency name="pSpawnChange"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportPlayer"/>
			<dependency name="reportText"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendClanMessage"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendStaff"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:CB_OnPlayerKeyStateChange" syntax="CB_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="8202"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AttachTrailer"/>
			<dependency name="EOS"/>
			<dependency name="FishWeight"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="IsTrailerAttachedToVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="J@"/>
			<dependency name="JOB_FISHER"/>
			<dependency name="JobVehicle"/>
			<dependency name="MoneyMoney"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="SetVehicleParamsForPlayer"/>
			<dependency name="SetVehicleVelocity"/>
			<dependency name="StopFly"/>
			<dependency name="StopLoopingAnim"/>
			<dependency name="StoreMoney"/>
			<dependency name="Working"/>
			<dependency name="areaBizz"/>
			<dependency name="areaFaction"/>
			<dependency name="areaHouse"/>
			<dependency name="bizBalance"/>
			<dependency name="bizExtX"/>
			<dependency name="bizExtY"/>
			<dependency name="bizExtZ"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInterior"/>
			<dependency name="bizLocked"/>
			<dependency name="bizStatic"/>
			<dependency name="bizType"/>
			<dependency name="bizX"/>
			<dependency name="bizY"/>
			<dependency name="bizZ"/>
			<dependency name="checkMission"/>
			<dependency name="closeGate_yT@"/>
			<dependency name="fEnterX"/>
			<dependency name="fEnterY"/>
			<dependency name="fEnterZ"/>
			<dependency name="fExitX"/>
			<dependency name="fExitY"/>
			<dependency name="fExitZ"/>
			<dependency name="fID"/>
			<dependency name="fInterior"/>
			<dependency name="fLocked"/>
			<dependency name="factionInfo"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="false"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gQuery"/>
			<dependency name="gates"/>
			<dependency name="gettime"/>
			<dependency name="hExtX"/>
			<dependency name="hExtY"/>
			<dependency name="hExtZ"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hLocked"/>
			<dependency name="hOwner"/>
			<dependency name="hX"/>
			<dependency name="hY"/>
			<dependency name="hZ"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isBike"/>
			<dependency name="isBoat"/>
			<dependency name="isPlane"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAnimLooping"/>
			<dependency name="pDailyMission"/>
			<dependency name="pEnableBoost"/>
			<dependency name="pFaction"/>
			<dependency name="pFishSkill"/>
			<dependency name="pFishTimes"/>
			<dependency name="pFlymode"/>
			<dependency name="pSQLID"/>
			<dependency name="pc_cmd_engine"/>
			<dependency name="pc_cmd_lights"/>
			<dependency name="pc_cmd_lock"/>
			<dependency name="personalVehicle"/>
			<dependency name="pinBusiness"/>
			<dependency name="pinFaction"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="returnNeededPoints"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_GameTextForPlayer"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:CB_OnPlayerStateChange" syntax="CB_OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="CancelJob"/>
			<dependency name="ClearAnimations"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@PlayerInVehicle"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@PlayerInVehicle"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="J@"/>
			<dependency name="Kick"/>
			<dependency name="PlayerMoney"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="RemovePlayerFromVehicle"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="TimerSpeedo_yT@"/>
			<dependency name="Working"/>
			<dependency name="_Timer_F"/>
			<dependency name="addRaportPoint"/>
			<dependency name="examenFail"/>
			<dependency name="fareTD"/>
			<dependency name="fareUpdateTimer_yT@"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="getVehicleOwner"/>
			<dependency name="gettime"/>
			<dependency name="isBike"/>
			<dependency name="isBoat"/>
			<dependency name="isPlane"/>
			<dependency name="pAdmin"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="pFaction"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pName"/>
			<dependency name="pTaxiDriver"/>
			<dependency name="pTaxiDuty"/>
			<dependency name="pTaxiFare"/>
			<dependency name="pTaxiMoney"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pinVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAge"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvFuel"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOdometer"/>
			<dependency name="pvOwnerID"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="speedo"/>
			<dependency name="taxi"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="updateTaxiTextdraw"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="va_SendClientMessageToAll"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehicleHud"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:CB_OnPlayerWeaponShot" syntax="CB_OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="42"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="AntiCheatWarnings"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="Contract"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerLastShotVectors"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerTargetPlayer"/>
			<dependency name="GetWeaponName"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Contracts"/>
			<dependency name="Iterator@Contracts"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="J@"/>
			<dependency name="ShowPlayerNameTagForPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="addRaportPoint"/>
			<dependency name="cAgainst"/>
			<dependency name="cID"/>
			<dependency name="cMoney"/>
			<dependency name="contractInfo"/>
			<dependency name="contractInfo"/>
			<dependency name="floatround"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="pTazer"/>
			<dependency name="pTintaApasata"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="tazerTimer_yT@"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CB_SelectTextDraw" syntax="CB_SelectTextDraw(playerid, hovercolor)">
			<stacksize value="7"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="pc_cmd_buycar"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="SelectTextDraw"/>
			<dependency name="e_bSelectTD"/>
			<dependency name="e_iHoverColor"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="hovercolor">
			</param>
		</member>
		<member name="M:CGen_AddCodeSpace" syntax="CGen_AddCodeSpace(num)">
			<stacksize value="4"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteJustSpec"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_g_sCodeSpace"/>
			<param name="num">
			</param>
		</member>
		<member name="M:CGen_GetAddr" syntax="CGen_GetAddr(func[])">
			<stacksize value="6"/>
			<referrer name="CGen_SetupCodeSpace"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_Read"/>
			<dependency name="funcidx"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CGen_GetCodeSpace" syntax="CGen_GetCodeSpace()">
			<stacksize value="3"/>
			<referrer name="Hooks_GenerateCode"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteJustSpec"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="CGen_SetupCodeSpace"/>
			<dependency name="YSI_g_sCodeSpace"/>
		</member>
		<member name="M:CGen_SetupCodeSpace" syntax="CGen_SetupCodeSpace()">
			<stacksize value="5"/>
			<referrer name="CGen_UseCodeSpace"/>
			<referrer name="CGen_GetCodeSpace"/>
			<dependency name="AMX_Write"/>
			<dependency name="CGen_GetAddr"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="YSI_g_sCodeEnd"/>
			<dependency name="YSI_g_sCodeSpace"/>
		</member>
		<member name="M:CGen_UseCodeSpace" syntax="CGen_UseCodeSpace(ctx[])">
			<stacksize value="6"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="CGen_SetupCodeSpace"/>
			<dependency name="YSI_g_sCodeEnd"/>
			<dependency name="YSI_g_sCodeSpace"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:Calculate" syntax="Calculate(seconds)">
			<stacksize value="4107"/>
			<dependency name="Calculate"/>
			<dependency name="string_fast"/>
			<param name="seconds">
			</param>
		</member>
		<member name="M:CalculateEmails" syntax="CalculateEmails(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cache_num_rows"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Call" syntax="Call(address, auto_pop)">
			<stacksize value="5"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CallFunction" syntax="CallFunction(address, ...)">
			<stacksize value="5"/>
			<referrer name="AsmRaiseError"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<referrer name="VA_OnScriptInit"/>
			<param name="address">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallLocalFunction" syntax="CallLocalFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Malloc_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="@a"/>
			<referrer name="CB_CreateVehicle"/>
			<referrer name="CB_AddStaticVehicle"/>
			<referrer name="CB_AddStaticVehicleEx"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
			<referrer name="OnDialogResponse"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallN" syntax="CallN(address, args_to_push, auto_pop)">
			<stacksize value="6"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="args_to_push">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CallNative" syntax="CallNative(index, ...)">
			<stacksize value="8"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<param name="index">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallNativeByAddress" syntax="CallNativeByAddress(address, ...)">
			<stacksize value="8"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<param name="address">
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallRemoteFunction" syntax="CallRemoteFunction(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Malloc_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="@a"/>
			<referrer name="_@_y_inline_@_"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_houseoption"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="pc_cmd_bizoption"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_spawnchange"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="pc_cmd_emails"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CallStoredFunction" syntax="CallStoredFunction(func, ...)">
			<stacksize value="28"/>
			<referrer name="CallStoredFunction"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitJzerRel"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmInitPtr"/>
			<param name="func">
				<paraminfo>Function </paraminfo>
				Function pointer to call.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				The function's parameters.
			</param>
			    <remarks>  Call the function in the given pointer with the given parameters.  </remarks> 
		</member>
		<member name="M:Callback_Array" syntax="Callback_Array(func[], params[], num)">
			<stacksize value="28"/>
			<referrer name="Callback_Array"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitCall"/>
			<dependency name="AsmEmitJzerRel"/>
			<dependency name="AsmEmitLoadI"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitMovs"/>
			<dependency name="AsmEmitNeg"/>
			<dependency name="AsmEmitNop"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitSmulC"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="Callback_Call"/>
			<param name="func">
				<paraminfo> [5] </paraminfo>
				Info on the function to be called.
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
				Array of data pointers.
			</param>
			<param name="num">
				Size of the array.
			</param>
			      <remarks>  This is very similar to Callback_Call, but takes an array of ADDRESSES  instead of normal parameters.  This is designed to help support some  experimental OO code I was working on...  If the target is a public function, the parameters are resolved and passed  normally.  If the target is an inline function we are optimised for the  common case, so move the data on to the stack (currently done value-by-value  not all at once) and call "Callback_Call".  The new assembly is based on "rawMemset" in "y_utils".  </remarks> 
		</member>
		<member name="M:Callback_Call" syntax="Callback_Call(func[], ...)">
			<stacksize value="28"/>
			<referrer name="Callback_Call"/>
			<referrer name="Callback_Array"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitJzerRel"/>
			<dependency name="AsmEmitLoadI"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmInitPtr"/>
			<param name="func">
				<paraminfo> [5] </paraminfo>
				Info on the function to be called.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			  <remarks>  Takes an inline function handler and parameters, and either calls the  public function while passing through the parameters, or just jumps to the  carefully crafted inline function code.  </remarks> 
		</member>
		<member name="M:Callback_CheckAnimation" syntax="Callback_CheckAnimation(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="e_bAnimSet"/>
			<dependency name="e_iAnimIndex"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Callback_Get" syntax="Callback_Get(name[], ret[], expect[], remote)">
			<tagname value="bool"/>
			<stacksize value="14"/>
			<dependency name="AMX_Read"/>
			<dependency name="E_CALLBACK_DATA"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="E_CALLBACK_DATA_FORMAT"/>
			<dependency name="E_CALLBACK_DATA_OFFSET"/>
			<dependency name="E_CALLBACK_DATA_POINTER"/>
			<dependency name="GetCurrentFramePreviousFrame"/>
			<dependency name="GetFrameFunction"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="GetFrameReturn"/>
			<dependency name="GetLocalFunction"/>
			<dependency name="GetRemoteFunction"/>
			<dependency name="Inline_EncodeFormatString"/>
			<dependency name="Inline_Reset"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="Malloc_Resolve"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sPrevInlineFunc"/>
			<dependency name="false"/>
			<dependency name="memcpy"/>
			<dependency name="rawMemcpy"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo>callback_tag [] </paraminfo>
				Callback to find by name.
			</param>
			<param name="ret">
				<paraminfo> [5] </paraminfo>
				Where to store the pointer.
			</param>
			<param name="expect">
				<paraminfo> [] </paraminfo>
				What parameters the function takes.
			</param>
			<param name="remote">
				<paraminfo>bool </paraminfo>
				Is this function called on one or all scripts?
			</param>
			        <remarks>  Looks up the callback by name.  If the name has the correct data embedded  within it that's great and we use that directly.  Otherwise this function  loops backwards over the callbacks currently in scope (mostly) to the start  of the parent function.  If a match is still not found this looks for a  public function of the same name.  If that isn't found either it gives up.  The new "remote" parameter returns instantly with a remote public function  stub, and no stored data.  </remarks> 
		</member>
		<member name="M:Callback_GetDriver" syntax="Callback_GetDriver(vehicleid)">
			<stacksize value="6"/>
			<referrer name="OnPlayerStateChange"/>
			<dependency name="GetPlayerPoolSize"/>
			<dependency name="GetPlayerState"/>
			<dependency name="IsPlayerInVehicle"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Callback_GetFlag" syntax="Callback_GetFlag(playerid, flag)">
			<stacksize value="1"/>
			<referrer name="IsPlayerPaused"/>
			<referrer name="IsPlayerBurning"/>
			<referrer name="IsPlayerAiming"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
			<dependency name="e_bFlags"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
			<param name="flag">
				<paraminfo>e_PLAYER_FLAGS </paraminfo>
			</param>
		</member>
		<member name="M:Callback_GetMaxClip" syntax="Callback_GetMaxClip(weaponid)">
			<stacksize value="1"/>
			<referrer name="OnPlayerWeaponShot"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:Callback_GetSpeed" syntax="Callback_GetSpeed(vehicleid)">
			<tagname value="Float"/>
			<stacksize value="9"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="floatsqroot"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Callback_HoldTimer" syntax="Callback_HoldTimer(playerid, key)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="KillTimer"/>
			<dependency name="e_PLAYER_TICK"/>
			<dependency name="e_bHoldKey"/>
			<dependency name="e_bKeyPress"/>
			<dependency name="e_iHoldTimer"/>
			<dependency name="false"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="key">
			</param>
		</member>
		<member name="M:Callback_IsVehicleInPoint" syntax="Callback_IsVehicleInPoint(vehicleid, range, x, y, z)">
			<stacksize value="9"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetVehiclePos"/>
			<param name="vehicleid">
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Callback_Release" syntax="Callback_Release(input[])">
			<stacksize value="4"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="E_CALLBACK_DATA_POINTER"/>
			<dependency name="Malloc_Free"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="input">
				<paraminfo> [5] </paraminfo>
				Callback to release.
			</param>
			  <remarks>  Releases all the data associated with a given callback (closure storage).  </remarks> 
		</member>
		<member name="M:Callback_Restore" syntax="Callback_Restore(func[])">
			<stacksize value="9"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="E_CALLBACK_DATA_OFFSET"/>
			<dependency name="GetCurrentFramePreviousFrame"/>
			<dependency name="GetFrameParameterSize"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="GetFrameReturn"/>
			<dependency name="SetFramePreviousFrame"/>
			<dependency name="SetFrameReturn"/>
			<dependency name="rawMemcpy"/>
			<param name="func">
				<paraminfo> [5] </paraminfo>
				Info on the restoration function.
			</param>
			  <remarks>  Makes variables referenced, instead of valued.  When used after  "Callback_Call" the values of any variables in the enclosing function that  were modified in the inline function will be propgated so that their new  values are seen by the original parent function (rather than that function  still seeing the original values prior to the inline function modifying  them).  Note that this does no checks at all at the minute - if you call an  inline function whose parent is not currently on the stack, this will  probably fail catastrophically!  </remarks> 
		</member>
		<member name="M:Callback_SetFlag" syntax="Callback_SetFlag(playerid, flag, status)">
			<stacksize value="1"/>
			<referrer name="CB_SelectTextDraw"/>
			<referrer name="CB_CancelSelectTextDraw"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerClickTextDraw"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Callback_CheckAnimation"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
			<dependency name="e_bFlags"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
			<param name="flag">
				<paraminfo>e_PLAYER_FLAGS </paraminfo>
			</param>
			<param name="status">
			</param>
		</member>
		<member name="M:Callback_TabCheck" syntax="Callback_TabCheck()">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="GetPlayerPoolSize"/>
			<dependency name="GetPlayerState"/>
			<dependency name="e_PLAYER_LAST_UPDATE"/>
			<dependency name="e_PLAYER_TICK"/>
			<dependency name="e_bPaused"/>
			<dependency name="e_bUpdate"/>
			<dependency name="false"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="true"/>
		</member>
		<member name="M:CancelJob" syntax="CancelJob(playerid, job)">
			<stacksize value="4"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="ClearAnimations"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="FishTimer"/>
			<dependency name="FishWeight"/>
			<dependency name="Fishing"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="JOB_ARMSDEALER"/>
			<dependency name="JOB_CARPENTER"/>
			<dependency name="JOB_DRUGSDEALER"/>
			<dependency name="JOB_FISHER"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="JobVehicle"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="Trailer"/>
			<dependency name="Working"/>
			<dependency name="_Timer_F"/>
			<dependency name="false"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="job">
			</param>
		</member>
		<member name="M:CancelSelectTextDraw" syntax="CancelSelectTextDraw(playerid)">
			<attribute name="native"/>
			<referrer name="CB_CancelSelectTextDraw"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CautaHelper" syntax="CautaHelper(playerid)">
			<stacksize value="11"/>
			<referrer name="CautaHelperNou"/>
			<referrer name="pc_cmd_n"/>
			<dependency name="ConversationOpen"/>
			<dependency name="HelperAtribut"/>
			<dependency name="HelperBusy"/>
			<dependency name="HelperDuty"/>
			<dependency name="I@"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="J@"/>
			<dependency name="QuestionStock"/>
			<dependency name="QuestionStock"/>
			<dependency name="SendClientMessage"/>
			<dependency name="helpTimer"/>
			<dependency name="helpnTimer_yT@"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:CautaHelperNou" syntax="CautaHelperNou(playerid, reason)">
			<stacksize value="9"/>
			<referrer name="helpnTimer"/>
			<referrer name="pc_cmd_skipn"/>
			<dependency name="CautaHelper"/>
			<dependency name="HelperAtribut"/>
			<dependency name="HelperBusy"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:Cell_CompressRight" syntax="Cell_CompressRight(x, m)">
			<stacksize value="12"/>
			<dependency name="Cell_CompressRightPrecomputed"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="x">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				The number to compress.
			</param>
			<param name="m">
				The mask for which bits to compress.
			</param>
			<summary>  Cell_CompressRight(GLOBAL_TAG_TYPES:x, m);  </summary>      <returns>  Selected bits from "x", shifted to be LSBs.  </returns>  <remarks>  Doesn't require precomputation.  </remarks> 
		</member>
		<member name="M:Cell_CompressRightPrecomputed" syntax="Cell_CompressRightPrecomputed(x, m, masks[])">
			<stacksize value="2"/>
			<referrer name="Cell_CompressRight"/>
			<param name="x">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				The number to compress.
			</param>
			<param name="m">
				The mask for which bits to compress.
			</param>
			<param name="masks">
				<paraminfo> [5] </paraminfo>
				Precomputed constants for the compression.
			</param>
			<summary>  Cell_CompressRightPrecomputed(GLOBAL_TAG_TYPES:x, m, masks[5]);  </summary>        <returns>  Selected bits from "x", shifted to be LSBs.  </returns>  <remarks>  Very briefly, do "x &amp; m", to select certain bits, then shift those bits  by various amounts so that they are consecutive:  x = 0b110011  m = 0b011010  x &amp; m = 0b010010  From here, because the mask was three bits we know we want just those three  bits in the LSBs, so the answer becomes:  0b000101  Just read this question, it has a diagram:  <a href="http://stackoverflow.com/questions/28282869/shift-masked-bits-to-the-lsb" />  </remarks> 
		</member>
		<member name="M:Cell_CountBits" syntax="Cell_CountBits(data)">
			<stacksize value="1"/>
			<referrer name="Bit_GetCount"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_CountBits(number);  </summary>  <param name="number">The number to get the number of 1s in.</param>  <returns>  The number of 1s (set bits) in the input.  </returns>  <remarks>  1)  Example: 0  Returns: 0  2)  Example: 1  Returns: 1  3)  Example: 0x01010101  Returns: 4  I rewrote this in assembly just to see if I could pretty much.  I also  rewrote the lookup version in assembly.  In theory it should be faster, but  the marshalling of data was a little awkward.  </remarks> 
		</member>
		<member name="M:Cell_ExpandLeft" syntax="Cell_ExpandLeft(x, m)">
			<stacksize value="12"/>
			<dependency name="Cell_ExpandLeftPrecomputed"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="x">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				The number to expand.
			</param>
			<param name="m">
				The mask for which bits to expand to.
			</param>
			<summary>  Cell_ExpandLeft(GLOBAL_TAG_TYPES:x, m)  </summary>      <returns>  LSBs from "x", shifted to selected bit positions.  </returns>  <remarks>  Doesn't require precomputation.  </remarks> 
		</member>
		<member name="M:Cell_ExpandLeftPrecomputed" syntax="Cell_ExpandLeftPrecomputed(x, m, masks[])">
			<stacksize value="2"/>
			<referrer name="Cell_ExpandLeft"/>
			<param name="x">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				The number to expand.
			</param>
			<param name="m">
				The mask for which bits to expand to.
			</param>
			<param name="masks">
				<paraminfo> [5] </paraminfo>
				Precomputed constants for the expansion.
			</param>
			<summary>  Cell_ExpandLeftPrecomputed(GLOBAL_TAG_TYPES:x, m, masks[5])  </summary>        <returns>  LSBs from "x", shifted to selected bit positions.  </returns>  <remarks>  The reverse of "Cell_CompressRightPrecomputed".  Doesn't return exactly the  original number before a compression, just the original number ANDed with  the mask "m".  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBit" syntax="Cell_GetLowestBit(data)">
			<stacksize value="1"/>
			<referrer name="Iter_Func@Bits"/>
			<referrer name="Iter_Func@Blanks"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_GetLowestBit(number);  </summary>  <param name="number">The number to get the lowest set bit of.</param>  <returns>  The integer position of the lowest set bit.  </returns>  <remarks>  1)  Example: 0b00000000000000000000000000000001  Returns: 0  2)  Example: 0b00000000000000000000000000001000  Returns: 3  3)  Example: 0b00010001100011000011100010001000  Returns: 3  NOTE: This function returns "0" for both numbers with the "1" bit set AND  the number "0", which has NO bits set.  Check that the number is valid  before passing it to this function.  See: <a href="http://supertech.csail.mit.edu/papers/debruijn.pdf" />  </remarks> 
		</member>
		<member name="M:Cell_GetLowestBitEx" syntax="Cell_GetLowestBitEx(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_GetLowestBitEx(number);  </summary>  <param name="number">The number to get the lowest set bit of PLUS ONE.</param>  <returns>  The integer position of the lowest set bit PLUS ONE.  </returns>  <remarks>  This function is identical to "Cell_GetLowestBit", but gives different  results for 0 and non-zero numbers.  The examples below all have a result  one higher than the "Cell_GetLowestBit" function.  1)  Example: 0b00000000000000000000000000000001  Returns: 1  2)  Example: 0b00000000000000000000000000001000  Returns: 4  3)  Example: 0b00010001100011000011100010001000  Returns: 4  4)  Example: 0  Returns: 0  See: <a href="http://supertech.csail.mit.edu/papers/debruijn.pdf" />  </remarks> 
		</member>
		<member name="M:Cell_GetLowestComponent" syntax="Cell_GetLowestComponent(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_GetLowestComponent(number);  </summary>  <param name="number">The number to get the number of 1s in.</param>  <returns>  The lowest set bit.  </returns>  <remarks>  Similar to Cell_GetLowestBit, but returns the bit, not the position of the  bit.  1)  Example: 0b00000000000000000000000000000001  Returns: 0b00000000000000000000000000000001  2)  Example: 0b00000000000000000000000000001000  Returns: 0b00000000000000000000000000001000  3)  Example: 0b00010001100011000011100010001000  Returns: 0b00000000000000000000000000001000  </remarks> 
		</member>
		<member name="M:Cell_PrecomputeMaskPermutation" syntax="Cell_PrecomputeMaskPermutation(m)">
			<stacksize value="10"/>
			<referrer name="Cell_CompressRight"/>
			<referrer name="Cell_ExpandLeft"/>
			<dependency name="Cell_PrecomputeMaskPermutation"/>
			<param name="m">
				The mask.
			</param>
			<summary>  Cell_PrecomputeMaskPermutation(m)  </summary>    <returns>  Five precomputed constants to help expand or contract this mask.  </returns>  <remarks>  The full maths for generalised expansion and contraction is quite complex;  however, much of the inner loop relies only on the mask and not on the value  being manipulated.  Given this we can do a lot of work in advance, say  outside a loop, to avoid repeated calculations.  </remarks> 
		</member>
		<member name="M:Cell_ReverseBits" syntax="Cell_ReverseBits(data)">
			<stacksize value="1"/>
			<referrer name="Bit_Display"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_ReverseBits(number);  </summary>  <param name="number">The number to manipulate.</param>  <returns>  All the bits in the input reversed.  </returns>  <remarks>  1)  Example: 0b11110000000000000000000000000000  Becomes: 0b00000000000000000000000000001111  2)  Example: 0b10110011100011110000111110000010  Becomes: 0b01000001111100001111000111001101  3)  Example: 0b01010101010101010101010101010101  Becomes: 0b10101010101010101010101010101010  </remarks> 
		</member>
		<member name="M:Cell_ReverseBytes" syntax="Cell_ReverseBytes(data)">
			<stacksize value="1"/>
			<referrer name="Hooks_CompareNextCell"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_ReverseBytes(number);  </summary>  <param name="number">The number to manipulate.</param>  <returns>  All the bytes in the input reversed.  </returns>  <remarks>  1)  Example: 0x12345678  Becomes: 0x78563412  2)  Example: 0x01020304  Becomes: 0x04030201  3)  Example: 0xFF00FF00  Becomes: 0x00FF00FF  </remarks> 
		</member>
		<member name="M:Cell_ReverseNibbles" syntax="Cell_ReverseNibbles(data)">
			<stacksize value="1"/>
			<param name="data">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
			<summary>  Cell_ReverseNibbles(number);  </summary>  <param name="number">The number to manipulate.</param>  <returns>  All the nibbles (4-bit chunks) in the input reversed.  </returns>  <remarks>  1)  Example: 0x12345678  Becomes: 0x87654321  2)  Example: 0x010F0703  Becomes: 0x3070F010  3)  Example: 0xF0F0F0F0  Becomes: 0x0F0F0F0F  </remarks> 
		</member>
		<member name="M:ChangeVehicleColor" syntax="ChangeVehicleColor(vehicleid, color1, color2)">
			<attribute name="native"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carcolor"/>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:ChangeVehiclePaintjob" syntax="ChangeVehiclePaintjob(vehicleid, paintjobid)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="OnVehicleSpawn"/>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:CheckIP" syntax="CheckIP(playerid, params)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="SetPVarInt"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gettime"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
			</param>
		</member>
		<member name="M:CheckerBigInt" syntax="CheckerBigInt(BigInt[])">
			<stacksize value="27"/>
			<referrer name="pc_cmd_givemoney"/>
			<dependency name="IsNumeric"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="strfind"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<param name="BigInt">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ClearAnimations" syntax="ClearAnimations(playerid, forcesync)">
			<attribute name="native"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="usedrugsTimer"/>
			<referrer name="CancelJob"/>
			<referrer name="pc_cmd_bomb"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
			<param name="forcesync">
			</param>
		</member>
		<member name="M:CodeScanAddJumpTarget" syntax="CodeScanAddJumpTarget(cip, stk, hea, jumpTargets[], num)">
			<stacksize value="4"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_jump_heap"/>
			<dependency name="CodeScanner_jump_stack"/>
			<dependency name="CodeScanner_jump_switch"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<dependency name="min"/>
			<param name="cip">
			</param>
			<param name="stk">
			</param>
			<param name="hea">
			</param>
			<param name="jumpTargets">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:CodeScanAddMatcher" syntax="CodeScanAddMatcher(scanner[], searcher[])">
			<stacksize value="4"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="ref"/>
			<param name="scanner">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="searcher">
				<paraminfo> [267] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanAddSwitchTarget" syntax="CodeScanAddSwitchTarget(dctx[], stk, hea, jumpTargets[], num)">
			<stacksize value="6"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="CodeScanner_jump_heap"/>
			<dependency name="CodeScanner_jump_stack"/>
			<dependency name="CodeScanner_jump_switch"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="cellbits"/>
			<dependency name="gBase"/>
			<dependency name="gHdr"/>
			<dependency name="min"/>
			<param name="dctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="stk">
			</param>
			<param name="hea">
			</param>
			<param name="jumpTargets">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:CodeScanCall" syntax="CodeScanCall(cs[], csState[])">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_func"/>
			<dependency name="CodeScanMatcher_user_data"/>
			<dependency name="false"/>
			<param name="cs">
				<paraminfo> [267] </paraminfo>
			</param>
			<param name="csState">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanCheck" syntax="CodeScanCheck(op, dctx[], cs[], fctx[], &amp;next)">
			<tagname value="bool"/>
			<stacksize value="12"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanMatch_holes"/>
			<dependency name="CodeScanMatch_size"/>
			<dependency name="CodeScanMatcher_code"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_holeidx"/>
			<dependency name="CodeScanMatcher_holes"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_offset"/>
			<dependency name="CodeScanMatcher_start"/>
			<dependency name="DisasmGetCurIp"/>
			<dependency name="DisasmGetNextIp"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="OP_BOUNDS"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_HALT"/>
			<dependency name="OP_NOP"/>
			<dependency name="cellbits"/>
			<dependency name="false"/>
			<dependency name="memcpy"/>
			<dependency name="true"/>
			<param name="op">
				<paraminfo>Opcode </paraminfo>
			</param>
			<param name="dctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="cs">
				<paraminfo> [267] </paraminfo>
			</param>
			<param name="fctx">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanCheckJumpTarget" syntax="CodeScanCheckJumpTarget(cip, deloc, &amp;stk, &amp;hea, jumpTargets[], num)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_jump_heap"/>
			<dependency name="CodeScanner_jump_stack"/>
			<dependency name="CodeScanner_jump_switch"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="cellbits"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="cip">
			</param>
			<param name="deloc">
			</param>
			<param name="stk">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hea">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="jumpTargets">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:CodeScanDeref" syntax="CodeScanDeref(v)">
			<stacksize value="1"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanDeref"/>
			<dependency name="CodeScanMatcher"/>
			<param name="v">
			</param>
		</member>
		<member name="M:CodeScanGetFuncName" syntax="CodeScanGetFuncName(addr, name[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<referrer name="CodeScanGetMatchType"/>
			<dependency name="GetPublicIndexFromAddress"/>
			<dependency name="GetPublicNameFromIndex"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="addr">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetFunctionAsm" syntax="CodeScanGetFunctionAsm(csm[], ctx[], offset)">
			<stacksize value="6"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="cellmax"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:CodeScanGetFunctionDisasm" syntax="CodeScanGetFunctionDisasm(csm[], ctx[], offset)">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:CodeScanGetFunctionScanner" syntax="CodeScanGetFunctionScanner(csm[], ret[], ctx[])">
			<stacksize value="4"/>
			<referrer name="CodeScanGetMatchScanner"/>
			<dependency name="CodeScanInit"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="CodeScanner_state"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ret">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchAddress" syntax="CodeScanGetMatchAddress(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="gDat"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchAddressData" syntax="CodeScanGetMatchAddressData(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="CodeScanMatch_cip"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchAsm" syntax="CodeScanGetMatchAsm(csm[], ctx[], offset)">
			<stacksize value="6"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="cellmax"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:CodeScanGetMatchDisasm" syntax="CodeScanGetMatchDisasm(csm[], ctx[], offset)">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:CodeScanGetMatchFunc" syntax="CodeScanGetMatchFunc(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="gDat"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchFuncData" syntax="CodeScanGetMatchFuncData(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_func"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchHeap" syntax="CodeScanGetMatchHeap(csm[])">
			<stacksize value="1"/>
			<dependency name="CodeScanMatch_heap"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchHole" syntax="CodeScanGetMatchHole(csm[], idx)">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="CodeScanMatch_holes"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:CodeScanGetMatchLength" syntax="CodeScanGetMatchLength(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="CodeScanMatch_size"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchName" syntax="CodeScanGetMatchName(csm[], name[])">
			<stacksize value="5"/>
			<dependency name="CodeScanGetMatchType"/>
			<dependency name="CodeScanMatch_name"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="strcat"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchScanner" syntax="CodeScanGetMatchScanner(csm[], ret[], ctx[], accurate)">
			<stacksize value="7"/>
			<dependency name="CodeScanGetFunctionScanner"/>
			<dependency name="CodeScanMatch_cip"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_param"/>
			<dependency name="CodeScanner_state"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ret">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="accurate">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchStack" syntax="CodeScanGetMatchStack(csm[])">
			<stacksize value="1"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<dependency name="CodeScanMatch_stack"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanGetMatchType" syntax="CodeScanGetMatchType(csm[])">
			<stacksize value="5"/>
			<referrer name="CodeScanGetMatchName"/>
			<dependency name="CodeScanGetFuncName"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanMatch_name"/>
			<dependency name="CodeScanMatch_type"/>
			<param name="csm">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanInit" syntax="CodeScanInit(scanner[])">
			<stacksize value="5"/>
			<referrer name="CodeScanGetFunctionScanner"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="CodeScanMatch_heap"/>
			<dependency name="CodeScanMatch_name"/>
			<dependency name="CodeScanMatch_params"/>
			<dependency name="CodeScanMatch_stack"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="CodeScanResetJumpTargets"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="CodeScanner_param"/>
			<dependency name="CodeScanner_state"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="cellmin"/>
			<dependency name="gBase"/>
			<dependency name="gDat"/>
			<dependency name="gHdr"/>
			<param name="scanner">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanMatcherData" syntax="CodeScanMatcherData(searcher[], val)">
			<stacksize value="1"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_user_data"/>
			<param name="searcher">
				<paraminfo> [267] </paraminfo>
			</param>
			<param name="val">
			</param>
		</member>
		<member name="M:CodeScanMatcherInit_" syntax="CodeScanMatcherInit_(searcher[], address, flags)">
			<stacksize value="5"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="CodeScanMatcher_flags"/>
			<dependency name="CodeScanMatcher_func"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_user_data"/>
			<dependency name="CodeScanReset"/>
			<param name="searcher">
				<paraminfo> [267] </paraminfo>
			</param>
			<param name="address">
			</param>
			<param name="flags">
			</param>
		</member>
		<member name="M:CodeScanMatcherPattern_" syntax="CodeScanMatcherPattern_(searcher[], ...)">
			<stacksize value="6"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="CodeScanMatcher_code"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="getarg"/>
			<dependency name="numargs"/>
			<param name="searcher">
				<paraminfo> [267] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Opcode,Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanReset" syntax="CodeScanReset(cs[], &amp;next)">
			<stacksize value="1"/>
			<referrer name="CodeScanMatcherInit_"/>
			<referrer name="CodeScanRun"/>
			<dependency name="CodeScanMatcher_func"/>
			<dependency name="CodeScanMatcher_holeidx"/>
			<dependency name="CodeScanMatcher_len"/>
			<dependency name="CodeScanMatcher_next"/>
			<dependency name="CodeScanMatcher_offset"/>
			<param name="cs">
				<paraminfo> [267] </paraminfo>
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanResetJumpTargets" syntax="CodeScanResetJumpTargets(jumpTargets[], num)">
			<stacksize value="1"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanInit"/>
			<dependency name="CodeScanner_jump_target"/>
			<dependency name="CodeScanner_minn"/>
			<param name="jumpTargets">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:CodeScanRun" syntax="CodeScanRun(csState[])">
			<tagname value="bool"/>
			<stacksize value="301"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="CodeScanCall"/>
			<dependency name="CodeScanCheck"/>
			<dependency name="CodeScanDeref"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanReset"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_first"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmInit"/>
			<dependency name="true"/>
			<param name="csState">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanStep" syntax="CodeScanStep(dctx[], csState[])">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="CodeScanStepInternal"/>
			<dependency name="CodeScanner_param"/>
			<dependency name="CodeScanner_state"/>
			<param name="dctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="csState">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:CodeScanStepInternal" syntax="CodeScanStepInternal(dctx[], csState[], &amp;parseState, &amp;parseParam)">
			<tagname value="bool"/>
			<stacksize value="13"/>
			<referrer name="CodeScanStep"/>
			<referrer name="CodeScanRun"/>
			<referrer name="CodeScanGetMatchScanner"/>
			<dependency name="CodeScanAddJumpTarget"/>
			<dependency name="CodeScanAddSwitchTarget"/>
			<dependency name="CodeScanCheckJumpTarget"/>
			<dependency name="CodeScanMatch_func"/>
			<dependency name="CodeScanMatch_heap"/>
			<dependency name="CodeScanMatch_stack"/>
			<dependency name="CodeScanMatch_type"/>
			<dependency name="CodeScanResetJumpTargets"/>
			<dependency name="DISASM_DONE"/>
			<dependency name="DISASM_NOP"/>
			<dependency name="DISASM_OK"/>
			<dependency name="DisasmGetCurIp"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmNext"/>
			<dependency name="OP_ADD_C"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CALL_PRI"/>
			<dependency name="OP_HALT"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_JEQ"/>
			<dependency name="OP_JGEQ"/>
			<dependency name="OP_JGRTR"/>
			<dependency name="OP_JLEQ"/>
			<dependency name="OP_JLESS"/>
			<dependency name="OP_JNEQ"/>
			<dependency name="OP_JNZ"/>
			<dependency name="OP_JREL"/>
			<dependency name="OP_JSGEQ"/>
			<dependency name="OP_JSGRTR"/>
			<dependency name="OP_JSLEQ"/>
			<dependency name="OP_JSLESS"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_LCTRL"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_POP_ALT"/>
			<dependency name="OP_POP_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_PUSH"/>
			<dependency name="OP_PUSH_ADR"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_PUSH_R"/>
			<dependency name="OP_PUSH_S"/>
			<dependency name="OP_SCTRL"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_SWITCH"/>
			<dependency name="cellbits"/>
			<dependency name="cellmin"/>
			<dependency name="false"/>
			<dependency name="gBase"/>
			<dependency name="true"/>
			<param name="dctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="csState">
				<paraminfo> [211] </paraminfo>
			</param>
			<param name="parseState">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="parseParam">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:CreateActor" syntax="CreateActor(modelid, X, Y, Z, Rotation)">
			<attribute name="native"/>
			<referrer name="Iter_CreateActor"/>
			<param name="modelid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreateDynamic3DTextLabel" syntax="CreateDynamic3DTextLabel(text[], color, x, y, z, drawdistance, attachedplayer, attachedvehicle, testlos, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<tagname value="Text3D"/>
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="updateGasCan"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="attachedplayer">
			</param>
			<param name="attachedvehicle">
			</param>
			<param name="testlos">
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicMapIcon" syntax="CreateDynamicMapIcon(x, y, z, type, color, worldid, interiorid, playerid, streamdistance, style, areaid, priority)">
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="type">
			</param>
			<param name="color">
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicObject" syntax="CreateDynamicObject(modelid, x, y, z, rx, ry, rz, worldid, interiorid, playerid, streamdistance, drawdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="loadMaps"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicObjectEx" syntax="CreateDynamicObjectEx(modelid, x, y, z, rx, ry, rz, streamdistance, drawdistance, worlds[], interiors[], players[], areas[], priority, maxworlds, maxinteriors, maxplayers, maxareas)">
			<attribute name="native"/>
			<referrer name="loadMaps"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worlds">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interiors">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="players">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="areas">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="priority">
			</param>
			<param name="maxworlds">
			</param>
			<param name="maxinteriors">
			</param>
			<param name="maxplayers">
			</param>
			<param name="maxareas">
			</param>
		</member>
		<member name="M:CreateDynamicPickup" syntax="CreateDynamicPickup(modelid, type, x, y, z, worldid, interiorid, playerid, streamdistance, areaid, priority)">
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="updateGasCan"/>
			<param name="modelid">
			</param>
			<param name="type">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="streamdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="areaid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateDynamicSphere" syntax="CreateDynamicSphere(x, y, z, size, worldid, interiorid, playerid, priority)">
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="worldid">
			</param>
			<param name="interiorid">
			</param>
			<param name="playerid">
			</param>
			<param name="priority">
			</param>
		</member>
		<member name="M:CreateObject" syntax="CreateObject(modelid, X, Y, Z, rX, rY, rZ, DrawDistance)">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<param name="modelid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="DrawDistance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:CreatePlayerTextDraw" syntax="CreatePlayerTextDraw(playerid, x, y, text[])">
			<tagname value="PlayerText"/>
			<attribute name="native"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:CreateVehicle" syntax="CreateVehicle(vehicletype, x, y, z, rotation, color1, color2, respawn_delay, addsiren)">
			<attribute name="native"/>
			<referrer name="Iter_CreateVehicle"/>
			<param name="vehicletype">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rotation">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:DCC_ClearBotActivity" syntax="DCC_ClearBotActivity()">
			<stacksize value="3"/>
			<dependency name="DCC_SetBotActivity"/>
		</member>
		<member name="M:DCC_ClearBotNickname" syntax="DCC_ClearBotNickname(guild)">
			<stacksize value="4"/>
			<dependency name="DCC_SetBotNickname"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_FindChannelById" syntax="DCC_FindChannelById(channel_id[])">
			<tagname value="DCC_Channel"/>
			<attribute name="native"/>
			<referrer name="OnPlayerText"/>
			<param name="channel_id">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCC_GetBotPresenceStatus" syntax="DCC_GetBotPresenceStatus()">
			<tagname value="DCC_BotPresenceStatus"/>
			<attribute name="native"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="CB_OnPlayerDisconnect"/>
		</member>
		<member name="M:DCC_OnChannelCreate" syntax="DCC_OnChannelCreate(channel)">
			<stacksize value="1"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnChannelDelete" syntax="DCC_OnChannelDelete(channel)">
			<stacksize value="1"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnChannelUpdate" syntax="DCC_OnChannelUpdate(channel)">
			<stacksize value="1"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildCreate" syntax="DCC_OnGuildCreate(guild)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildDelete" syntax="DCC_OnGuildDelete(guild)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberAdd" syntax="DCC_OnGuildMemberAdd(guild, user)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberRemove" syntax="DCC_OnGuildMemberRemove(guild, user)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberUpdate" syntax="DCC_OnGuildMemberUpdate(guild, user)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildMemberVoiceUpdate" syntax="DCC_OnGuildMemberVoiceUpdate(guild, user, channel)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildRoleCreate" syntax="DCC_OnGuildRoleCreate(guild, role)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="role">
				<paraminfo>DCC_Role </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildRoleDelete" syntax="DCC_OnGuildRoleDelete(guild, role)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="role">
				<paraminfo>DCC_Role </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildRoleUpdate" syntax="DCC_OnGuildRoleUpdate(guild, role)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="role">
				<paraminfo>DCC_Role </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnGuildUpdate" syntax="DCC_OnGuildUpdate(guild)">
			<stacksize value="1"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnMessageCreate" syntax="DCC_OnMessageCreate(message)">
			<stacksize value="1"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnMessageDelete" syntax="DCC_OnMessageDelete(message)">
			<stacksize value="1"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnMessageReaction" syntax="DCC_OnMessageReaction(message, reaction_user, emoji, reaction_type)">
			<stacksize value="1"/>
			<param name="message">
				<paraminfo>DCC_Message </paraminfo>
			</param>
			<param name="reaction_user">
				<paraminfo>DCC_User </paraminfo>
			</param>
			<param name="emoji">
				<paraminfo>DCC_Emoji </paraminfo>
			</param>
			<param name="reaction_type">
				<paraminfo>DCC_MessageReactionType </paraminfo>
			</param>
		</member>
		<member name="M:DCC_OnUserUpdate" syntax="DCC_OnUserUpdate(user)">
			<stacksize value="1"/>
			<param name="user">
				<paraminfo>DCC_User </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SendChannelMessage" syntax="DCC_SendChannelMessage(channel, message[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="OnPlayerText"/>
			<param name="channel">
				<paraminfo>DCC_Channel </paraminfo>
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SetBotActivity" syntax="DCC_SetBotActivity(name[])">
			<attribute name="native"/>
			<referrer name="DCC_ClearBotActivity"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SetBotNickname" syntax="DCC_SetBotNickname(guild, nickname[])">
			<attribute name="native"/>
			<referrer name="DCC_ClearBotNickname"/>
			<param name="guild">
				<paraminfo>DCC_Guild </paraminfo>
			</param>
			<param name="nickname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DCC_SetBotPresenceStatus" syntax="DCC_SetBotPresenceStatus(status)">
			<attribute name="native"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<param name="status">
				<paraminfo>DCC_BotPresenceStatus </paraminfo>
			</param>
		</member>
		<member name="M:DateToTimestamp" syntax="DateToTimestamp(str[])">
			<stacksize value="10"/>
			<dependency name="IsLeapYear"/>
			<dependency name="MonthTimes"/>
			<dependency name="sscanf"/>
			<param name="str">
				<paraminfo> [11] </paraminfo>
			</param>
		</member>
		<member name="M:Debug_Code1" syntax="Debug_Code1(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code1(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:1(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 1</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code2" syntax="Debug_Code2(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code2(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:2(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 2</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code3" syntax="Debug_Code3(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code3(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:3(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 3</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code4" syntax="Debug_Code4(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code4(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:4(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 4</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code5" syntax="Debug_Code5(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code5(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:5(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 5</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code6" syntax="Debug_Code6(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code6(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:6(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 6</c>.  </remarks> 
		</member>
		<member name="M:Debug_Code7" syntax="Debug_Code7(code)">
			<stacksize value="1"/>
			<param name="code">
				Code to run.
			</param>
			  <remarks>  Code is not a variable, it's a code chunk and may be written as so:  <code>  Debug_Code7(if (bla == 2) { bla++; printf("%d", bla); });  </code>  Or:  <code>  C:7(if (bla == 2) { bla++; printf("%d", bla); });  </code>  The code must all be on one line to avoid errors.  This isn't really a function as the first parameter is part of the name.  Only compiles the code when <c>_DEBUG %gt;= 7</c>.  </remarks> 
		</member>
		<member name="M:Debug_Disable" syntax="Debug_Disable()">
			<stacksize value="1"/>
			<remarks>  Turn off level 0 prints.  </remarks>  <transition target=""/>

		</member>
		<member name="M:Debug_Enable" syntax="Debug_Enable()">
			<stacksize value="1"/>
			<remarks>  Turn on level 0 prints.  </remarks>  <transition target=""/>

		</member>
		<member name="M:Debug_Level" syntax="Debug_Level(level)">
			<stacksize value="1"/>
			<dependency name="YSI_gDebugLevel"/>
			<param name="level">
			</param>
			<remarks>  Set the debug level when the code is compiled with <c>_DEBUG=-1</c>, which  means full run-time selection.  </remarks> 
		</member>
		<member name="M:Debug_OnScriptInit" syntax="Debug_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetGlobal"/>
			<dependency name="AMX_HEADER_AMX_VERSION"/>
			<dependency name="AMX_HEADER_CIP"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_HEADER_DEFSIZE"/>
			<dependency name="AMX_HEADER_FILE_VERSION"/>
			<dependency name="AMX_HEADER_FLAGS"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="AMX_HEADER_LIBRARIES"/>
			<dependency name="AMX_HEADER_MAGIC"/>
			<dependency name="AMX_HEADER_NAMETABLE"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_HEADER_PUBVARS"/>
			<dependency name="AMX_HEADER_SIZE"/>
			<dependency name="AMX_HEADER_STP"/>
			<dependency name="AMX_HEADER_TAGS"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_REAL_DATA"/>
		</member>
		<member name="M:Debug_Print0" syntax="Debug_Print0(str[], ...)">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="YVers_OnScriptInit"/>
			<referrer name="AMX_Read"/>
			<referrer name="YVA2_DummyPush"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="CGen_AddCodeSpace"/>
			<referrer name="Hooks_IsolateName"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_WriteFunction"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Iter_YieldEnter"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="Malloc_TrySetup"/>
			<referrer name="OnRuntimeError"/>
			<referrer name="@a"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_OnPubGenError"/>
			<dependency name="printf"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			<param name="format">str.</param>    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print0("variables: %d, %d", i, j);  </code>  Or:  <code>  P:0("variables: %d, %d", i, j);  </code>  <c>_DEBUG</c> level 0 prints are ALWAYS compiled, but are runtime switched  using the automata <c>ysi_debug</c>.  When then state is <c>ysi_debug :  on</c>, the prints are executed.  When then state is <c>ysi_debug : off</c>,  they aren't.  </remarks> 
		</member>
		<member name="M:Debug_Print1" syntax="Debug_Print1(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print1("variables: %d, %d", i, j);  </code>  Or:  <code>  P:1("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 1</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print2" syntax="Debug_Print2(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print2("variables: %d, %d", i, j);  </code>  Or:  <code>  P:2("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 2</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print3" syntax="Debug_Print3(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print3("variables: %d, %d", i, j);  </code>  Or:  <code>  P:3("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 3</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print4" syntax="Debug_Print4(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print4("variables: %d, %d", i, j);  </code>  Or:  <code>  P:4("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 4</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print5" syntax="Debug_Print5(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print5("variables: %d, %d", i, j);  </code>  Or:  <code>  P:5("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 5</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print6" syntax="Debug_Print6(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print6("variables: %d, %d", i, j);  </code>  Or:  <code>  P:6("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 6</c>.  </remarks> 
		</member>
		<member name="M:Debug_Print7" syntax="Debug_Print7(str[], ...)">
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				
			</param>
			    <remarks>  This isn't really a function as the first parameter is part of the name:  <code>  Debug_Print7("variables: %d, %d", i, j);  </code>  Or:  <code>  P:7("variables: %d, %d", i, j);  </code>  Only prints the data when <c>_DEBUG %gt;= 7</c>.  </remarks> 
		</member>
		<member name="M:Debug_PrintArray" syntax="Debug_PrintArray(arr[], size)">
			<stacksize value="108"/>
			<dependency name="Debug_PrintArray"/>
			<dependency name="format"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Debug_SetState" syntax="Debug_SetState()">
			<stacksize value="1"/>
			<automaton name="ysi_debug"/>
			<referrer name="YVers_OnScriptInit"/>
			<transition keep="true" target="ysi_debug : on" source="ysi_debug : "/>  <remarks>  Mostly exists to define the full range of <c>ysi_debug</c> states.  </remarks> <p/> <transition target=""/>

		</member>
		<member name="M:DeletePVar" syntax="DeletePVar(playerid, varname[])">
			<attribute name="native"/>
			<referrer name="resetVars"/>
			<referrer name="@yH_OnPlayerConnect@007"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DestroyActor" syntax="DestroyActor(actorid)">
			<attribute name="native"/>
			<referrer name="Iter_DestroyActor"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:DestroyObject" syntax="DestroyObject(objectid)">
			<attribute name="native"/>
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="removeFunction"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:DestroyVehicle" syntax="DestroyVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="Iter_DestroyVehicle"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Dialog_Close" syntax="Dialog_Close(playerid)">
			<stacksize value="9"/>
			<referrer name="OnDialogResponse"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="s_DialogName"/>
			<dependency name="s_DialogName"/>
			<dependency name="s_DialogOpened"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Dialog_IsOpened" syntax="Dialog_IsOpened(playerid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="s_DialogOpened"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:Dialog_Open" syntax="Dialog_Open(playerid, function[], style, caption[], info[], button1[], button2[], ...)">
			<stacksize value="9"/>
			<referrer name="dialog_EMAIL"/>
			<referrer name="wrongPass"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_GPS"/>
			<referrer name="dialog_HOUSE_OPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_ADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_houseoption"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="pc_cmd_fdeposit"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="dialog_DIALOG_FWITHDRAW"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_BIZ_OPTION"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_BIZ_OPTION_ADMIN"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_bizoption"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_clan"/>
			<referrer name="dialog_DIALOG_CLAN"/>
			<referrer name="dialog_DIALOG_CLANTAG"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="checkPlayerAccount"/>
			<referrer name="dialog_MY_GARAGE"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="pc_cmd_spawnchange"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_tog"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="dialog_DIALOG_HELP"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="format"/>
			<dependency name="s_DialogName"/>
			<dependency name="s_DialogOpened"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<param name="playerid">
			</param>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:DisableInteriorEnterExits" syntax="DisableInteriorEnterExits()">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
		</member>
		<member name="M:DisablePlayerCheckpoint" syntax="DisablePlayerCheckpoint(playerid)">
			<attribute name="native"/>
			<referrer name="examenFail"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="CancelJob"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerCarFind"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:DisasmDecodeInsn" syntax="DisasmDecodeInsn(ctx[])">
			<tagname value="bool"/>
			<stacksize value="24"/>
			<referrer name="DisasmNext"/>
			<referrer name="DisasmNextInsn"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="AMX_Read"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_insn"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="GetOpcodeInstructionInformation"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_NONE"/>
			<dependency name="OpcodeInsnInfo_num_opers"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="UnrelocateOpcode"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmDump" syntax="DisasmDump(filename[])">
			<stacksize value="4"/>
			<dependency name="DisasmWrite"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmGetCurIp" syntax="DisasmGetCurIp(ctx[])">
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="DisasmContext_cip"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmGetInsnName" syntax="DisasmGetInsnName(ctx[], name[], size)">
			<stacksize value="5"/>
			<referrer name="DisasmWriteCode"/>
			<dependency name="DisasmContext_insn"/>
			<dependency name="OpcodeInsnInfo_name"/>
			<dependency name="strcat"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:DisasmGetNextIp" syntax="DisasmGetNextIp(ctx[])">
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanCheck"/>
			<dependency name="DisasmContext_nip"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmGetNumOperands" syntax="DisasmGetNumOperands(ctx[])">
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="Hooks_GetStubEntry"/>
			<dependency name="DisasmContext_insn"/>
			<dependency name="OpcodeInsnInfo_num_opers"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmGetOpcode" syntax="DisasmGetOpcode(ctx[])">
			<tagname value="Opcode"/>
			<stacksize value="1"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="CodeScanRun"/>
			<referrer name="AMX_Read"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
			<dependency name="DisasmContext_opcode"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmGetOperand" syntax="DisasmGetOperand(ctx[], index)">
			<stacksize value="4"/>
			<referrer name="DisasmGetOperandReloc"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="CodeScanStepInternal"/>
			<referrer name="AMX_Read"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="ReadAmxMemory"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:DisasmGetOperandReloc" syntax="DisasmGetOperandReloc(ctx[], index)">
			<stacksize value="6"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanCheck"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmNeedReloc"/>
			<dependency name="DisasmReloc"/>
			<dependency name="OP_CASETBL"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:DisasmGetRemaining" syntax="DisasmGetRemaining(ctx[])">
			<stacksize value="1"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmInit" syntax="DisasmInit(ctx[], start, end)">
			<stacksize value="21"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanRun"/>
			<referrer name="AMX_Read"/>
			<referrer name="Hooks_GetStubEntry"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="gCodBase"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:DisasmNeedReloc" syntax="DisasmNeedReloc(ctx[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="DisasmGetOperandReloc"/>
			<dependency name="DisasmContext_insn"/>
			<dependency name="OpcodeInsnInfo_needs_reloc"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmNext" syntax="DisasmNext(ctx[])">
			<tagname value="DisasmResult"/>
			<stacksize value="4"/>
			<referrer name="O@A_"/>
			<referrer name="CodeScanStepInternal"/>
			<dependency name="DISASM_DONE"/>
			<dependency name="DISASM_NOP"/>
			<dependency name="DISASM_OK"/>
			<dependency name="DisasmContext_cip"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="NUM_OPCODES"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmNextInsn" syntax="DisasmNextInsn(ctx[])">
			<tagname value="Opcode"/>
			<stacksize value="4"/>
			<referrer name="YVA2_FoundCall"/>
			<referrer name="YVA2_FoundPush"/>
			<referrer name="Hooks_GetStubEntry"/>
			<dependency name="DisasmContext_opcode"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="OP_NONE"/>
			<param name="ctx">
				<paraminfo> [22] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmReloc" syntax="DisasmReloc(addr)">
			<stacksize value="1"/>
			<referrer name="DisasmGetOperandReloc"/>
			<dependency name="gCodBase"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:DisasmWrite" syntax="DisasmWrite(filename[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="DisasmDump"/>
			<dependency name="DisasmWriteFile"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:DisasmWriteCode" syntax="DisasmWriteCode(file)">
			<stacksize value="176"/>
			<referrer name="DisasmWriteFile"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_end_ip"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetCurIp"/>
			<dependency name="DisasmGetInsnName"/>
			<dependency name="DisasmGetNextIp"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmInit"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="GetNativeIndexFromAddress"/>
			<dependency name="GetNativeNameFromIndex"/>
			<dependency name="GetPublicIndexFromAddress"/>
			<dependency name="GetPublicNameFromIndex"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ToHexStr"/>
			<dependency name="fwrite"/>
			<dependency name="gCodBase"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:DisasmWriteData" syntax="DisasmWriteData(file)">
			<stacksize value="38"/>
			<referrer name="DisasmWriteFile"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="DisasmWriteDataRowChar"/>
			<dependency name="DisasmWriteDataRowHex"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="ToHexStr"/>
			<dependency name="fwrite"/>
			<dependency name="min"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:DisasmWriteDataRowChar" syntax="DisasmWriteDataRowChar(file, start, num, max)">
			<stacksize value="13"/>
			<referrer name="DisasmWriteData"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ToPrintableAscii"/>
			<dependency name="fwrite"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="num">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:DisasmWriteDataRowHex" syntax="DisasmWriteDataRowHex(file, start, num, max)">
			<stacksize value="19"/>
			<referrer name="DisasmWriteData"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ToHexStr"/>
			<dependency name="fwrite"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="num">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:DisasmWriteFile" syntax="DisasmWriteFile(file)">
			<stacksize value="4"/>
			<referrer name="DisasmWrite"/>
			<dependency name="DisasmWriteCode"/>
			<dependency name="DisasmWriteData"/>
			<param name="file">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:DistanceToPlayer" syntax="DistanceToPlayer(playerid, targetid)">
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="floatround"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
		</member>
		<member name="M:DumpStack" syntax="DumpStack()">
			<stacksize value="9"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="print"/>
			<dependency name="printf"/>
		</member>
		<member name="M:DynamicCallFunctionInclusion_" syntax="DynamicCallFunctionInclusion_()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<dependency name="numargs"/>
		</member>
		<member name="M:EnableStuntBonusForAll" syntax="EnableStuntBonusForAll(enable)">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
			<param name="enable">
			</param>
		</member>
		<member name="M:ExpirationReport" syntax="ExpirationReport(id)">
			<stacksize value="7"/>
			<referrer name="ExpirationReport@_yT"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="REPORT_TYPE_NONE"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportPlayer"/>
			<dependency name="reportText"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="true"/>
			<param name="id">
			</param>
		</member>
		<member name="M:ExpirationReport@_yT" syntax="ExpirationReport@_yT(__r, id)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="ExpirationReport"/>
			<param name="__r">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:ExpirationReport_yT@" syntax="ExpirationReport_yT@(id)">
			<stacksize value="8"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="id">
			</param>
		</member>
		<member name="M:F@" syntax="F@()">
			<stacksize value="6"/>
			<dependency name="Q@"/>
			<dependency name="getproperty"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:FishingTimer" syntax="FishingTimer(playerid, x, y, z)">
			<stacksize value="4106"/>
			<referrer name="FishingTimer@_yT"/>
			<dependency name="ClearAnimations"/>
			<dependency name="FishNames"/>
			<dependency name="FishNames"/>
			<dependency name="FishWeight"/>
			<dependency name="Fishing"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="pFishSkill"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:FishingTimer@_yT" syntax="FishingTimer@_yT(__r, playerid, x, y, z)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="FishingTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:FishingTimer_yT@" syntax="FishingTimer_yT@(playerid, x, y, z)">
			<stacksize value="11"/>
			<referrer name="pc_cmd_fish"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Fly" syntax="Fly(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<referrer name="StartFly"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator==(Float:,_:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerCameraFrontVector"/>
			<dependency name="GetPlayerCameraPos"/>
			<dependency name="GetPlayerKeys"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="OnFly"/>
			<dependency name="SetPlayerLookAt"/>
			<dependency name="SetPlayerVelocity"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:FormatBigInt" syntax="FormatBigInt(ammount_store, ammount_more)">
			<stacksize value="140"/>
			<dependency name="FormatBigInt"/>
			<dependency name="Value64Bit"/>
			<dependency name="format"/>
			<dependency name="formatNumbers2"/>
			<param name="ammount_store">
			</param>
			<param name="ammount_more">
			</param>
		</member>
		<member name="M:FormatIntNumber" syntax="FormatIntNumber(Number, Delimitator[])">
			<stacksize value="24"/>
			<referrer name="formatNumbers2"/>
			<dependency name="FormatIntNumber"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="Number">
			</param>
			<param name="Delimitator">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:G@" syntax="G@(...)">
			<stacksize value="1"/>
			<dependency name="G@"/>
			<dependency name="Q@"/>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:GameTextForAll" syntax="GameTextForAll(string[], time, style)">
			<attribute name="native"/>
			<referrer name="va_GameTextForAll"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GameTextForPlayer" syntax="GameTextForPlayer(playerid, string[], time, style)">
			<attribute name="native"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="OnPlayerDeath"/>
			<param name="playerid">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
		</member>
		<member name="M:GangZoneCreate" syntax="GangZoneCreate(minx, miny, maxx, maxy)">
			<attribute name="native"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="GangZoneCreateNumber"/>
			<referrer name="GangZoneCreateNumber2"/>
			<param name="minx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="miny">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="maxy">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GangZoneCreateEx" syntax="GangZoneCreateEx(gzMinX, gzMinY, gzMaxX, gzMaxY, gznumber, numsize)">
			<stacksize value="18"/>
			<referrer name="LoadTurfs"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="GangZoneCreateNumber"/>
			<dependency name="GangZoneCreateNumber2"/>
			<dependency name="border"/>
			<dependency name="format"/>
			<dependency name="strmid"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zexist"/>
			<param name="gzMinX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gzMinY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gzMaxX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gzMaxY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="gznumber">
			</param>
			<param name="numsize">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GangZoneCreateNumber" syntax="GangZoneCreateNumber(gzid, gznum, centposx, centposy, numsize)">
			<stacksize value="9"/>
			<referrer name="GangZoneCreateEx"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="npart"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<param name="gzid">
			</param>
			<param name="gznum">
			</param>
			<param name="centposx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="centposy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="numsize">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GangZoneCreateNumber2" syntax="GangZoneCreateNumber2(gzid, gznum, centposx, centposy, numsize)">
			<stacksize value="9"/>
			<referrer name="GangZoneCreateEx"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GangZoneCreate"/>
			<dependency name="npart2"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<param name="gzid">
			</param>
			<param name="gznum">
			</param>
			<param name="centposx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="centposy">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="numsize">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GangZoneDestroy" syntax="GangZoneDestroy(zone)">
			<attribute name="native"/>
			<referrer name="GangZoneDestroyEx"/>
			<param name="zone">
			</param>
		</member>
		<member name="M:GangZoneDestroyEx" syntax="GangZoneDestroyEx(gangzoneid)">
			<stacksize value="4"/>
			<dependency name="GangZoneDestroy"/>
			<dependency name="border"/>
			<dependency name="false"/>
			<dependency name="npart"/>
			<dependency name="zGangZones"/>
			<dependency name="zGangZones"/>
			<dependency name="zexist"/>
			<param name="gangzoneid">
			</param>
		</member>
		<member name="M:GangZoneFlashForPlayer" syntax="GangZoneFlashForPlayer(playerid, zone, flashcolor)">
			<attribute name="native"/>
			<referrer name="TimerWar"/>
			<param name="playerid">
			</param>
			<param name="zone">
			</param>
			<param name="flashcolor">
			</param>
		</member>
		<member name="M:GangZoneHideForPlayer" syntax="GangZoneHideForPlayer(playerid, zone)">
			<attribute name="native"/>
			<referrer name="GangZoneHideForPlayerEx"/>
			<param name="playerid">
			</param>
			<param name="zone">
			</param>
		</member>
		<member name="M:GangZoneHideForPlayerEx" syntax="GangZoneHideForPlayerEx(playerid, gangzoneid)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="TimerWar"/>
			<dependency name="GangZoneHideForPlayer"/>
			<dependency name="border"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zGangZones"/>
			<dependency name="zexist"/>
			<param name="playerid">
			</param>
			<param name="gangzoneid">
			</param>
		</member>
		<member name="M:GangZoneShowForPlayer" syntax="GangZoneShowForPlayer(playerid, zone, color)">
			<attribute name="native"/>
			<referrer name="GangZoneShowForPlayerEx"/>
			<param name="playerid">
			</param>
			<param name="zone">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:GangZoneShowForPlayerEx" syntax="GangZoneShowForPlayerEx(playerid, gangzoneid, color)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="TimerWar"/>
			<dependency name="GangZoneShowForPlayer"/>
			<dependency name="border"/>
			<dependency name="npart"/>
			<dependency name="npart2"/>
			<dependency name="zGangZones"/>
			<dependency name="zexist"/>
			<param name="playerid">
			</param>
			<param name="gangzoneid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:GangZoneStopFlashForPlayer" syntax="GangZoneStopFlashForPlayer(playerid, zone)">
			<attribute name="native"/>
			<referrer name="TimerWar"/>
			<param name="playerid">
			</param>
			<param name="zone">
			</param>
		</member>
		<member name="M:Get2DPosZone" syntax="Get2DPosZone(x, y, zone[], len)">
			<stacksize value="8"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="SAZONE_AREA"/>
			<dependency name="SAZONE_NAME"/>
			<dependency name="format"/>
			<dependency name="gSAZones"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zone">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:Get3DZone" syntax="Get3DZone(x, y, z, zone[], len)">
			<stacksize value="8"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="SAZONE_AREA"/>
			<dependency name="SAZONE_NAME"/>
			<dependency name="format"/>
			<dependency name="gSAZones"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="zone">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetAmxAddress" syntax="GetAmxAddress()">
			<stacksize value="5"/>
			<referrer name="ReadAmxCell"/>
			<referrer name="WriteAmxCell"/>
			<dependency name="RunShellcode"/>
			<dependency name="refabs"/>
		</member>
		<member name="M:GetAmxBase" syntax="GetAmxBase()">
			<stacksize value="1"/>
			<referrer name="ProfilerInit"/>
		</member>
		<member name="M:GetAmxBaseAddress" syntax="GetAmxBaseAddress()">
			<stacksize value="3"/>
			<referrer name="AbsToRel"/>
			<referrer name="RelToAbs"/>
			<referrer name="AsmGetJumpAddressFromOffset"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmInit"/>
			<referrer name="CodeScanInit"/>
			<referrer name="GetFunctionFromReturnAddress"/>
			<dependency name="GetAmxBaseAddressNow"/>
		</member>
		<member name="M:GetAmxBaseAddressNow" syntax="GetAmxBaseAddressNow()">
			<stacksize value="9"/>
			<referrer name="GetAmxBaseAddress"/>
			<dependency name="GetAmxBaseAddress_helper"/>
		</member>
		<member name="M:GetAmxBaseAddress_helper" syntax="GetAmxBaseAddress_helper()">
			<stacksize value="1"/>
			<referrer name="GetAmxBaseAddressNow"/>
		</member>
		<member name="M:GetAmxFrame" syntax="GetAmxFrame()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAmxHeader" syntax="GetAmxHeader(amxhdr[])">
			<stacksize value="3"/>
			<referrer name="AsmGetJumpAddressFromOffset"/>
			<referrer name="AsmGetCode"/>
			<referrer name="AsmEmitCallAbs"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmInit"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="CodeScanInit"/>
			<referrer name="ProfilerInit"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetAmxHeaderComponent" syntax="GetAmxHeaderComponent(comp)">
			<stacksize value="3"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="comp">
				<paraminfo>AMX_HDR </paraminfo>
			</param>
		</member>
		<member name="M:GetAmxHeaderNow" syntax="GetAmxHeaderNow(amxhdr[])">
			<stacksize value="21"/>
			<referrer name="ResetStaticAmxHeader"/>
			<dependency name="AMX_HDR_AMX_VERSION"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_FILE_VERSION"/>
			<dependency name="AMX_HDR_FLAGS"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="AMX_HDR_LIBRARIES"/>
			<dependency name="AMX_HDR_MAGIC"/>
			<dependency name="AMX_HDR_NAMETABLE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_OFFSET_AMX_VERSION"/>
			<dependency name="AMX_HDR_OFFSET_CIP"/>
			<dependency name="AMX_HDR_OFFSET_COD"/>
			<dependency name="AMX_HDR_OFFSET_DAT"/>
			<dependency name="AMX_HDR_OFFSET_DEFSIZE"/>
			<dependency name="AMX_HDR_OFFSET_FILE_VERSION"/>
			<dependency name="AMX_HDR_OFFSET_FLAGS"/>
			<dependency name="AMX_HDR_OFFSET_HEA"/>
			<dependency name="AMX_HDR_OFFSET_LIBRARIES"/>
			<dependency name="AMX_HDR_OFFSET_MAGIC"/>
			<dependency name="AMX_HDR_OFFSET_NAMETABLE"/>
			<dependency name="AMX_HDR_OFFSET_NATIVES"/>
			<dependency name="AMX_HDR_OFFSET_PUBLICS"/>
			<dependency name="AMX_HDR_OFFSET_PUBVARS"/>
			<dependency name="AMX_HDR_OFFSET_SIZE"/>
			<dependency name="AMX_HDR_OFFSET_STP"/>
			<dependency name="AMX_HDR_OFFSET_TAGS"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="AMX_HDR_SIZE"/>
			<dependency name="AMX_HDR_STP"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetRawAmxHeader"/>
			<dependency name="copy_1"/>
			<dependency name="copy_2"/>
			<dependency name="copy_4"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetAmxHeapBase" syntax="GetAmxHeapBase()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAmxHeapTop" syntax="GetAmxHeapTop()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAmxJITBaseAddress" syntax="GetAmxJITBaseAddress()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAmxNextInstructionPointer" syntax="GetAmxNextInstructionPointer()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAmxStackBase" syntax="GetAmxStackBase()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAmxStackBottom" syntax="GetAmxStackBottom()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetAnimationName" syntax="GetAnimationName(index, animlib[], len1, animname[], len2)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="index">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len1">
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len2">
			</param>
		</member>
		<member name="M:GetBankMoney" syntax="GetBankMoney(playerid)">
			<stacksize value="134"/>
			<referrer name="showStats"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_balance"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<dependency name="GetBankMoney"/>
			<dependency name="Value64Bit"/>
			<dependency name="format"/>
			<dependency name="formatNumbers2"/>
			<dependency name="pBank"/>
			<dependency name="pStoreBank"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetCallerFrame" syntax="GetCallerFrame()">
			<stacksize value="1"/>
			<referrer name="GetCurrentFramePreviousFrame"/>
			<referrer name="GetCurrentFrameReturn"/>
			<referrer name="GetCurrentFrameTotalSize"/>
			<referrer name="GetCurrentFrameTotalCount"/>
			<referrer name="GetCurrentFrameLocalSize"/>
			<referrer name="GetCurrentFrameLocalCount"/>
			<referrer name="GetCurrentFrameHeaderSize"/>
			<referrer name="GetCurrentFrameHeaderCount"/>
			<referrer name="GetCurrentFrameParameterSize"/>
			<referrer name="GetCurrentFrameParameter"/>
			<referrer name="GetCurrentFrameLocal"/>
			<referrer name="GetCurrentFrameParameterCount"/>
			<referrer name="SetCurrentFrameReturn"/>
			<referrer name="SetCurrentFramePreviousFrame"/>
			<referrer name="SetCurrentParameterSize"/>
			<referrer name="SetCurrentParameterCount"/>
			<referrer name="GetCurrentFrameFunction"/>
		</member>
		<member name="M:GetCashStr" syntax="GetCashStr(playerid)">
			<stacksize value="198"/>
			<referrer name="showStats"/>
			<dependency name="GetCashStr"/>
			<dependency name="MoneyMoney"/>
			<dependency name="StoreMoney"/>
			<dependency name="Value64Bit"/>
			<dependency name="format"/>
			<dependency name="formatNumbers2"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetClosestVehicle" syntax="GetClosestVehicle(playerid, dontsearchthis)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_closestcar"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="GetDistancePlayerToVeh"/>
			<dependency name="Iterator@Vehicle"/>
			<param name="playerid">
			</param>
			<param name="dontsearchthis">
			</param>
		</member>
		<member name="M:GetConnectedTime" syntax="GetConnectedTime(playerid)">
			<stacksize value="3"/>
			<referrer name="GetPlayerPausedTime"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="Callback_HoldTimer"/>
			<referrer name="Callback_TabCheck"/>
			<dependency name="NetStats_GetConnectedTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetCurrentFrame" syntax="GetCurrentFrame()">
			<stacksize value="1"/>
			<referrer name="GetFrameNextFrame"/>
		</member>
		<member name="M:GetCurrentFrameFunction" syntax="GetCurrentFrameFunction()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameFunction"/>
		</member>
		<member name="M:GetCurrentFrameHeaderCount" syntax="GetCurrentFrameHeaderCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameHeaderCount"/>
		</member>
		<member name="M:GetCurrentFrameHeaderSize" syntax="GetCurrentFrameHeaderSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameHeaderSize"/>
		</member>
		<member name="M:GetCurrentFrameLocal" syntax="GetCurrentFrameLocal(param)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameLocal"/>
			<param name="param">
			</param>
		</member>
		<member name="M:GetCurrentFrameLocalCount" syntax="GetCurrentFrameLocalCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameLocalCount"/>
		</member>
		<member name="M:GetCurrentFrameLocalSize" syntax="GetCurrentFrameLocalSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameLocalSize"/>
		</member>
		<member name="M:GetCurrentFrameParameter" syntax="GetCurrentFrameParameter(param, idx)">
			<stacksize value="6"/>
			<referrer name="I@E"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameParameter"/>
			<param name="param">
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:GetCurrentFrameParameterCount" syntax="GetCurrentFrameParameterCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameParameterCount"/>
		</member>
		<member name="M:GetCurrentFrameParameterSize" syntax="GetCurrentFrameParameterSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameParameterSize"/>
		</member>
		<member name="M:GetCurrentFramePreviousFrame" syntax="GetCurrentFramePreviousFrame()">
			<stacksize value="4"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Restore"/>
			<referrer name="I@E"/>
			<referrer name="I@L"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFramePreviousFrame"/>
		</member>
		<member name="M:GetCurrentFrameReturn" syntax="GetCurrentFrameReturn()">
			<stacksize value="4"/>
			<referrer name="O@A_"/>
			<referrer name="AMX_Read"/>
			<referrer name="I@E"/>
			<referrer name="I@F"/>
			<referrer name="I@L"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameReturn"/>
		</member>
		<member name="M:GetCurrentFrameTotalCount" syntax="GetCurrentFrameTotalCount()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameTotalCount"/>
		</member>
		<member name="M:GetCurrentFrameTotalSize" syntax="GetCurrentFrameTotalSize()">
			<stacksize value="4"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="GetFrameTotalSize"/>
		</member>
		<member name="M:GetDat" syntax="GetDat()">
			<stacksize value="1"/>
			<referrer name="AbsToRel"/>
			<referrer name="RelToAbs"/>
		</member>
		<member name="M:GetDistanceBetweenPoints" syntax="GetDistanceBetweenPoints(x1, y1, z1, x2, y2, z2)">
			<tagname value="Float"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="dialog_GPS"/>
			<referrer name="dialog_GPS1"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="floatabs"/>
			<dependency name="floatpower"/>
			<dependency name="floatsqroot"/>
			<dependency name="floatsub"/>
			<param name="x1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y2">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetDistancePlayerToVeh" syntax="GetDistancePlayerToVeh(playerid, vehicleid)">
			<stacksize value="12"/>
			<referrer name="GetClosestVehicle"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="floatround"/>
			<dependency name="floatsqroot"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetFrameFunction" syntax="GetFrameFunction(frm_addr)">
			<stacksize value="29"/>
			<referrer name="GetCurrentFrameFunction"/>
			<referrer name="Callback_Get"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="GetFrameNextFrame"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="GetFrameReturn"/>
			<dependency name="GetFrameVariable"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_SCTRL"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="UnrelocateOpcode"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameHeaderCount" syntax="GetFrameHeaderCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameHeaderCount"/>
			<dependency name="GetFrameHeaderSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameHeaderSize" syntax="GetFrameHeaderSize(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetFrameTotalSize"/>
			<referrer name="GetFrameLocalSize"/>
			<referrer name="GetFrameHeaderCount"/>
			<referrer name="GetCurrentFrameHeaderSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameLocal" syntax="GetFrameLocal(frm_addr, param)">
			<stacksize value="1"/>
			<referrer name="GetCurrentFrameLocal"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
		</member>
		<member name="M:GetFrameLocalCount" syntax="GetFrameLocalCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameLocalCount"/>
			<dependency name="GetFrameLocalSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameLocalSize" syntax="GetFrameLocalSize(frm_addr)">
			<stacksize value="6"/>
			<referrer name="GetFrameTotalSize"/>
			<referrer name="GetFrameLocalCount"/>
			<referrer name="GetCurrentFrameLocalSize"/>
			<referrer name="I@E"/>
			<referrer name="I@L"/>
			<dependency name="GetFrameHeaderSize"/>
			<dependency name="GetFrameNextFrame"/>
			<dependency name="GetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameNextFrame" syntax="GetFrameNextFrame(frm_addr)">
			<stacksize value="6"/>
			<referrer name="GetFrameLocalSize"/>
			<referrer name="GetFrameFunction"/>
			<dependency name="GetCurrentFrame"/>
			<dependency name="GetFramePreviousFrame"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameParameter" syntax="GetFrameParameter(frm_addr, param, idx)">
			<stacksize value="1"/>
			<referrer name="GetCurrentFrameParameter"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:GetFrameParameterCount" syntax="GetFrameParameterCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameParameterCount"/>
			<dependency name="GetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameParameterSize" syntax="GetFrameParameterSize(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetFrameTotalSize"/>
			<referrer name="GetFrameLocalSize"/>
			<referrer name="GetFrameParameterCount"/>
			<referrer name="GetCurrentFrameParameterSize"/>
			<referrer name="Callback_Restore"/>
			<referrer name="I@E"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFramePreviousFrame" syntax="GetFramePreviousFrame(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetFrameNextFrame"/>
			<referrer name="GetCurrentFramePreviousFrame"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="GetStackTrace"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Restore"/>
			<referrer name="I@E"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameReturn" syntax="GetFrameReturn(frm_addr)">
			<stacksize value="1"/>
			<referrer name="GetCurrentFrameReturn"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="GetStackTrace"/>
			<referrer name="Malloc_FindStackTop"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Restore"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameTotalCount" syntax="GetFrameTotalCount(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetCurrentFrameTotalCount"/>
			<dependency name="GetFrameTotalSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameTotalSize" syntax="GetFrameTotalSize(frm_addr)">
			<stacksize value="4"/>
			<referrer name="GetFrameTotalCount"/>
			<referrer name="GetCurrentFrameTotalSize"/>
			<dependency name="GetFrameHeaderSize"/>
			<dependency name="GetFrameLocalSize"/>
			<dependency name="GetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
		</member>
		<member name="M:GetFrameVariable" syntax="GetFrameVariable(frm_addr, param, idx)">
			<stacksize value="1"/>
			<referrer name="GetFrameFunction"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:GetFunctionFromReturnAddress" syntax="GetFunctionFromReturnAddress(ret_addr)">
			<stacksize value="4"/>
			<referrer name="PrintStackTrace"/>
			<dependency name="GetAmxBaseAddress"/>
			<param name="ret_addr">
			</param>
		</member>
		<member name="M:GetIP" syntax="GetIP(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
				Player to get IP of.
			</param>
			  <returns>  IP as a 32bit int.  </returns> 
		</member>
		<member name="M:GetJITGeneratorVersion" syntax="GetJITGeneratorVersion()">
			<stacksize value="1"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<referrer name="CallNative"/>
			<referrer name="CallNativeByAddress"/>
		</member>
		<member name="M:GetLocalFunction" syntax="GetLocalFunction(func[], spec[])">
			<tagname value="Function"/>
			<stacksize value="6"/>
			<referrer name="Callback_Get"/>
			<dependency name="StoredF_WritePublicCode"/>
			<dependency name="funcidx"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
				Public function to get.
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
				The structure of the function's parameters.
			</param>
			    <returns>  A pointer to the function.  </returns>  <remarks>  Accepts the following parameter specifiers:  i - Integer (also x/c/d/h)  f - Float (also g)  s - String  ai - Array (followed by length)  v - Reference (&amp;var, any tag)  </remarks> 
		</member>
		<member name="M:GetMapZoneAreaCount" syntax="GetMapZoneAreaCount(id, &amp;count)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="E_MAP_ZONE_AREA_COUNT"/>
			<dependency name="IsValidMapZone"/>
			<dependency name="MapZoneData"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>MapZone </paraminfo>
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetMapZoneAreaPos" syntax="GetMapZoneAreaPos(id, &amp;minX, &amp;minY, &amp;minZ, &amp;maxX, &amp;maxY, &amp;maxZ, start)">
			<stacksize value="4"/>
			<dependency name="E_MAP_ZONE_AREA_ID"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_X"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_Y"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_Z"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_X"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_Y"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_Z"/>
			<dependency name="IsValidMapZone"/>
			<dependency name="MapZoneAreaData"/>
			<param name="id">
				<paraminfo>MapZone </paraminfo>
			</param>
			<param name="minX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="minY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="minZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="maxX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="maxY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="maxZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:GetMapZoneAtPoint" syntax="GetMapZoneAtPoint(x, y, z)">
			<tagname value="MapZone"/>
			<stacksize value="5"/>
			<referrer name="GetPlayerMapZone"/>
			<referrer name="GetVehicleMapZone"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="E_MAP_ZONE_AREA_ID"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_X"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_Y"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_Z"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_Y"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_Z"/>
			<dependency name="MapZoneAreaData"/>
			<dependency name="_GetMapZoneLoopStartIndex"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetMapZoneAtPoint2D" syntax="GetMapZoneAtPoint2D(x, y)">
			<tagname value="MapZone"/>
			<stacksize value="5"/>
			<referrer name="GetPlayerMapZone2D"/>
			<referrer name="GetVehicleMapZone2D"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="E_MAP_ZONE_AREA_ID"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_X"/>
			<dependency name="E_MAP_ZONE_AREA_MAX_Y"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_Y"/>
			<dependency name="MapZoneAreaData"/>
			<dependency name="_GetMapZoneLoopStartIndex"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetMapZoneCount" syntax="GetMapZoneCount()">
			<stacksize value="1"/>
		</member>
		<member name="M:GetMapZoneName" syntax="GetMapZoneName(id, name[], size)">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<referrer name="pc_cmd_service"/>
			<dependency name="E_MAP_ZONE_NAME"/>
			<dependency name="IsValidMapZone"/>
			<dependency name="MapZoneData"/>
			<dependency name="false"/>
			<dependency name="strunpack"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>MapZone </paraminfo>
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetMapZoneSoundID" syntax="GetMapZoneSoundID(id, &amp;soundid)">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="E_MAP_ZONE_SOUND_ID"/>
			<dependency name="IsValidMapZone"/>
			<dependency name="MapZoneData"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="id">
				<paraminfo>MapZone </paraminfo>
			</param>
			<param name="soundid">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetMaxPlayers" syntax="GetMaxPlayers()">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
		</member>
		<member name="M:GetNativeAddressFromIndex" syntax="GetNativeAddressFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetNativeAddressFromName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetNativeInfo"/>
			<param name="index">
			</param>
		</member>
		<member name="M:GetNativeAddressFromName" syntax="GetNativeAddressFromName(name[])">
			<stacksize value="4"/>
			<dependency name="GetNativeAddressFromIndex"/>
			<dependency name="GetNativeIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetNativeIndexFromAddress" syntax="GetNativeIndexFromAddress(address)">
			<stacksize value="7"/>
			<referrer name="GetNativeNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="address">
			</param>
		</member>
		<member name="M:GetNativeIndexFromName" syntax="GetNativeIndexFromName(name[])">
			<stacksize value="10"/>
			<referrer name="GetNativeAddressFromName"/>
			<referrer name="AsmEmitSysreq"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="NtCompare"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetNativeInfo" syntax="GetNativeInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="GetNativeAddressFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:GetNativeNameFromAddress" syntax="GetNativeNameFromAddress(address, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="GetNativeIndexFromAddress"/>
			<dependency name="GetNativeNameFromIndex"/>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetNativeNameFromIndex" syntax="GetNativeNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetNativeNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetNativeInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetNumNatives" syntax="GetNumNatives(amxhdr[])">
			<stacksize value="1"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_LIBRARIES"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetNumPubVars" syntax="GetNumPubVars(amxhdr[])">
			<stacksize value="1"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="AMX_HDR_TAGS"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetNumPublics" syntax="GetNumPublics(amxhdr[])">
			<stacksize value="2"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetNumTags" syntax="GetNumTags(amxhdr[])">
			<stacksize value="4"/>
			<dependency name="GetNumTagsInternal"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetNumTagsInternal" syntax="GetNumTagsInternal(amxhdr[])">
			<stacksize value="1"/>
			<referrer name="GetNumTags"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NAMETABLE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<param name="amxhdr">
				<paraminfo> [17] </paraminfo>
			</param>
		</member>
		<member name="M:GetOS" syntax="GetOS()">
			<tagname value="OS"/>
			<stacksize value="4"/>
			<referrer name="IsWindows"/>
			<referrer name="IsLinux"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OS_LINUX"/>
			<dependency name="OS_UNKNOWN"/>
			<dependency name="OS_WINDOWS"/>
			<dependency name="RelocateOpcode"/>
		</member>
		<member name="M:GetOpcodeInstructionInformation" syntax="GetOpcodeInstructionInformation(opcode)">
			<stacksize value="1"/>
			<referrer name="DisasmDecodeInsn"/>
			<dependency name="GetOpcodeInstructionInformation"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="insn_table"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:GetOpcodeInstructionName" syntax="GetOpcodeInstructionName(opcode)">
			<stacksize value="1"/>
			<dependency name="GetOpcodeInstructionName"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="OpcodeInsnInfo_name"/>
			<dependency name="insn_table"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:GetOpcodeInstructionParameters" syntax="GetOpcodeInstructionParameters(opcode)">
			<stacksize value="1"/>
			<referrer name="AsmEmitPadding"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="OpcodeInsnInfo_num_opers"/>
			<dependency name="insn_table"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:GetOpcodeInstructionRelocatable" syntax="GetOpcodeInstructionRelocatable(opcode)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="OpcodeInsnInfo_needs_reloc"/>
			<dependency name="false"/>
			<dependency name="insn_table"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:GetPVarInt" syntax="GetPVarInt(playerid, varname[])">
			<attribute name="native"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimersWantedFind"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPVarString" syntax="GetPVarString(playerid, varname[], string_return[], len)">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string_return">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayer2DZone" syntax="GetPlayer2DZone(playerid, zone[], len)">
			<stacksize value="11"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SAZONE_AREA"/>
			<dependency name="SAZONE_NAME"/>
			<dependency name="format"/>
			<dependency name="gSAZones"/>
			<param name="playerid">
			</param>
			<param name="zone">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayer3DZone" syntax="GetPlayer3DZone(playerid, zone[], len)">
			<stacksize value="11"/>
			<referrer name="IsPlayerInZone"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SAZONE_AREA"/>
			<dependency name="SAZONE_NAME"/>
			<dependency name="format"/>
			<dependency name="gSAZones"/>
			<param name="playerid">
			</param>
			<param name="zone">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerAction" syntax="GetPlayerAction(playerid)">
			<stacksize value="1"/>
			<dependency name="e_iAction"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerAmmo" syntax="GetPlayerAmmo(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerAnimationIndex" syntax="GetPlayerAnimationIndex(playerid)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<referrer name="IsPlayerSwimming"/>
			<referrer name="IsPlayerSkydiving"/>
			<referrer name="IsPlayerJumping"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="Callback_CheckAnimation"/>
			<referrer name="Timers"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerArmourEx" syntax="GetPlayerArmourEx(playerid, &amp;armour)">
			<stacksize value="1"/>
			<dependency name="pArmour"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerBank" syntax="GetPlayerBank(playerid)">
			<stacksize value="1"/>
			<referrer name="pc_cmd_transfer"/>
			<dependency name="pBank"/>
			<dependency name="pStoreBank"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerCameraFrontVector" syntax="GetPlayerCameraFrontVector(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerCameraMode" syntax="GetPlayerCameraMode(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerCameraPos" syntax="GetPlayerCameraPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerCash" syntax="GetPlayerCash(playerid)">
			<stacksize value="2"/>
			<referrer name="PlayerMoney"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<dependency name="MoneyMoney"/>
			<dependency name="StoreMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerCityLocation" syntax="GetPlayerCityLocation(playerid)">
			<stacksize value="16"/>
			<referrer name="pc_cmd_service"/>
			<dependency name="GetPlayerCityLocation"/>
			<dependency name="IsPlayerInArea"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerDistanceFromPoint" syntax="GetPlayerDistanceFromPoint(playerid, X, Y, Z)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="DistanceToPlayer"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerDrunkLevel" syntax="GetPlayerDrunkLevel(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="Timers"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerFPS" syntax="GetPlayerFPS(playerid)">
			<stacksize value="1"/>
			<dependency name="e_iFrames"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerFacingAngle" syntax="GetPlayerFacingAngle(playerid, &amp;ang)">
			<attribute name="native"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<referrer name="pc_cmd_spawncar"/>
			<param name="playerid">
			</param>
			<param name="ang">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerHealthEx" syntax="GetPlayerHealthEx(playerid, &amp;health)">
			<stacksize value="1"/>
			<referrer name="pc_cmd_slap"/>
			<dependency name="pHealth"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerID" syntax="GetPlayerID(playerName[])">
			<stacksize value="7"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_acover"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="pLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="playerName">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerInterior" syntax="GetPlayerInterior(playerid)">
			<attribute name="native"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="showStats"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_balance"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_area"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerIp" syntax="GetPlayerIp(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="OnPlayerConnect"/>
			<referrer name="resetVars"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_ip"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerKeys" syntax="GetPlayerKeys(playerid, &amp;keys, &amp;updown, &amp;leftright)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<referrer name="IsPlayerJumping"/>
			<referrer name="Callback_HoldTimer"/>
			<param name="playerid">
			</param>
			<param name="keys">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="updown">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="leftright">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerLastShotVectors" syntax="GetPlayerLastShotVectors(playerid, &amp;fOriginX, &amp;fOriginY, &amp;fOriginZ, &amp;fHitPosX, &amp;fHitPosY, &amp;fHitPosZ)">
			<attribute name="native"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="fOriginX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fOriginY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fOriginZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fHitPosX">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fHitPosY">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="fHitPosZ">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerMapZone" syntax="GetPlayerMapZone(playerid)">
			<tagname value="MapZone"/>
			<stacksize value="9"/>
			<referrer name="pc_cmd_service"/>
			<dependency name="GetMapZoneAtPoint"/>
			<dependency name="GetPlayerPos"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerMapZone2D" syntax="GetPlayerMapZone2D(playerid)">
			<tagname value="MapZone"/>
			<stacksize value="9"/>
			<dependency name="GetMapZoneAtPoint2D"/>
			<dependency name="GetPlayerPos"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerMoney" syntax="GetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerName" syntax="GetPlayerName(playerid, name[], len)">
			<attribute name="native"/>
			<referrer name="ReturnPlayerName"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<referrer name="_y_utils_OnPlayerConnect"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="resetVars"/>
			<referrer name="kickPlayer"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GetPlayerPacketLoss" syntax="GetPlayerPacketLoss(playerid)">
			<tagname value="Float"/>
			<stacksize value="1"/>
			<dependency name="e_fPacket"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerPausedTime" syntax="GetPlayerPausedTime(playerid)">
			<stacksize value="4"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="e_PLAYER_TICK"/>
			<dependency name="s_aPlayerTickInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerPing" syntax="GetPlayerPing(playerid)">
			<attribute name="native"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_id"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerPoolSize" syntax="GetPlayerPoolSize()">
			<attribute name="native"/>
			<referrer name="Callback_GetDriver"/>
			<referrer name="Callback_TabCheck"/>
		</member>
		<member name="M:GetPlayerPos" syntax="GetPlayerPos(playerid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="GetPlayer2DZone"/>
			<referrer name="GetPlayer3DZone"/>
			<referrer name="StartFly"/>
			<referrer name="StopFly"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="GetDistancePlayerToVeh"/>
			<referrer name="slapPlayer"/>
			<referrer name="IsPlayerInArea"/>
			<referrer name="DistanceToPlayer"/>
			<referrer name="dialog_GPS"/>
			<referrer name="dialog_GPS1"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="GetPlayerMapZone"/>
			<referrer name="GetPlayerMapZone2D"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="TimerGetHit"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="AttachTrailer"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="ProxDetectorS"/>
			<referrer name="PlayerToPoint"/>
			<referrer name="IsPlayerInTurf"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="TimersWantedFind"/>
			<referrer name="TimerPos"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerState" syntax="GetPlayerState(playerid)">
			<attribute name="native"/>
			<referrer name="Callback_GetDriver"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="Callback_TabCheck"/>
			<referrer name="TrollDetect"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="@yH_OnPlayerKeyStateChange@012"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerTargetPlayer" syntax="GetPlayerTargetPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerTeam" syntax="GetPlayerTeam(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerVehicleID" syntax="GetPlayerVehicleID(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="OnPlayerTakeDamage"/>
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="AttachTrailer"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerVehicleSeat" syntax="GetPlayerVehicleSeat(playerid)">
			<attribute name="native"/>
			<referrer name="IsSeatTaked"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerVelocity" syntax="GetPlayerVelocity(playerid, &amp;X, &amp;Y, &amp;Z)">
			<attribute name="native"/>
			<referrer name="TrollDetect"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerVirtualWorld" syntax="GetPlayerVirtualWorld(playerid)">
			<attribute name="native"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="showStats"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerWeapon" syntax="GetPlayerWeapon(playerid)">
			<attribute name="native"/>
			<referrer name="IsPlayerSkydiving"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="pc_cmd_tazer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerWeaponData" syntax="GetPlayerWeaponData(playerid, slot, &amp;weapons, &amp;ammo)">
			<attribute name="native"/>
			<referrer name="GetPlayerWeapons"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="haveWeapons"/>
			<param name="playerid">
			</param>
			<param name="slot">
			</param>
			<param name="weapons">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="ammo">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetPlayerWeaponState" syntax="GetPlayerWeaponState(playerid)">
			<attribute name="native"/>
			<referrer name="OnPlayerWeaponShot"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPlayerWeapons" syntax="GetPlayerWeapons(playerid)">
			<stacksize value="34"/>
			<referrer name="pc_cmd_disarm"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetPubVarAddressFromIndex" syntax="GetPubVarAddressFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetPubVarAddressFromName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetPubVarInfo"/>
			<param name="index">
			</param>
		</member>
		<member name="M:GetPubVarAddressFromName" syntax="GetPubVarAddressFromName(name[])">
			<stacksize value="4"/>
			<dependency name="GetPubVarAddressFromIndex"/>
			<dependency name="GetPubVarIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPubVarIndexFromAddress" syntax="GetPubVarIndexFromAddress(address)">
			<stacksize value="7"/>
			<referrer name="GetPubVarNameFromAddress"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="GetNumPubVars"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="address">
			</param>
		</member>
		<member name="M:GetPubVarIndexFromName" syntax="GetPubVarIndexFromName(name[])">
			<stacksize value="12"/>
			<referrer name="GetPubVarAddressFromName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="GetNumPubVars"/>
			<dependency name="NtCompare"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPubVarInfo" syntax="GetPubVarInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="GetPubVarAddressFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="GetNumPubVars"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:GetPubVarNameFromAddress" syntax="GetPubVarNameFromAddress(address, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="GetPubVarIndexFromAddress"/>
			<dependency name="GetPubVarNameFromIndex"/>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetPubVarNameFromIndex" syntax="GetPubVarNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetPubVarNameFromAddress"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetPubVarInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetPublicAddressFromIndex" syntax="GetPublicAddressFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetPublicAddressFromName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetPublicInfo"/>
			<param name="index">
			</param>
		</member>
		<member name="M:GetPublicAddressFromName" syntax="GetPublicAddressFromName(name[])">
			<stacksize value="4"/>
			<referrer name="AsmSetErrorHandlerName"/>
			<referrer name="I@L"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="GetPublicAddressFromIndex"/>
			<dependency name="GetPublicIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPublicIndexFromAddress" syntax="GetPublicIndexFromAddress(address)">
			<stacksize value="7"/>
			<referrer name="GetPublicNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanGetFuncName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="address">
			</param>
		</member>
		<member name="M:GetPublicIndexFromName" syntax="GetPublicIndexFromName(name[])">
			<stacksize value="12"/>
			<referrer name="GetPublicAddressFromName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="NtCompare"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetPublicInfo" syntax="GetPublicInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="GetPublicAddressFromIndex"/>
			<referrer name="GetPublicNameFromIndex"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:GetPublicNameByIndex" syntax="GetPublicNameByIndex()">
			<stacksize value="1"/>
			<referrer name="ProfilerWriteData"/>
		</member>
		<member name="M:GetPublicNameFromAddress" syntax="GetPublicNameFromAddress(address, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="PrintStackTrace"/>
			<dependency name="GetPublicIndexFromAddress"/>
			<dependency name="GetPublicNameFromIndex"/>
			<param name="address">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetPublicNameFromIndex" syntax="GetPublicNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetPublicNameFromAddress"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanGetFuncName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetPublicInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetRawAmxHeader" syntax="GetRawAmxHeader(plain_amxhdr[])">
			<stacksize value="6"/>
			<referrer name="GetAmxHeaderNow"/>
			<dependency name="ReadAmxMemory"/>
			<param name="plain_amxhdr">
				<paraminfo> [15] </paraminfo>
			</param>
		</member>
		<member name="M:GetRemoteFunction" syntax="GetRemoteFunction(func[], spec[])">
			<tagname value="Function"/>
			<stacksize value="8"/>
			<referrer name="Callback_Get"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_Read"/>
			<dependency name="Remote_DoSearch"/>
			<dependency name="Remote_WriteJustSpec"/>
			<dependency name="Remote_WriteSpecAndFunc"/>
			<dependency name="Remote_WriteStubCode"/>
			<dependency name="YSI_g_sRemoteFunctions"/>
			<dependency name="YSI_g_sRemoteSpecifiers"/>
			<dependency name="YSI_g_sRemoteStub"/>
			<dependency name="ref"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
				Public function to get.
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
				The structure of the function's parameters.
			</param>
			    <returns>  A pointer to the function.  </returns>  <remarks>  Accepts the following parameter specifiers:  i - Integer (also x/c/d/h)  f - Float (also g)  s - String  ai - Array (followed by length)  v - Reference (&amp;var, any tag)  </remarks> 
		</member>
		<member name="M:GetReportID" syntax="GetReportID(playerid)">
			<stacksize value="3"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:GetServerTickRate" syntax="GetServerTickRate()">
			<attribute name="native"/>
			<referrer name="Timers"/>
		</member>
		<member name="M:GetStackTrace" syntax="GetStackTrace(trace[], skip, max)">
			<stacksize value="7"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="GetFrameReturn"/>
			<param name="trace">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="skip">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:GetTagIDFromIndex" syntax="GetTagIDFromIndex(index)">
			<stacksize value="7"/>
			<referrer name="GetTagIDFromName"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetTagInfo"/>
			<param name="index">
			</param>
		</member>
		<member name="M:GetTagIDFromName" syntax="GetTagIDFromName(name[])">
			<stacksize value="4"/>
			<dependency name="GetTagIDFromIndex"/>
			<dependency name="GetTagIndexFromName"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetTagIndexFromID" syntax="GetTagIndexFromID(id)">
			<stacksize value="7"/>
			<referrer name="GetTagNameFromID"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetNumTagsInternal"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="id">
			</param>
		</member>
		<member name="M:GetTagIndexFromName" syntax="GetTagIndexFromName(name[])">
			<stacksize value="12"/>
			<referrer name="GetTagIDFromName"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetNumTagsInternal"/>
			<dependency name="NtCompare"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:GetTagInfo" syntax="GetTagInfo(index, info[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<referrer name="GetTagIDFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<referrer name="IsTagIndexStrong"/>
			<referrer name="IsTagIndexWeak"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="GetNumTagsInternal"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="false"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="info">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:GetTagNameFromID" syntax="GetTagNameFromID(id, name[], size)">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="GetTagIndexFromID"/>
			<dependency name="GetTagNameFromIndex"/>
			<dependency name="true"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetTagNameFromIndex" syntax="GetTagNameFromIndex(index, name[], size)">
			<tagname value="bool"/>
			<stacksize value="8"/>
			<referrer name="GetTagNameFromID"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_NAMEOFS"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="GetAmxHeaderComponent"/>
			<dependency name="GetTagInfo"/>
			<dependency name="NtCopy"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="index">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:GetTickCount" syntax="GetTickCount()">
			<attribute name="native"/>
			<referrer name="exit_public"/>
			<referrer name="enter_public"/>
			<referrer name="@yH_OnPlayerStateChange@005"/>
		</member>
		<member name="M:GetVehicleDamageStatus" syntax="GetVehicleDamageStatus(vehicleid, &amp;panels, &amp;doors, &amp;lights, &amp;tires)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<param name="vehicleid">
			</param>
			<param name="panels">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="doors">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="lights">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="tires">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleHealth" syntax="GetVehicleHealth(vehicleid, &amp;health)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="getVehicleHealth"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_park"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleMapZone" syntax="GetVehicleMapZone(vehicleid)">
			<tagname value="MapZone"/>
			<stacksize value="9"/>
			<dependency name="GetMapZoneAtPoint"/>
			<dependency name="GetVehiclePos"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetVehicleMapZone2D" syntax="GetVehicleMapZone2D(vehicleid)">
			<tagname value="MapZone"/>
			<stacksize value="9"/>
			<dependency name="GetMapZoneAtPoint2D"/>
			<dependency name="GetVehiclePos"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetVehicleModel" syntax="GetVehicleModel(vehicleid)">
			<attribute name="native"/>
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="OnPlayerStateChange"/>
			<referrer name="isPlane"/>
			<referrer name="isBoat"/>
			<referrer name="isBike"/>
			<referrer name="isMotor"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_engine"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetVehicleParamsEx" syntax="GetVehicleParamsEx(vehicleid, &amp;engine, &amp;lights, &amp;alarm, &amp;doors, &amp;bonnet, &amp;boot, &amp;objective)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="vehicleid">
			</param>
			<param name="engine">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="lights">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="alarm">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="doors">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="bonnet">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="boot">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="objective">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehiclePoolSize" syntax="GetVehiclePoolSize()">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
		</member>
		<member name="M:GetVehiclePos" syntax="GetVehiclePos(vehicleid, &amp;x, &amp;y, &amp;z)">
			<attribute name="native"/>
			<referrer name="Callback_IsVehicleInPoint"/>
			<referrer name="GetDistancePlayerToVeh"/>
			<referrer name="GetVehicleMapZone"/>
			<referrer name="GetVehicleMapZone2D"/>
			<referrer name="AttachTrailer"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="TimerCarFind"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleTrailer" syntax="GetVehicleTrailer(vehicleid)">
			<attribute name="native"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetVehicleVelocity" syntax="GetVehicleVelocity(vehicleid, &amp;X, &amp;Y, &amp;Z)">
			<attribute name="native"/>
			<referrer name="Callback_GetSpeed"/>
			<referrer name="getVehicleSpeed"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
			</param>
			<param name="X">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float &amp; </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetVehicleVirtualWorld" syntax="GetVehicleVirtualWorld(vehicleid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_gotocar"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:GetVehicleZAngle" syntax="GetVehicleZAngle(vehicleid, &amp;z_angle)">
			<attribute name="native"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_flipveh"/>
			<param name="vehicleid">
			</param>
			<param name="z_angle">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:GetWeaponName" syntax="GetWeaponName(weaponid, weapon[], len)">
			<attribute name="native"/>
			<referrer name="getWeaponName"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="weaponid">
			</param>
			<param name="weapon">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:GivePlayerBank" syntax="GivePlayerBank(playerid, amount)">
			<stacksize value="6"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="PayDay"/>
			<dependency name="Add64Bit"/>
			<dependency name="pBank"/>
			<dependency name="pStoreBank"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:GivePlayerCash" syntax="GivePlayerCash(playerid, type, money)">
			<stacksize value="6"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="checkMission"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="gasTimer"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="Add64Bit"/>
			<dependency name="MoneyMoney"/>
			<dependency name="StoreMoney"/>
			<dependency name="true"/>
			<dependency name="updatePlayer"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:GivePlayerMoney" syntax="GivePlayerMoney(playerid, money)">
			<attribute name="native"/>
			<referrer name="updatePlayer"/>
			<param name="playerid">
			</param>
			<param name="money">
			</param>
		</member>
		<member name="M:GivePlayerWeapon" syntax="GivePlayerWeapon(playerid, weaponid, ammo)">
			<attribute name="native"/>
			<referrer name="serverWeapon"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:H@" syntax="H@(...)">
			<stacksize value="1"/>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:HTTP" syntax="HTTP(index, type, url[], data[], callback[])">
			<attribute name="native"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<param name="index">
			</param>
			<param name="type">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:HaveToRelocateOpcodes" syntax="HaveToRelocateOpcodes()">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<referrer name="RelocateOpcodeNow"/>
			<dependency name="OP_CALL"/>
			<dependency name="ReadOpcodeNearThis"/>
		</member>
		<member name="M:HeapAllocBytes" syntax="HeapAllocBytes(nbytes)">
			<stacksize value="2"/>
			<referrer name="HeapAllocCells"/>
			<param name="nbytes">
			</param>
		</member>
		<member name="M:HeapAllocCells" syntax="HeapAllocCells(ncells)">
			<stacksize value="4"/>
			<dependency name="HeapAllocBytes"/>
			<param name="ncells">
			</param>
		</member>
		<member name="M:HeapRelease" syntax="HeapRelease(address)">
			<stacksize value="1"/>
			<param name="address">
			</param>
		</member>
		<member name="M:HideDealerShipTD" syntax="HideDealerShipTD(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="TextDrawHideForPlayer"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="serverDealerTD"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:HookChain_OnScriptInit" syntax="HookChain_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="9"/>
			<automaton name="_ALS"/>
			<referrer name="VA_OnScriptInit"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_DAT"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Malloc_TrySetup"/>
			<dependency name="OP_BOUNDS"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="SetTimer"/>
			<dependency name="cellbits"/>
			<dependency name="heapspace"/>
			<remarks>  Finds all "BOUNDS 0" OpCodes in the AMX and rewrites them to "NOP NOP".  The  byte pattern for this code is "OP_BOUNDS 0", which (AFAIK) can not appear  anywhere else in the DAT segment.  You can have "OP_BOUNDS" as a parameter  to something, but it would then be followed by an OpCode of "0", which is  never valid (OP_NONE).  I've tried to make this as resiliant as possible to being called via  "CallLocalFunction" as not the first callback in the script but there may  still be a few problems - we won't see till people start testing I guess...  </remarks> 
		</member>
		<member name="M:HookNative" syntax="HookNative(index, address)">
			<stacksize value="8"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="GetNumNatives"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="WriteAmxMemory"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="index">
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:HookPublic" syntax="HookPublic(index, address)">
			<stacksize value="8"/>
			<referrer name="ProfilerInit"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetNumPublics"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="WriteAmxMemory"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<param name="index">
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:Hooks_Collate" syntax="Hooks_Collate(preloads[][], precount, name[], idx)">
			<stacksize value="18"/>
			<referrer name="Hooks_DoAllHooks"/>
			<dependency name="Hooks_GenerateCode"/>
			<dependency name="Hooks_GetAllHooks"/>
			<dependency name="Hooks_GetPointerRewrite"/>
			<dependency name="Hooks_GetPreHooks"/>
			<dependency name="Hooks_IsolateName"/>
			<dependency name="Hooks_MakeLongName"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="preloads">
				<paraminfo> [][17] </paraminfo>
			</param>
			<param name="precount">
			</param>
			<param name="name">
				<paraminfo> [32] </paraminfo>
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:Hooks_CompareNextCell" syntax="Hooks_CompareNextCell(addr0, addr1)">
			<stacksize value="6"/>
			<referrer name="Hooks_ComparePublics"/>
			<dependency name="AMX_Read"/>
			<dependency name="Cell_ReverseBytes"/>
			<param name="addr0">
				The 1st address to read.
			</param>
			<param name="addr1">
				The 2nd address to read.
			</param>
			    <returns>  -1 - The first address is bigger.  0  - The addresses are the same  1  - The second address is bigger.  </returns>  <remarks>  Reads two addresses, converts them to big endian, and compares them as four  characters of a string at once.  </remarks> 
		</member>
		<member name="M:Hooks_ComparePublics" syntax="Hooks_ComparePublics(idx0, idx1)">
			<stacksize value="9"/>
			<referrer name="Hooks_SortPublics"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="Hooks_CompareNextCell"/>
			<param name="idx0">
				The index of the 1st public.
			</param>
			<param name="idx1">
				The index of the 2nd public.
			</param>
			    <remarks>  Compares two public function entries, and if need-be, swaps them over.  </remarks> 
		</member>
		<member name="M:Hooks_CountInvalidPublics" syntax="Hooks_CountInvalidPublics()">
			<stacksize value="10"/>
			<referrer name="Hooks_SortPublics"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<remarks>  Counts the number of public functions that have had their names erased.  </remarks> 
		</member>
		<member name="M:Hooks_DoAllHooks" syntax="Hooks_DoAllHooks()">
			<stacksize value="185"/>
			<referrer name="VA_OnScriptInit"/>
			<dependency name="AMX_GetNamePrefix"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="E_PRE_HOOK"/>
			<dependency name="Hooks_Collate"/>
			<dependency name="Hooks_GetPreloadLibraries"/>
			<dependency name="Hooks_SortPublics"/>
		</member>
		<member name="M:Hooks_GenerateCode" syntax="Hooks_GenerateCode(name[], hooks[], count, write, hasprehooks)">
			<stacksize value="7"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="CGen_AddCodeSpace"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="Hooks_GetDefaultReturn"/>
			<dependency name="Hooks_WriteFunction"/>
			<param name="name">
				<paraminfo> [64] </paraminfo>
				Name of the function to generate.
			</param>
			<param name="hooks">
				<paraminfo> [] </paraminfo>
				All the functions to call.
			</param>
			<param name="count">
				Number of functions to call.
			</param>
			<param name="write">
				Where to write the new function's pointer.
			</param>
			<param name="hasprehooks">
				<paraminfo>bool </paraminfo>
				Needs to call other stuff first.
			</param>
			         
		</member>
		<member name="M:Hooks_GetAllHooks" syntax="Hooks_GetAllHooks(name[], hooks[], idx, &amp;namelen)">
			<stacksize value="73"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_GetStringFromEntry"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_InvalidateName"/>
			<dependency name="Hooks_IsolateName"/>
			<dependency name="Hooks_MakeLongName"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name of the callback (with y_hooks prefix).
			</param>
			<param name="hooks">
				<paraminfo> [128] </paraminfo>
				Array in which to store the function headers.
			</param>
			<param name="idx">
				Current position in the AMX header.
			</param>
			<param name="namelen">
				<paraminfo> &amp; </paraminfo>
				Min bound of space used by all these names.
			</param>
			        <returns>  The number of hooks found.  </returns>  <remarks>  The name of the function currently being processed is derived from the first  found hook.  This means we already know of one hook, but to simplify the  code we get that one again here.  Above we only know the name not the  address.  Hence the "- 1" in "i = idx - 1" (to go back one function name).  Our "namelen" variable already contains the full length of the first found  hook - this is the length of "name", plus N extra characters.  The following  are all valid, and may occur when orders are played with:  @yH_OnX@  @yH_OnX@1  @yH_OnX@01  @yH_OnX@024  @yH_OnX@ZZZ  @yH_OnX@999@024  If we want to get the EXACT space taken up by all these hook names we would  need to get the string of the name in this function then measure it.  There  is really no point in doing this - if we have a second we will always have  enough space for our new names.  Instead, we assume that they are all just  @yH_OnX@  And add on that minimum length accordingly (plus 1 for the NULL character).  This length is used if the original callback doesn't exist but hooks do.  In  that case we need to add the callback to the AMX header, and there is a tiny  chance that the original name will be longer than one hook's name.  In that  case, having two or more hooks will (AFAIK) always ensure that we have  enough space to write the longer name.  If there is only one hook, no original function, and the name of the hook is  shorter than the name of the original function then we have an issue and  will have to do something else instead.  </remarks> 
		</member>
		<member name="M:Hooks_GetDefaultReturn" syntax="Hooks_GetDefaultReturn(name[])">
			<stacksize value="9"/>
			<referrer name="Hooks_GenerateCode"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="CallFunction"/>
			<dependency name="Hooks_MakeShortName"/>
			<dependency name="strins"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [64] </paraminfo>
				The function to get the default return of.
			</param>
			  <returns>  The default return for a callback, normally 1.  </returns> 
		</member>
		<member name="M:Hooks_GetFunctionWritePoint" syntax="Hooks_GetFunctionWritePoint(name[], &amp;write)">
			<stacksize value="8"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="true"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The function to get the address pointer of.
			</param>
			<param name="write">
				<paraminfo> &amp; </paraminfo>
				Destination variable.
			</param>
			    <returns>  The address at which this function's pointer is stored in the AMX header, if  the function exists of course.  </returns> 
		</member>
		<member name="M:Hooks_GetPointerRewrite" syntax="Hooks_GetPointerRewrite(hooks[], num, &amp;ptr, &amp;next, name[], nlen)">
			<stacksize value="39"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="AMX_WriteString"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_GetStubEntry"/>
			<dependency name="OP_JUMP"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<param name="hooks">
				<paraminfo> [] </paraminfo>
				All the prehooks for this callback.
			</param>
			<param name="num">
				The number of prehooks.
			</param>
			<param name="ptr">
				<paraminfo> &amp; </paraminfo>
				A pointer to write the new stub address to.
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				The pointer for the function called after y_hooks.
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The name of the callback being processed.
			</param>
			<param name="nlen">
				Space available in the header to write text in.
			</param>
			           
		</member>
		<member name="M:Hooks_GetPreHooks" syntax="Hooks_GetPreHooks(preloads[][], precount, name[], hooks[], &amp;count)">
			<stacksize value="73"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="AMX_GetEntry"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="E_PRE_HOOK_NAME"/>
			<dependency name="Hooks_MakeShortName"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="preloads">
				<paraminfo> [][17] </paraminfo>
				Names of libraries that come before y_hooks.
			</param>
			<param name="precount">
				Number of pre libraries.
			</param>
			<param name="name">
				<paraminfo> [64] </paraminfo>
				Name of the callback.
			</param>
			<param name="hooks">
				<paraminfo> [] </paraminfo>
				Destination in which to store the headers.
			</param>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of headers found.
			</param>
			          <remarks>  Finds all the AMX file headers for functions with a similar name to the  given callback that should be called before (or near) the given callback.  </remarks> 
		</member>
		<member name="M:Hooks_GetPreloadLibraries" syntax="Hooks_GetPreloadLibraries(preloads[][], &amp;precount, size)">
			<stacksize value="20"/>
			<referrer name="Hooks_DoAllHooks"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_ReadString"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="CallFunction"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_PRE_HOOK"/>
			<dependency name="E_PRE_HOOK_NAME"/>
			<dependency name="E_PRE_HOOK_VALUE"/>
			<dependency name="Hooks_InvalidateName"/>
			<dependency name="strunpack"/>
			<param name="preloads">
				<paraminfo> [][17] </paraminfo>
				Desination in which to store all the preloads.
			</param>
			<param name="precount">
				<paraminfo> &amp; </paraminfo>
				Number of found preload libraries.
			</param>
			<param name="size">
				Maximum number of libraries to store.
			</param>
			      <remarks>  Some includes, like "fixes.inc" and anti-cheats MUST come before all other  includes in order for everything to function correctly (at least fixes.inc  must).  This function looks for these definitions:  PRE_HOOK(FIXES)  Which tell y_hooks that any "FIXES_" prefixed callbacks are part of one of  these chains.  </remarks> 
		</member>
		<member name="M:Hooks_GetStubEntry" syntax="Hooks_GetStubEntry(stub)">
			<stacksize value="30"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmGetNumOperands"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_SWITCH"/>
			<param name="stub">
				Starting address of the function.
			</param>
			  <returns>  The address at which the actual code in this function starts.  </returns>  <remarks>  This handles three cases.  Regular functions end instantly as found.  Functions that start with a switch (even before "PROC") are assumed to be  state-based functions, and we find the most likely state to be used (i.e. we  remove all future state changes).  </remarks> 
		</member>
		<member name="M:Hooks_InvalidateName" syntax="Hooks_InvalidateName(entry)">
			<stacksize value="5"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="VA_OnScriptInit"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<param name="entry">
				The public function slot to destroy.
			</param>
			  <remarks>  Basically, once we know a function has been included, wipe it from the AMX  header.  </remarks> 
		</member>
		<member name="M:Hooks_IsolateName" syntax="Hooks_IsolateName(name[])">
			<stacksize value="138"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="Debug_Print0"/>
			<dependency name="false"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="unpack"/>
			<dependency name="unpack"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
				The string to get the hooked function name from.
			</param>
			  <returns>  The input string without y_hooks name decorations.  </returns> 
		</member>
		<member name="M:Hooks_MakeLongName" syntax="Hooks_MakeLongName(name[])">
			<stacksize value="10"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_LONG"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MIN"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_SHORT"/>
			<dependency name="Hooks_MakeShortName"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsShortOrder"/>
			<dependency name="false"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<param name="name">
				<paraminfo> [64] </paraminfo>
				Function name to modify.
			</param>
			  <remarks>  Expands all name parts like "CP" and "Obj" to their full versions (in this  example "Checkpoint" and "Object").  </remarks> 
		</member>
		<member name="M:Hooks_MakeShortName" syntax="Hooks_MakeShortName(name[])">
			<stacksize value="10"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_LONG"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_SHORT"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsLongOrder"/>
			<dependency name="false"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="name">
				<paraminfo> [64] </paraminfo>
				Function name to modify.
			</param>
			  <remarks>  Compresses function names when required to fit within 32 characters  according to well defined rules (see "YSI_g_sReplacements").  </remarks> 
		</member>
		<member name="M:Hooks_NumArgs" syntax="Hooks_NumArgs()">
			<stacksize value="1"/>
			<referrer name="Inline_OnAsmError"/>
			<referrer name="I@K"/>
			<referrer name="I@L"/>
			<referrer name="Dialog_Open"/>
		</member>
		<member name="M:Hooks_SortPublics" syntax="Hooks_SortPublics()">
			<stacksize value="9"/>
			<referrer name="Hooks_DoAllHooks"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_NATIVES"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="Hooks_ComparePublics"/>
			<dependency name="Hooks_CountInvalidPublics"/>
			<dependency name="ResetStaticAmxHeader"/>
			<remarks>  Goes through the whole of the public functions table and sorts them all in  to alphabetical order.  This is done as we move and rename some so we need  to fix the virtual machine's binary search.  </remarks> 
		</member>
		<member name="M:Hooks_SortReplacements" syntax="Hooks_SortReplacements()">
			<stacksize value="6"/>
			<referrer name="VA_OnScriptInit"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MIN"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsLongOrder"/>
			<dependency name="YSI_g_sReplacementsShortOrder"/>
			<remarks>  Once all the replacement strings have been found, sort them by the length of  the short versions of the strings.  This is so that the longest (and special  case, e.g. "DynamicCP"-> "DynamicCP") replacements are always done first.  </remarks> 
		</member>
		<member name="M:Hooks_WriteFunction" syntax="Hooks_WriteFunction(pointers[], size, ret, skipable)">
			<stacksize value="29"/>
			<referrer name="Hooks_GenerateCode"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_Read"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitAnd"/>
			<dependency name="AsmEmitCall"/>
			<dependency name="AsmEmitInvert"/>
			<dependency name="AsmEmitJsgeqRel"/>
			<dependency name="AsmEmitJslessRel"/>
			<dependency name="AsmEmitJumpRel"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitLoadSAlt"/>
			<dependency name="AsmEmitMoveAlt"/>
			<dependency name="AsmEmitMovePri"/>
			<dependency name="AsmEmitMovs"/>
			<dependency name="AsmEmitOr"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="AsmEmitStorSPri"/>
			<dependency name="AsmEmitSub"/>
			<dependency name="AsmEmitXchg"/>
			<dependency name="AsmEmitZeroAlt"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="CGen_UseCodeSpace"/>
			<dependency name="Debug_Print0"/>
			<param name="pointers">
				<paraminfo> [] </paraminfo>
				The hooks to link together.
			</param>
			<param name="size">
				The number of functions in the array.
			</param>
			<param name="ret">
				The default return.
			</param>
			<param name="skipable">
				Can future hooks be ignored on -1?
			</param>
			        <returns>  The number of bytes written to memory.  </returns>  <remarks>  Generate some new code, very nicely :D.  </remarks> 
		</member>
		<member name="M:I@E" syntax="I@E(s[])">
			<stacksize value="53"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmContext_nip"/>
			<dependency name="DisasmContext_start_ip"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="GetCurrentFrameParameter"/>
			<dependency name="GetCurrentFramePreviousFrame"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="GetFrameLocalSize"/>
			<dependency name="GetFrameParameterSize"/>
			<dependency name="GetFramePreviousFrame"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="YSI_g_sCurInlineEntry"/>
			<dependency name="YSI_g_sCurInlineLocals"/>
			<dependency name="YSI_g_sCurInlineParams"/>
			<dependency name="YSI_g_sCurInlinePointer"/>
			<dependency name="YSI_g_sPrevInlineFunc"/>
			<dependency name="YSI_g_sPrevJumpOver"/>
			<dependency name="YSI_g_scError"/>
			<dependency name="ref"/>
			<dependency name="strfind"/>
			<param name="s">
				<paraminfo> [] </paraminfo>
				The array to store an inline function's data in.
			</param>
			  <param name="constFunc">Should this function copy the stack back?</param>  <remarks>  AKA. Inline_Entry  This function gets the start of an inline function's code block.  It then  removes itself from the compiled code so that it can never be called agian.  If "constFunc" is 3, copy the stack back, if it isn't don't.  </remarks> 
		</member>
		<member name="M:I@F" syntax="I@F()">
			<stacksize value="29"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_JZER"/>
			<dependency name="YSI_g_sCurInlineCode"/>
			<dependency name="YSI_g_sCurInlineLoop"/>
			<dependency name="YSI_g_scError"/>
			<remarks>  AKA. Inline_Allocator.  This function determines the exact address of the start of the main inline  function container loop.  That is, the label that things like "continue"  jump to so that we know how much space we have to play with and where it is.  </remarks> 
		</member>
		<member name="M:I@K" syntax="I@K(...)">
			<stacksize value="3"/>
			<dependency name="Hooks_NumArgs"/>
			<param name="...">
			</param>
		</member>
		<member name="M:I@L" syntax="I@L(constFunc, ...)">
			<stacksize value="57"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_Write"/>
			<dependency name="ASM_ERROR_SPACE"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="AsmEmitAddrAlt"/>
			<dependency name="AsmEmitAddrPri"/>
			<dependency name="AsmEmitLoadSAlt"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitLrefSAlt"/>
			<dependency name="AsmEmitLrefSPri"/>
			<dependency name="AsmEmitMovs"/>
			<dependency name="AsmEmitNop"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPushAdr"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSrefSAlt"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorSPri"/>
			<dependency name="AsmEmitSysreq"/>
			<dependency name="AsmEmitZeroPri"/>
			<dependency name="AsmEmitZeroS"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="AsmSetErrorHandler"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmDecodeInsn"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperand"/>
			<dependency name="DisasmInit"/>
			<dependency name="GetCurrentFramePreviousFrame"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="GetFrameLocalSize"/>
			<dependency name="GetPublicAddressFromName"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_JZER"/>
			<dependency name="SetCurrentFrameReturn"/>
			<dependency name="YSI_g_sCurInlineCode"/>
			<dependency name="YSI_g_sCurInlineEntry"/>
			<dependency name="YSI_g_sCurInlineLocals"/>
			<dependency name="YSI_g_sCurInlineLoop"/>
			<dependency name="YSI_g_sCurInlineParams"/>
			<dependency name="YSI_g_sCurInlinePointer"/>
			<dependency name="YSI_g_sJumpAddress"/>
			<dependency name="YSI_g_sRequiredSpace"/>
			<dependency name="YSI_g_scError"/>
			<dependency name="cellmax"/>
			<dependency name="getarg"/>
			<param name="constFunc">
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:IPToInt" syntax="IPToInt(ip[])">
			<stacksize value="5"/>
			<referrer name="OnPlayerConnect"/>
			<dependency name="strval"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
				Dot notation IP to convert to an integer.
			</param>
			 
		</member>
		<member name="M:IS_IN_RANGE" syntax="IS_IN_RANGE(value, lower, upper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="value">
				The number to compare.
			</param>
			<param name="lower">
				The lower limit.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			      <returns>  Is the value in the given range.  </returns>  <remarks>  Equivalent to:  <code>		(%1) &lt;= (%0) &lt; (%2)</code>  </remarks> 
		</member>
		<member name="M:InitFly" syntax="InitFly(playerid)">
			<stacksize value="1"/>
			<referrer name="resetVars"/>
			<dependency name="OnFly"/>
			<dependency name="false"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:InitOpcodeTable" syntax="InitOpcodeTable()">
			<stacksize value="5"/>
			<referrer name="RelocateOpcode"/>
			<referrer name="UnrelocateOpcode"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="RelocateOpcodeNow"/>
			<dependency name="opcode_table"/>
			<dependency name="opcode_table_is_ready"/>
			<dependency name="true"/>
		</member>
		<member name="M:Inline_DecodeComplex" syntax="Inline_DecodeComplex(from[], &amp;at, &amp;len)">
			<stacksize value="3"/>
			<param name="from">
				<paraminfo> [] </paraminfo>
				Array of variable types.
			</param>
			<param name="at">
				<paraminfo> &amp; </paraminfo>
				Type slot.
			</param>
			<param name="len">
				<paraminfo> &amp; </paraminfo>
				Return for array sizes.
			</param>
			      <returns>  The next variable type stored in the bit array, and the length of arrays.  </returns>  <remarks>  Returns data from a bit array when the parameter could be basic (variable or  reference), or an array with a length (includes strings).  This requries far  more complex code to decode as the lengths may span multiple cells, types  can't because they are always 2 bits and always start on an even bit.  </remarks> 
		</member>
		<member name="M:Inline_DecodeSimple" syntax="Inline_DecodeSimple(from[], at)">
			<stacksize value="1"/>
			<param name="from">
				<paraminfo> [] </paraminfo>
				Array of variable types.
			</param>
			<param name="at">
				Type slot.
			</param>
			    <returns>  The next variable type stored in the bit array.  </returns>  <remarks>  Returns data from a bit array when it is known that only basic types are  stored (i.e. no arrays with length parameters).  </remarks> 
		</member>
		<member name="M:Inline_EncodeFormatString" syntax="Inline_EncodeFormatString(str[], ret[])">
			<stacksize value="8"/>
			<referrer name="Callback_Get"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ret">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:Inline_OnAsmError" syntax="Inline_OnAsmError(ctx[], error)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="AMX_BASE_ADDRESS"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_ADDRESS"/>
			<dependency name="AMX_Write"/>
			<dependency name="ASM_ERROR_OPCODE"/>
			<dependency name="ASM_ERROR_OPERAND"/>
			<dependency name="ASM_ERROR_SPACE"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmContext_buffer_size"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmEmitNop"/>
			<dependency name="AsmGetError"/>
			<dependency name="AsmGetPreviousWriteOffset"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Hooks_NumArgs"/>
			<dependency name="YSI_g_sCurInlineCode"/>
			<dependency name="YSI_g_sJumpAddress"/>
			<dependency name="YSI_g_sRequiredSpace"/>
			<dependency name="cellmax"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
			</param>
		</member>
		<member name="M:Inline_Reset" syntax="Inline_Reset(callback[])">
			<stacksize value="1"/>
			<referrer name="Callback_Get"/>
			<dependency name="E_CALLBACK_DATA_ALLOC"/>
			<dependency name="E_CALLBACK_DATA_FORMAT"/>
			<dependency name="E_CALLBACK_DATA_OFFSET"/>
			<dependency name="E_CALLBACK_DATA_POINTER"/>
			<param name="callback">
				<paraminfo> [5] </paraminfo>
			</param>
		</member>
		<member name="M:InsertCarDS" syntax="InsertCarDS(playerid, model)">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DSModels"/>
			<dependency name="DealerCar"/>
			<dependency name="DealerCarType"/>
			<dependency name="DealerID"/>
			<dependency name="DebugVehicles"/>
			<dependency name="DebugVehicles"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@PlayerVehicles"/>
			<dependency name="Iter_Single@TotalPlayerVehicles"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="Iterator@TotalPlayerVehicles"/>
			<dependency name="SelectedCar"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="cache_insert_id"/>
			<dependency name="dPrice"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gString"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pinDealer"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAngle"/>
			<dependency name="pvCarPlate"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvFuel"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvInterior"/>
			<dependency name="pvLock"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOwnerID"/>
			<dependency name="pvPaintJob"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="pvVirtualWorld"/>
			<dependency name="pvX"/>
			<dependency name="pvY"/>
			<dependency name="pvZ"/>
			<dependency name="random"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_format"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="model">
			</param>
		</member>
		<member name="M:InsertEmail" syntax="InsertEmail(playerid, from[], text[], type)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="pc_cmd_insertemail"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="from">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:InterpolateCameraLookAt" syntax="InterpolateCameraLookAt(playerid, FromX, FromY, FromZ, ToX, ToY, ToZ, time, cut)">
			<attribute name="native"/>
			<referrer name="TimerTutorial"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
			</param>
			<param name="FromX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="FromY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="FromZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ToX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ToY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ToZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="cut">
			</param>
		</member>
		<member name="M:InterpolateCameraPos" syntax="InterpolateCameraPos(playerid, FromX, FromY, FromZ, ToX, ToY, ToZ, time, cut)">
			<attribute name="native"/>
			<referrer name="TimerTutorial"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
			</param>
			<param name="FromX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="FromY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="FromZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ToX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ToY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ToZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="cut">
			</param>
		</member>
		<member name="M:InterpolateColour" syntax="InterpolateColour(startcolor, endcolor, value, maxvalue, minvalue)">
			<stacksize value="3"/>
			<param name="startcolor">
				One of the two colours.
			</param>
			<param name="endcolor">
				The other of the two colours.
			</param>
			<param name="value">
				The interpolation value between the endpoints.
			</param>
			<param name="maxvalue">
				One of the two numbers.
			</param>
			<param name="minvalue">
				The other of the two numbers.
			</param>
			<summary>  InterpolateColour(startcolor, endcolor, value, maxvalue, minvalue = 0);  </summary>            <remarks>  This function takes two endpoint values (minvalue and maxvalue, with  minvalue defaulting to 0), along with a third value (value) whose distance  between the two endpoints is calculated (as a percentage).  This percentage  value is then applied to the two colours given to find a third colour at  some point between those two colours.  For example, if the endpoints given are "0" and "10", and the value given is  "3", then that is "30%" of the way between the two endpoints.  We therefore  want to find a colour that is 30% of the way between the two given colours.  </remarks> 
		</member>
		<member name="M:IsLeapYear" syntax="IsLeapYear(year)">
			<stacksize value="1"/>
			<referrer name="TimestampToDate"/>
			<referrer name="DateToTimestamp"/>
			<param name="year">
			</param>
		</member>
		<member name="M:IsLinux" syntax="IsLinux()">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="GetOS"/>
			<dependency name="OS_LINUX"/>
		</member>
		<member name="M:IsNumeric" syntax="IsNumeric(string[])">
			<stacksize value="5"/>
			<referrer name="CheckerBigInt"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_gotojob"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsOpcodeValid" syntax="IsOpcodeValid(opcode)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="AsmEmitPadding"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerAiming" syntax="IsPlayerAiming(playerid)">
			<stacksize value="5"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="e_bAiming"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerBurning" syntax="IsPlayerBurning(playerid)">
			<stacksize value="5"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="e_bBurning"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerConnected" syntax="IsPlayerConnected(playerid)">
			<attribute name="native"/>
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<referrer name="Fly"/>
			<referrer name="GetPlayerID"/>
			<referrer name="SetPlayerToFactionColor"/>
			<referrer name="returnNeededPoints"/>
			<referrer name="FishingTimer"/>
			<referrer name="resetQuest"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInAnyVehicle" syntax="IsPlayerInAnyVehicle(playerid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="pc_cmd_carhand"/>
			<referrer name="pc_cmd_lifejump"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_exhaust"/>
			<referrer name="pc_cmd_rcarjack1"/>
			<referrer name="pc_cmd_lcarjack1"/>
			<referrer name="pc_cmd_rcarjack2"/>
			<referrer name="pc_cmd_lcarjack2"/>
			<referrer name="pc_cmd_hoodfrisked"/>
			<referrer name="pc_cmd_lightcig"/>
			<referrer name="pc_cmd_tapcig"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_clearanim"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_box"/>
			<referrer name="pc_cmd_lowthrow"/>
			<referrer name="pc_cmd_highthrow"/>
			<referrer name="pc_cmd_leftslap"/>
			<referrer name="pc_cmd_handsup"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_laugh"/>
			<referrer name="pc_cmd_lookout"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_crossarms"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_vomit"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_frisked"/>
			<referrer name="pc_cmd_exhausted"/>
			<referrer name="pc_cmd_injured"/>
			<referrer name="pc_cmd_slapass"/>
			<referrer name="pc_cmd_deal"/>
			<referrer name="pc_cmd_dealstance"/>
			<referrer name="pc_cmd_crack"/>
			<referrer name="pc_cmd_wank"/>
			<referrer name="pc_cmd_salute"/>
			<referrer name="pc_cmd_gro"/>
			<referrer name="pc_cmd_sup"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_push"/>
			<referrer name="pc_cmd_akick"/>
			<referrer name="pc_cmd_lowbodypush"/>
			<referrer name="pc_cmd_headbutt"/>
			<referrer name="pc_cmd_pee"/>
			<referrer name="pc_cmd_koface"/>
			<referrer name="pc_cmd_kostomach"/>
			<referrer name="pc_cmd_kiss"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_lay2"/>
			<referrer name="pc_cmd_hitch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_medic"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_sit"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_bomb"/>
			<referrer name="pc_cmd_getarrested"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_fucku"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_dance"/>
			<referrer name="pc_cmd_jumpwater"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerInArea" syntax="IsPlayerInArea(playerid, MinX, MinY, MaxX, MaxY)">
			<stacksize value="9"/>
			<referrer name="GetPlayerCityLocation"/>
			<referrer name="pc_cmd_fish"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<param name="playerid">
			</param>
			<param name="MinX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="MinY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="MaxX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="MaxY">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerInRangeOfPoint" syntax="IsPlayerInRangeOfPoint(playerid, range, x, y, z)">
			<attribute name="native"/>
			<referrer name="IsPlayerNearVending"/>
			<referrer name="IsPlayerNearGarage"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_fdeposit"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="range">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerInTurf" syntax="IsPlayerInTurf(playerid, turfid)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="TimerWar"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="tMaxX"/>
			<dependency name="tMaxY"/>
			<dependency name="tMinX"/>
			<dependency name="tMinY"/>
			<dependency name="true"/>
			<dependency name="turfInfo"/>
			<param name="playerid">
			</param>
			<param name="turfid">
			</param>
		</member>
		<member name="M:IsPlayerInVehicle" syntax="IsPlayerInVehicle(playerid, vehicleid)">
			<attribute name="native"/>
			<referrer name="Callback_GetDriver"/>
			<referrer name="IsVehicleOccupied"/>
			<referrer name="IsSeatTaked"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsPlayerInZone" syntax="IsPlayerInZone(playerid, zone[])">
			<stacksize value="35"/>
			<dependency name="GetPlayer3DZone"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="zone">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsPlayerJumping" syntax="IsPlayerJumping(playerid)">
			<stacksize value="10"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerKeys"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerNPC" syntax="IsPlayerNPC(playerid)">
			<attribute name="native"/>
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<referrer name="_y_utils_OnPlayerConnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerNearGarage" syntax="IsPlayerNearGarage(playerid, type)">
			<stacksize value="8"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="e_VEHICLE_GARAGE_TYPE"/>
			<dependency name="e_VEHICLE_GARAGE_X"/>
			<dependency name="e_VEHICLE_GARAGE_Y"/>
			<dependency name="e_VEHICLE_GARAGE_Z"/>
			<dependency name="s_aVehicleGarages"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:IsPlayerNearVending" syntax="IsPlayerNearVending(playerid, type)">
			<stacksize value="8"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="e_VENDING_MACHINE_TYPE"/>
			<dependency name="e_VENDING_MACHINE_X"/>
			<dependency name="e_VENDING_MACHINE_Y"/>
			<dependency name="e_VENDING_MACHINE_Z"/>
			<dependency name="s_aVendingMachines"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:IsPlayerPaused" syntax="IsPlayerPaused(playerid)">
			<stacksize value="5"/>
			<referrer name="Timers"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="e_bPaused"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerSkydiving" syntax="IsPlayerSkydiving(playerid)">
			<stacksize value="3"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerWeapon"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPlayerSprayingVehicle" syntax="IsPlayerSprayingVehicle(playerid, vehicleid)">
			<stacksize value="13"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="Callback_IsVehicleInPoint"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsVehicleStreamedIn"/>
			<dependency name="degrees"/>
			<dependency name="floatcos"/>
			<dependency name="floatsin"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsPlayerSwimming" syntax="IsPlayerSwimming(playerid)">
			<stacksize value="3"/>
			<referrer name="OnPlayerUpdate"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:IsPrintableAscii" syntax="IsPrintableAscii(c)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="ToPrintableAscii"/>
			<param name="c">
			</param>
		</member>
		<member name="M:IsSeatTaked" syntax="IsSeatTaked(vehicleid, seatid)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_goto"/>
			<dependency name="GetPlayerVehicleSeat"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iterator@Player"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
			<param name="seatid">
			</param>
		</member>
		<member name="M:IsTagIDEmpty" syntax="IsTagIDEmpty(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
			</param>
		</member>
		<member name="M:IsTagIDStrong" syntax="IsTagIDStrong(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="IsTagIndexStrong"/>
			<param name="tag">
			</param>
		</member>
		<member name="M:IsTagIDWeak" syntax="IsTagIDWeak(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="IsTagIndexWeak"/>
			<param name="tag">
			</param>
		</member>
		<member name="M:IsTagIndexEmpty" syntax="IsTagIndexEmpty(tag)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
			</param>
		</member>
		<member name="M:IsTagIndexStrong" syntax="IsTagIndexStrong(tag)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetTagInfo"/>
			<dependency name="IsTagIDStrong"/>
			<param name="tag">
			</param>
		</member>
		<member name="M:IsTagIndexWeak" syntax="IsTagIndexWeak(tag)">
			<tagname value="bool"/>
			<stacksize value="7"/>
			<dependency name="AMX_FUNCSTUBNT"/>
			<dependency name="AMX_FUNCSTUBNT_ADDRESS"/>
			<dependency name="GetTagInfo"/>
			<dependency name="IsTagIDWeak"/>
			<param name="tag">
			</param>
		</member>
		<member name="M:IsTagNameEmpty" syntax="IsTagNameEmpty(tag[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsTagNameStrong" syntax="IsTagNameStrong(tag[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsTagNameWeak" syntax="IsTagNameWeak(tag[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="tag">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:IsTrailerAttachedToVehicle" syntax="IsTrailerAttachedToVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsValidActor" syntax="IsValidActor(actorid)">
			<attribute name="native"/>
			<referrer name="@yH_OnScriptInit@002"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:IsValidMapZone" syntax="IsValidMapZone(id)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="GetMapZoneName"/>
			<referrer name="GetMapZoneSoundID"/>
			<referrer name="GetMapZoneAreaCount"/>
			<referrer name="GetMapZoneAreaPos"/>
			<referrer name="pc_cmd_service"/>
			<param name="id">
				<paraminfo>MapZone </paraminfo>
			</param>
		</member>
		<member name="M:IsValidObject" syntax="IsValidObject(objectid)">
			<attribute name="native"/>
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="removeFunction"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:IsValidVehicle" syntax="IsValidVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="resetVars"/>
			<referrer name="examenFail"/>
			<referrer name="ModVehicle"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="TimerCarFind"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsVehicleOccupied" syntax="IsVehicleOccupied(vehicleid)">
			<stacksize value="5"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_vehicles"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iterator@PlayerInVehicle"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:IsVehicleStreamedIn" syntax="IsVehicleStreamedIn(vehicleid, forplayerid)">
			<attribute name="native"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:IsWindows" syntax="IsWindows()">
			<tagname value="bool"/>
			<stacksize value="3"/>
			<dependency name="GetOS"/>
			<dependency name="OS_WINDOWS"/>
		</member>
		<member name="M:Iter_ActorDo" syntax="Iter_ActorDo(add, actorid)">
			<stacksize value="7"/>
			<referrer name="Iter_ActorDo_"/>
			<referrer name="Iter_ActorDo@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Actor"/>
			<dependency name="Iterator@Actor"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_ActorDo@" syntax="Iter_ActorDo@(add, actorid, __m)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Iter_ActorDo"/>
			<dependency name="_@"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="actorid">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:Iter_ActorDo_" syntax="Iter_ActorDo_(add, actorid)">
			<stacksize value="7"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_DestroyActor"/>
			<dependency name="I@"/>
			<dependency name="Iter_ActorDo"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_Add" syntax="Iter_Add(iter[], value)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to add the data to.
			</param>
			<param name="value">
				Value to add to the iterator.
			</param>
			    <remarks>  Wrapper for Iter_AddInternal.  native Iter_Add(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_AddStaticVehicle" syntax="Iter_AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2)">
			<stacksize value="10"/>
			<referrer name="CB_AddStaticVehicle"/>
			<dependency name="AddStaticVehicle"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iter_VehicleDo_"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="J@"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:Iter_AddStaticVehicleEx" syntax="Iter_AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, angle, color1, color2, respawn_delay, addsiren)">
			<stacksize value="12"/>
			<referrer name="CB_AddStaticVehicleEx"/>
			<dependency name="AddStaticVehicleEx"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iter_VehicleDo_"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="J@"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="spawn_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="spawn_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:Iter_Add_InternalC" syntax="Iter_Add_InternalC(&amp;count, array[], size, value)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="@yH_OnPlayerConnect@002"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_CreateActor"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="mutePlayer"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="@yH_OnPlayerConnect@005"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadTurfs"/>
			<referrer name="LoadFactions"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="LoadClans"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="checkPanel"/>
			<referrer name="assignCheckpointID"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="LoadGasCan"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="LoadDSVehicles"/>
			<referrer name="InsertCarDS"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Array start index.
			</param>
			<param name="value">
				Item to add.
			</param>
			        <remarks>  Adds a value to a given iterator set.  Now detects when you try and add the  last item multiple times, as well as all the other items.  Now simplified  even further with the new internal representation.  The modulo code is for  iterator reversal.  </remarks> 
		</member>
		<member name="M:Iter_Add_InternalD" syntax="Iter_Add_InternalD(&amp;count, array[], start, size, value)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_All_Internal" syntax="Iter_All_Internal(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_Alloc" syntax="Iter_Alloc(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the first free slot in.
			</param>
			  <remarks>  Finds an empty slot in an iterator, adds that slot to the iterator, and  returns the now added slot.  native Iter_Alloc(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Alloc_InternalC" syntax="Iter_Alloc_InternalC(&amp;count, array[], size)">
			<stacksize value="4"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Array start index.
			</param>
			      <remarks>  Finds the first free slot in the iterator and add it.  </remarks> 
		</member>
		<member name="M:Iter_Alloc_InternalD" syntax="Iter_Alloc_InternalD(&amp;count, array[], start, size)">
			<stacksize value="4"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Begin" syntax="Iter_Begin(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the start of.
			</param>
			  <remarks>  Gets a point BEFORE the start of the iterator (the theoretical beginning).  </remarks> 
		</member>
		<member name="M:Iter_Clear" syntax="Iter_Clear(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to empty.
			</param>
			  <remarks>  Wrapper for Iter_Clear_Internal.  Although it doesn't fit my normal strict spacing, the end of "B" is correct,  namely: "_:F@s(%0),%2)".  This uses the "_:%0,)" macro to consume  a trailing comma when nothing is given in "%2", so I can't have a leading  space sadly.  "- 2" in place of the normal "- 1" is CORRECT!  native Iter_Clear(IteratorArray:Name[]&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Clear_InternalC" syntax="Iter_Clear_InternalC(array[], size, entries, lst, ...)">
			<stacksize value="5"/>
			<referrer name="@yH_OnScriptInit@002"/>
			<referrer name="pc_cmd_despawncars"/>
			<dependency name="setarg"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of base array.
			</param>
			<param name="entries">
				Size of the count data.
			</param>
			<param name="lst">
				Last valid index in the iterator array.
			</param>
			<param name="...">
			</param>
			      <param name="count">Number of items in the iterator.</param>  <param name="elems">Number of iterator elements.</param>    <param name="start">Optional single multi-iterator to clear.</param>  <remarks>  Resets an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Clear_InternalD" syntax="Iter_Clear_InternalD(array[], size, entries, elems, counts[], start)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="entries">
			</param>
			<param name="elems">
			</param>
			<param name="counts">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:Iter_Contains" syntax="Iter_Contains(iter[], value)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to check membership of.
			</param>
			<param name="value">
				Value to check.
			</param>
			    <remarks>  Checks if the given value is in the given iterator.  native Iter_Contains(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_Contains_InternalC" syntax="Iter_Contains_InternalC(array[], size, value)">
			<stacksize value="1"/>
			<referrer name="mutePlayer"/>
			<referrer name="isPlayerLogged"/>
			<referrer name="sendToAdmin"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="returnNeededPoints"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_helduty"/>
			<referrer name="pc_cmd_ar"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_skipn"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="sendClanMessage"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_ah"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnVehicleMod"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="value">
				Item to check.
			</param>
			      <remarks>  Checks if this item is in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Contains_InternalD" syntax="Iter_Contains_InternalD(count, array[], size, start, value)">
			<stacksize value="1"/>
			<param name="count">
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="start">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_Count" syntax="Iter_Count(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a random slot from.
			</param>
			  <remarks>  Returns the number of items in this iterator.  native Iter_Count(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_CreateActor" syntax="Iter_CreateActor(modelid, X, Y, Z, Rotation)">
			<stacksize value="8"/>
			<dependency name="CreateActor"/>
			<dependency name="I@"/>
			<dependency name="Iter_ActorDo_"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalActor"/>
			<dependency name="Iterator@LocalActor"/>
			<dependency name="J@"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Rotation">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Iter_CreateVehicle" syntax="Iter_CreateVehicle(modelid, x, y, z, angle, color1, color2, respawn_delay, addsiren)">
			<stacksize value="12"/>
			<referrer name="CB_CreateVehicle"/>
			<dependency name="CreateVehicle"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iter_VehicleDo_"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="J@"/>
			<dependency name="true"/>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="angle">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
			<param name="respawn_delay">
			</param>
			<param name="addsiren">
			</param>
		</member>
		<member name="M:Iter_DestroyActor" syntax="Iter_DestroyActor(actorid)">
			<stacksize value="7"/>
			<dependency name="DestroyActor"/>
			<dependency name="I@"/>
			<dependency name="Iter_ActorDo_"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@LocalActor"/>
			<dependency name="Iterator@LocalActor"/>
			<dependency name="J@"/>
			<dependency name="false"/>
			<param name="actorid">
			</param>
		</member>
		<member name="M:Iter_DestroyVehicle" syntax="Iter_DestroyVehicle(vehicleid)">
			<stacksize value="7"/>
			<referrer name="resetVars"/>
			<referrer name="examenFail"/>
			<referrer name="@yH_OnVehicleDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="CancelJob"/>
			<referrer name="removeFunction"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<dependency name="DestroyVehicle"/>
			<dependency name="I@"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@LocalVehicle"/>
			<dependency name="Iter_VehicleDo_"/>
			<dependency name="Iterator@LocalVehicle"/>
			<dependency name="J@"/>
			<dependency name="false"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_End" syntax="Iter_End(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the end of.
			</param>
			  <remarks>  Gets a point AFTER the end of the iterator (think "MAX_PLAYERS").  </remarks> 
		</member>
		<member name="M:Iter_FastClear" syntax="Iter_FastClear(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to empty.
			</param>
			  <remarks>  Uses a static array copy to blank the iterator instead of a loop.  BROKEN!  native Iter_FastClear(IteratorArray:Name[]&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_First" syntax="Iter_First(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the first valid element in.
			</param>
			  <remarks>  Gets the first element in an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Free" syntax="Iter_Free(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the first free slot in.
			</param>
			  <remarks>  Wrapper for Iter_Free_Internal.  Returns a slot NOT in the current  iterator.  native Iter_Free(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_FreeMulti" syntax="Iter_FreeMulti(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the multi-iterator to get the first free slot in.
			</param>
			  <remarks>  Wrapper for Iter_FreeMulti_Internal.  Returns a slot NOT in the current  multi-iterator.  native Iter_FreeMulti(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_FreeMulti_Internal" syntax="Iter_FreeMulti_Internal(array[], trueSize, start)">
			<stacksize value="2"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				multi-iterator data.
			</param>
			<param name="trueSize">
				Size of the multi-iterator.
			</param>
			<param name="start">
				End [?, since start points are backwards] of the multi-iterator.
			</param>
			      <remarks>  Finds the first free multi index in the multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_Free_Internal" syntax="Iter_Free_Internal(array[], size)">
			<stacksize value="2"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="InsertCarDS"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			    <remarks>  Finds the first free slot in the iterator.  </remarks> 
		</member>
		<member name="M:Iter_Func@Bits" syntax="Iter_Func@Bits(start, data[], size)">
			<stacksize value="6"/>
			<dependency name="Cell_GetLowestBit"/>
			<dependency name="cellbits"/>
			<param name="start">
			</param>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Blanks" syntax="Iter_Func@Blanks(start, data[], size)">
			<stacksize value="6"/>
			<dependency name="Cell_GetLowestBit"/>
			<dependency name="cellbits"/>
			<param name="start">
			</param>
			<param name="data">
				<paraminfo>Bit [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Fib" syntax="Iter_Func@Fib(&amp;iterstart, cur)">
			<stacksize value="1"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
		</member>
		<member name="M:Iter_Func@Filter" syntax="Iter_Func@Filter(cur, val, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="val">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@NonNull" syntax="Iter_Func@NonNull(cur, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Null" syntax="Iter_Func@Null(cur, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_Func@Powers" syntax="Iter_Func@Powers(&amp;iterstart, cur, base)">
			<stacksize value="1"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
			<param name="base">
			</param>
		</member>
		<member name="M:Iter_Func@Random" syntax="Iter_Func@Random(&amp;iterstart, cur, count, min, max)">
			<stacksize value="3"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="iterstart">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="cur">
			</param>
			<param name="count">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:Iter_Func@Range" syntax="Iter_Func@Range(cur, min, max, step)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="cur">
			</param>
			<param name="min">
			</param>
			<param name="max">
			</param>
			<param name="step">
			</param>
		</member>
		<member name="M:Iter_Func@Until" syntax="Iter_Func@Until(cur, val, arr[], size)">
			<stacksize value="1"/>
			<param name="cur">
			</param>
			<param name="val">
			</param>
			<param name="arr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:Iter_GetMulti" syntax="Iter_GetMulti(iter[], value)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to check membership of.
			</param>
			<param name="value">
				Value to check.
			</param>
			    <returns>  Index in which the value is contained in the multi-iterator.  </returns>  <remarks>  Checks if the given value is in the given iterator, and if it is return which index it is contained.  native Iter_GetMulti(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_GetMulti_Internal" syntax="Iter_GetMulti_Internal(array[], trueSize, size, value)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				multi-iterator data.
			</param>
			<param name="trueSize">
				Size of the multi-iterator per index.
			</param>
			<param name="size">
				Size of the multi-iterator.
			</param>
			<param name="value">
				Item to check.
			</param>
			        <returns>  INVALID_ITERATOR_SLOT on failure.  Index of the multi-iterator the value is contained.  </returns>  <remarks>  Checks if this item is in the multi-iterator at all, and if it is returns which index it is in.  </remarks> 
		</member>
		<member name="M:Iter_Index" syntax="Iter_Index(iter[], index, wrap)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a slot in by index.
			</param>
			<param name="index">
				Index.
			</param>
			<param name="wrap">
				<paraminfo>bool </paraminfo>
				Keep going around until a value is found?
			</param>
			      <remarks>  Wrapper for Iter_Index_Internal.  Returns the Nth value in the iterator  (requires looping due to the way iterators are stored and optimised for  loops not direct access).  native Iter_Index(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_Index_Internal" syntax="Iter_Index_Internal(count, array[], start, size, index, wrap)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Array start index.
			</param>
			<param name="size">
				Array size.
			</param>
			<param name="index">
				Index to find Nth value.
			</param>
			<param name="wrap">
				<paraminfo>bool </paraminfo>
				Keep going around until a value is found?
			</param>
			            <remarks>  Allows you to find the Nth value in the iterator.  DO NOT call this in a  loop to get all values - that totally defeats the purpose of "foreach", just  use a normal "foreach" loop with an index counter for that case.  </remarks> 
		</member>
		<member name="M:Iter_Init" syntax="Iter_Init(iter[][])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [][] </paraminfo>
				Name of the iterator array to initialise.
			</param>
			  <remarks>  Wrapper for Iter_Init_Internal.  When <c>__COMPILER_NESTED_ELLIPSIS</c> is  set, this isn't needed because multi-dimensional iterators can be  initialised with the new <c>{{0, 1, ...), ...}</c> feature.  In that case  <c>I@ = 0</c> is called as a <c>void</c> function that does nothing but ends  in a semi-colon (<c>I@</c> is used a lot in YSI as a <c>do nothing</c>  enabler).  <code>native Iter_Init(IteratorArray:Name[]&lt;&gt;);</code>  </remarks> 
		</member>
		<member name="M:Iter_Init_Internal" syntax="Iter_Init_Internal(arr[][], first[], s0, s1, entries)">
			<stacksize value="9"/>
			<dependency name="memcpy"/>
			<param name="arr">
				<paraminfo> [][] </paraminfo>
			</param>
			<param name="first">
				<paraminfo> [] </paraminfo>
				First iterator slot.
			</param>
			<param name="s0">
				Size of first dimension.
			</param>
			<param name="s1">
				Size of second dimension.
			</param>
			<param name="entries">
				Number of start points.
			</param>
			<param name="array">Iterator array to initialise.</param>          <remarks>  Multi-dimensional arrays can't be initialised at compile time, so need to be  done at run time, which is slightly annoying.  </remarks> 
		</member>
		<member name="M:Iter_Last" syntax="Iter_Last(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to
			</param>
			  <remarks>  Gets the last element in an iterator.  Works by getting the previous item  from the one BEFORE the first element (i.e. the one before the sentinel).  </remarks> 
		</member>
		<member name="M:Iter_Next" syntax="Iter_Next(iter[], cur)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the next element in.
			</param>
			<param name="cur">
				The current element.
			</param>
			    <remarks>  Gets the element in an iterator after the current one.  </remarks> 
		</member>
		<member name="M:Iter_None_Internal" syntax="Iter_None_Internal(array[], size, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_OPDCInternal" syntax="Iter_OPDCInternal(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Bot"/>
			<dependency name="Iter_Single@Character"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iterator@Bot"/>
			<dependency name="Iterator@Character"/>
			<dependency name="Iterator@Player"/>
			<param name="playerid">
				Player who left.
			</param>
			  <remarks>  Called AFTER "OnPlayerDisconnect" so that using "Kick" inside a  "foreach" loop doesn't crash the server due to an OOB error.  </remarks> 
		</member>
		<member name="M:Iter_Prev" syntax="Iter_Prev(iter[], cur)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the previous element in.
			</param>
			<param name="cur">
				The current element.
			</param>
			    <remarks>  Gets the element in an iterator before the current one.  Slow.  </remarks> 
		</member>
		<member name="M:Iter_Prev_Internal" syntax="Iter_Prev_Internal(array[], elems, size, slot)">
			<stacksize value="2"/>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="elems">
				Number of elements in the iterator.
			</param>
			<param name="size">
				Size of the iterator.
			</param>
			<param name="slot">
				The current slot.
			</param>
			        <remarks>  Gets the element in an iterator that points to the current element.  </remarks> 
		</member>
		<member name="M:Iter_Random" syntax="Iter_Random(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a random slot from.
			</param>
			  <remarks>  Wrapper for Iter_RandomInternal.  native Iter_Random(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd" syntax="Iter_RandomAdd(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to add a random slot to.
			</param>
			  <remarks>  Wrapper for Iter_RandomAddInternal.  native Iter_RandomAdd(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd_InternalC" syntax="Iter_RandomAdd_InternalC(&amp;count, array[], start)">
			<stacksize value="9"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_RandomFree_InternalC"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			      <param name="slots">Number of multi-iterator values.</param>  <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomAdd_InternalD" syntax="Iter_RandomAdd_InternalD(counts[], array[], size, slots, start, slot)">
			<stacksize value="11"/>
			<dependency name="Iter_Add_InternalD"/>
			<dependency name="Iter_RandomFree_InternalD"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="slots">
			</param>
			<param name="start">
			</param>
			<param name="slot">
			</param>
		</member>
		<member name="M:Iter_RandomFree" syntax="Iter_RandomFree(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get a random unused slot for.
			</param>
			  <remarks>  Wrapper for Iter_RandomFree_Internal.  native Iter_RandomFree(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_InternalC" syntax="Iter_RandomFree_InternalC(count, array[], start)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomAdd_InternalC"/>
			<referrer name="Iter_RandomFree_InternalD"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			      <param name="slots">Number of multi-iterator values.</param>  <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomFree_InternalD" syntax="Iter_RandomFree_InternalD(counts[], array[], start, slots)">
			<stacksize value="7"/>
			<referrer name="Iter_RandomAdd_InternalD"/>
			<dependency name="Iter_RandomFree_InternalC"/>
			<param name="counts">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="slots">
			</param>
		</member>
		<member name="M:Iter_RandomRemove" syntax="Iter_RandomRemove(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to remove a random slot from.
			</param>
			  <remarks>  Wrapper for Iter_RandomRemoveInternal.  native Iter_RandomRemove(Iterator:Name&lt;&gt;);  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove_InternalC" syntax="Iter_RandomRemove_InternalC(&amp;count, array[], start)">
			<stacksize value="9"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Remove_InternalC"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			      <param name="slots">Number of multi-iterator values.</param>  <remarks>  Returns a random unused value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_RandomRemove_InternalD" syntax="Iter_RandomRemove_InternalD(&amp;count, array[], size, start)">
			<stacksize value="10"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Remove_InternalD"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:Iter_Random_Internal" syntax="Iter_Random_Internal(count, array[], start)">
			<stacksize value="3"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<referrer name="pc_cmd_gethit"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="count">
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="start">
				Size of the iterator.
			</param>
			      <remarks>  Returns a random value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Remove" syntax="Iter_Remove(iter[], value)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to remove data from.
			</param>
			<param name="value">
				Data to remove.
			</param>
			    <remarks>  Wrapper for Iter_RemoveInternal.  native Iter_Remove(Iterator:Name&lt;&gt;, value);  </remarks> 
		</member>
		<member name="M:Iter_Remove_InternalC" syntax="Iter_Remove_InternalC(&amp;count, array[], size, value)">
			<stacksize value="9"/>
			<referrer name="Iter_RandomRemove_InternalC"/>
			<referrer name="Iter_OPDCInternal"/>
			<referrer name="Iter_ActorDo"/>
			<referrer name="Iter_DestroyActor"/>
			<referrer name="Iter_VehicleDo"/>
			<referrer name="Iter_DestroyVehicle"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="checkPanel"/>
			<referrer name="removeFunction"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="TimerJail"/>
			<referrer name="Timers"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="Iter_SafeRemove_InternalC"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				iterator data.
			</param>
			<param name="size">
				Number of iterator elements.
			</param>
			<param name="value">
				Item to remove.
			</param>
			        <remarks>  Removes a value from an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Remove_InternalD" syntax="Iter_Remove_InternalD(&amp;count, array[], start, size, value)">
			<stacksize value="10"/>
			<referrer name="Iter_RandomRemove_InternalD"/>
			<dependency name="Iter_SafeRemove_InternalD"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Iter_SafeRemove" syntax="Iter_SafeRemove(iter[], value, &amp;next)">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to remove data from.
			</param>
			<param name="value">
				Data to remove.
			</param>
			<param name="next">
				<paraminfo> &amp; </paraminfo>
				Container for the pointer to the next element.
			</param>
			      <remarks>  Wrapper for Iter_SafeRemoveInternal.  Common use:  Iter_SafeRemove(iter, i, i);  native Iter_SafeRemove(Iterator:Name&lt;&gt;, value, &amp;next);  </remarks> 
		</member>
		<member name="M:Iter_SafeRemove_InternalC" syntax="Iter_SafeRemove_InternalC(&amp;count, array[], size, value, &amp;last)">
			<stacksize value="1"/>
			<referrer name="Iter_Remove_InternalC"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
				Number of items in the iterator.
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
				Iterator data.
			</param>
			<param name="size">
				Number of iterator elements.
			</param>
			<param name="value">
				Item to remove.
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
				Pointer in which to store the last pointer.
			</param>
			          <remarks>  Removes a value from an iterator safely.  </remarks> 
		</member>
		<member name="M:Iter_SafeRemove_InternalD" syntax="Iter_SafeRemove_InternalD(&amp;count, array[], start, size, value, &amp;last)">
			<stacksize value="1"/>
			<referrer name="Iter_Remove_InternalD"/>
			<dependency name="cellmin"/>
			<param name="count">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="array">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="size">
			</param>
			<param name="value">
			</param>
			<param name="last">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:Iter_Size" syntax="Iter_Size(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the size of.
			</param>
			  <remarks>  Accesses the size of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_Starts" syntax="Iter_Starts(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true starts of.
			</param>
			  <remarks>  Accesses the number of starts in a multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueArray" syntax="Iter_TrueArray(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true array of.
			</param>
			  <remarks>  Accesses the internal array of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueCount" syntax="Iter_TrueCount(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true count of.
			</param>
			  <remarks>  Accesses the internal count of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueMulti" syntax="Iter_TrueMulti(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Multi iterator to get the true count of.
			</param>
			  <remarks>  Accesses the internal count of a multi-iterator.  </remarks> 
		</member>
		<member name="M:Iter_TrueSize" syntax="Iter_TrueSize(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Name of the iterator to get the true size of.
			</param>
			  <remarks>  Accesses the internal size of an iterator.  </remarks> 
		</member>
		<member name="M:Iter_VehicleDo" syntax="Iter_VehicleDo(add, vehicleid)">
			<stacksize value="7"/>
			<referrer name="Iter_VehicleDo_"/>
			<referrer name="Iter_VehicleDo@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Vehicle"/>
			<dependency name="Iterator@Vehicle"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_VehicleDo@" syntax="Iter_VehicleDo@(add, vehicleid, __m)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Iter_VehicleDo"/>
			<dependency name="_@"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
			<param name="__m">
			</param>
		</member>
		<member name="M:Iter_VehicleDo_" syntax="Iter_VehicleDo_(add, vehicleid)">
			<stacksize value="7"/>
			<referrer name="Iter_CreateVehicle"/>
			<referrer name="Iter_AddStaticVehicle"/>
			<referrer name="Iter_AddStaticVehicleEx"/>
			<referrer name="Iter_DestroyVehicle"/>
			<dependency name="I@"/>
			<dependency name="Iter_VehicleDo"/>
			<dependency name="J@"/>
			<dependency name="W@"/>
			<param name="add">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Iter_YieldEnter" syntax="Iter_YieldEnter()">
			<tagname value="bool"/>
			<stacksize value="4"/>
			<dependency name="Debug_Print0"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<remarks>  </remarks> 
		</member>
		<member name="M:Iter_YieldLoop" syntax="Iter_YieldLoop()">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="E_ITER_YIELD_FIRST"/>
			<dependency name="E_ITER_YIELD_STACK_SIZE"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sPtr"/>
			<dependency name="YSI_g_sStackPtr"/>
			<dependency name="false"/>
			<dependency name="memcpy"/>
			<dependency name="true"/>
		</member>
		<member name="M:Iter_YieldReturn" syntax="Iter_YieldReturn(value)">
			<stacksize value="1"/>
			<dependency name="I@"/>
			<dependency name="YSI_gIteratorDepth"/>
			<dependency name="YSI_g_sIteratorStack"/>
			<dependency name="YSI_g_sPtr"/>
			<dependency name="YSI_g_sStackPtr"/>
			<dependency name="memcpy"/>
			<param name="value">
			</param>
		</member>
		<member name="M:Iterator" syntax="Iterator(name)">
			<tagname value="Iterator"/>
			<stacksize value="1"/>
			<param name="name">
			</param>
			<remarks>  Creates a new iterator start/array pair.  </remarks> 
		</member>
		<member name="M:Iterator@Reverse" syntax="Iterator@Reverse(iter[])">
			<stacksize value="1"/>
			<param name="iter">
				<paraminfo>Iterator [] </paraminfo>
				Iterator to run backwards.
			</param>
			  <remarks>  Run an iterator backwards.  </remarks> 
		</member>
		<member name="M:Kick" syntax="Kick(playerid)">
			<attribute name="native"/>
			<referrer name="TrollDetect"/>
			<referrer name="@yH_OnPlayerStateChange@005"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="kickEx"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:KillTimer" syntax="KillTimer(timerid)">
			<attribute name="native"/>
			<referrer name="_Timer_I"/>
			<referrer name="_Timer_D"/>
			<referrer name="_Timer_F"/>
			<referrer name="SSCANF_OnPlayerDisconnect"/>
			<referrer name="Callback_HoldTimer"/>
			<param name="timerid">
			</param>
		</member>
		<member name="M:LinkVehicleToInterior" syntax="LinkVehicleToInterior(vehicleid, interiorid)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<param name="vehicleid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:LoadBusinesses" syntax="LoadBusinesses()">
			<attribute name="public"/>
			<stacksize value="12301"/>
			<dependency name="BIZZ"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="CreateDynamicSphere"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerBusinesses"/>
			<dependency name="Iterator@ServerBusinesses"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="bizArea"/>
			<dependency name="bizBalance"/>
			<dependency name="bizDescription"/>
			<dependency name="bizExtX"/>
			<dependency name="bizExtY"/>
			<dependency name="bizExtZ"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInterior"/>
			<dependency name="bizLocked"/>
			<dependency name="bizOwned"/>
			<dependency name="bizOwner"/>
			<dependency name="bizOwnerID"/>
			<dependency name="bizPickup"/>
			<dependency name="bizPrice"/>
			<dependency name="bizStatic"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="bizType"/>
			<dependency name="bizX"/>
			<dependency name="bizY"/>
			<dependency name="bizZ"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="string_fast"/>
		</member>
		<member name="M:LoadClans" syntax="LoadClans()">
			<attribute name="public"/>
			<stacksize value="45"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerClans"/>
			<dependency name="Iterator@ServerClans"/>
			<dependency name="cClanColor"/>
			<dependency name="cDays"/>
			<dependency name="cID"/>
			<dependency name="cMotd"/>
			<dependency name="cOwnerID"/>
			<dependency name="cRank1"/>
			<dependency name="cRank2"/>
			<dependency name="cRank3"/>
			<dependency name="cRank4"/>
			<dependency name="cRank5"/>
			<dependency name="cRank6"/>
			<dependency name="cRank7"/>
			<dependency name="cSlots"/>
			<dependency name="cTag"/>
			<dependency name="cTotal"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="sscanf"/>
		</member>
		<member name="M:LoadDSVehicles" syntax="LoadDSVehicles()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="DSModels"/>
			<dependency name="DSModels"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@serverModelsDS"/>
			<dependency name="Iterator@serverModelsDS"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dID"/>
			<dependency name="dModel"/>
			<dependency name="dPrice"/>
			<dependency name="dStock"/>
			<dependency name="printf"/>
		</member>
		<member name="M:LoadDsVehs" syntax="LoadDsVehs(playerid)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="pc_cmd_buycar"/>
			<dependency name="DSModels"/>
			<dependency name="Iter_Single@serverModelsDS"/>
			<dependency name="SelectedCar"/>
			<dependency name="SelectedCar"/>
			<dependency name="TotalDealerCars"/>
			<dependency name="dID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadExamCheckpoints" syntax="LoadExamCheckpoints()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ExamenCheckpoints"/>
			<dependency name="Iterator@ExamenCheckpoints"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="dmvID"/>
			<dependency name="dmvX"/>
			<dependency name="dmvY"/>
			<dependency name="dmvZ"/>
			<dependency name="examenInfo"/>
			<dependency name="examenInfo"/>
			<dependency name="print"/>
			<dependency name="printf"/>
		</member>
		<member name="M:LoadFactions" syntax="LoadFactions()">
			<attribute name="public"/>
			<stacksize value="4115"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="FACTION"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerFactions"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="fApps"/>
			<dependency name="fCommands"/>
			<dependency name="fEnterX"/>
			<dependency name="fEnterY"/>
			<dependency name="fEnterZ"/>
			<dependency name="fExitX"/>
			<dependency name="fExitY"/>
			<dependency name="fExitZ"/>
			<dependency name="fID"/>
			<dependency name="fInterior"/>
			<dependency name="fLocked"/>
			<dependency name="fMapIcon"/>
			<dependency name="fMapIconType"/>
			<dependency name="fMaxMembers"/>
			<dependency name="fMinLevel"/>
			<dependency name="fMotd"/>
			<dependency name="fName"/>
			<dependency name="fPickup"/>
			<dependency name="fSkins"/>
			<dependency name="fSkins"/>
			<dependency name="fText"/>
			<dependency name="fType"/>
			<dependency name="factionInfo"/>
			<dependency name="factionInfo"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="string_fast"/>
		</member>
		<member name="M:LoadGasCan" syntax="LoadGasCan()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerGasCan"/>
			<dependency name="Iterator@ServerGasCan"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gBizID"/>
			<dependency name="gFull"/>
			<dependency name="gID"/>
			<dependency name="gX"/>
			<dependency name="gY"/>
			<dependency name="gZ"/>
			<dependency name="gasInfo"/>
			<dependency name="gasInfo"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="updateGasCan"/>
		</member>
		<member name="M:LoadHouses" syntax="LoadHouses()">
			<attribute name="public"/>
			<stacksize value="8280"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="CreateDynamicSphere"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="HOUSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerHouses"/>
			<dependency name="Iterator@ServerHouses"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hArea"/>
			<dependency name="hBalance"/>
			<dependency name="hDescription"/>
			<dependency name="hExtX"/>
			<dependency name="hExtY"/>
			<dependency name="hExtZ"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hLocked"/>
			<dependency name="hOwned"/>
			<dependency name="hOwner"/>
			<dependency name="hOwnerID"/>
			<dependency name="hPickup"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hRentabil"/>
			<dependency name="hRenters"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="hUpgrade"/>
			<dependency name="hX"/>
			<dependency name="hY"/>
			<dependency name="hZ"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="string_fast"/>
		</member>
		<member name="M:LoadJobs" syntax="LoadJobs()">
			<attribute name="public"/>
			<stacksize value="4139"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerJobs"/>
			<dependency name="Iterator@ServerJobs"/>
			<dependency name="JOB"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="jobID"/>
			<dependency name="jobInfo"/>
			<dependency name="jobInfo"/>
			<dependency name="jobLegal"/>
			<dependency name="jobLevel"/>
			<dependency name="jobName"/>
			<dependency name="jobPickup"/>
			<dependency name="jobPickupST"/>
			<dependency name="jobText"/>
			<dependency name="jobTextST"/>
			<dependency name="jobX"/>
			<dependency name="jobXST"/>
			<dependency name="jobY"/>
			<dependency name="jobYST"/>
			<dependency name="jobZ"/>
			<dependency name="jobZST"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="string_fast"/>
		</member>
		<member name="M:LoadPersonalVehicle" syntax="LoadPersonalVehicle(playerid)">
			<attribute name="public"/>
			<stacksize value="23"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@PlayerVehicles"/>
			<dependency name="Iter_Single@TotalPlayerVehicles"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="Iterator@TotalPlayerVehicles"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gString"/>
			<dependency name="pName"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="printf"/>
			<dependency name="pvAge"/>
			<dependency name="pvAngle"/>
			<dependency name="pvCarPlate"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvComponents"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvFuel"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvInterior"/>
			<dependency name="pvLock"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOdometer"/>
			<dependency name="pvOwnerID"/>
			<dependency name="pvPaintJob"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="pvVirtualWorld"/>
			<dependency name="pvX"/>
			<dependency name="pvY"/>
			<dependency name="pvZ"/>
			<dependency name="sscanf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:LoadSafes" syntax="LoadSafes()">
			<attribute name="public"/>
			<stacksize value="4139"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@FactionSafes"/>
			<dependency name="Iterator@FactionSafes"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="SAFE"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="sDrugs"/>
			<dependency name="sFactionID"/>
			<dependency name="sID"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="sPickup"/>
			<dependency name="sPosX"/>
			<dependency name="sPosY"/>
			<dependency name="sPosZ"/>
			<dependency name="sText"/>
			<dependency name="sVirtualID"/>
			<dependency name="safeInfo"/>
			<dependency name="safeInfo"/>
			<dependency name="string_fast"/>
		</member>
		<member name="M:LoadTurfs" syntax="LoadTurfs()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GangZoneCreateEx"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerTurfs"/>
			<dependency name="Iterator@ServerTurfs"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="tID"/>
			<dependency name="tMaxX"/>
			<dependency name="tMaxY"/>
			<dependency name="tMinX"/>
			<dependency name="tMinY"/>
			<dependency name="tOwned"/>
			<dependency name="turfInfo"/>
			<dependency name="turfInfo"/>
		</member>
		<member name="M:LoopingAnim" syntax="LoopingAnim(playerid, animlib[], animname[], Speed, looping, lockx, locky, lockz, lp)">
			<stacksize value="13"/>
			<referrer name="pc_cmd_lifejump"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_exhaust"/>
			<referrer name="pc_cmd_hoodfrisked"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_box"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_crossarms"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_frisked"/>
			<referrer name="pc_cmd_exhausted"/>
			<referrer name="pc_cmd_injured"/>
			<referrer name="pc_cmd_dealstance"/>
			<referrer name="pc_cmd_crack"/>
			<referrer name="pc_cmd_wank"/>
			<referrer name="pc_cmd_gro"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_koface"/>
			<referrer name="pc_cmd_kostomach"/>
			<referrer name="pc_cmd_kiss"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_lay2"/>
			<referrer name="pc_cmd_hitch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_medic"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_sit"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_getarrested"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<dependency name="CB_ApplyAnimation"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="Speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="looping">
			</param>
			<param name="lockx">
			</param>
			<param name="locky">
			</param>
			<param name="lockz">
			</param>
			<param name="lp">
			</param>
		</member>
		<member name="M:Malloc_Allocate" syntax="Malloc_Allocate(size, clear)">
			<tagname value="Alloc"/>
			<stacksize value="10"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="calloc"/>
			<referrer name="Timer_GetSingleSlot"/>
			<referrer name="Callback_Get"/>
			<referrer name="Remote_RawStrpack"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="__YSI_g_sHeapStart"/>
			<dependency name="__YSI_g_sUnusedStart"/>
			<dependency name="memset"/>
			<param name="size">
				Ammount of memory to allocate IN CELLS.
			</param>
			<param name="clear">
				<paraminfo>bool </paraminfo>
			</param>
			  <param name="cleat">Blank the memory?</param>  <returns>  Memory identifier.  </returns>  <remarks>  The size check should never fail, if there's only 1 cell  extra somewhere just sneak it onto the end of an array,  if the user does proper bounds checking it shouldn't  matter.  Implementation code for <symbolref name="malloc" />.  This code will find an area in memory with sufficient  space to store the given data and   </remarks> 
		</member>
		<member name="M:Malloc_DoPlayerConnect" syntax="Malloc_DoPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Malloc_TrySetup"/>
			<dependency name="W@"/>
			<dependency name="YSI_g_sHeapSetup"/>
			<param name="playerid">
				Player that just connected.
			</param>
			  <remarks>  This is the only callback that can be called before our timers when the mode  starts.  Make sure the heap is set up correctly.  </remarks> 
		</member>
		<member name="M:Malloc_FindStackTop" syntax="Malloc_FindStackTop()">
			<stacksize value="5"/>
			<referrer name="Malloc_TrySetup"/>
			<dependency name="GetFrameReturn"/>
			<remarks>  Loop back up through the stack and find the start of the current stack.  If  it doesn't equal the top of the true stack then we've been called via  "CallLocalFunction" at some point and thus MAY get some memory corruption.  Based on ZeeX's GetStackTrace, but gets frames instead of returns.  </remarks> 
		</member>
		<member name="M:Malloc_Free" syntax="Malloc_Free(slot)">
			<stacksize value="5"/>
			<referrer name="_Timer_F"/>
			<referrer name="Callback_Release"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="__YSI_g_sHeapStart"/>
			<dependency name="__YSI_g_sUnusedStart"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Memory allocation unit to release
			</param>
			  <remarks>  Implementation code for <symbolref name="free" />.  </remarks> 
		</member>
		<member name="M:Malloc_Get" syntax="Malloc_Get(array, index)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to get information from.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			    <returns>  Data.  </returns>  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:Malloc_GetA" syntax="Malloc_GetA(target[], length, array, index)">
			<stacksize value="8"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the array.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			        <remarks>  Displays errors in secure mode.  Gets an array.  </remarks> 
		</member>
		<member name="M:Malloc_GetData" syntax="Malloc_GetData(slot, index)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to get data from.
			</param>
			<param name="index">
				The location in the unit to get.
			</param>
			    <returns>  The data  </returns>  <remarks>  Basically like <symbolref name="Malloc_Get" /> but used internally.  </remarks> 
		</member>
		<member name="M:Malloc_GetS" syntax="Malloc_GetS(target[], length, array, index, pack)">
			<stacksize value="5"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the string.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Return the string packed?
			</param>
			          <remarks>  Displays errors in secure mode.  Gets a string.  </remarks> 
		</member>
		<member name="M:Malloc_GetSlotSize" syntax="Malloc_GetSlotSize(slot)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Allocation unit to get the size of.
			</param>
			  <returns>  The size.  </returns> 
		</member>
		<member name="M:Malloc_NewS" syntax="Malloc_NewS(string[], pack)">
			<tagname value="Alloc"/>
			<stacksize value="7"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="false"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				The string to store.
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Whether or not the string will be packed.
			</param>
			    <returns>  0 on fail or a data handle on sucess.  </returns>  <remarks>  Allocates a new piece of memory with enough space to store the given string.  </remarks> 
		</member>
		<member name="M:Malloc_NextSlot" syntax="Malloc_NextSlot(slot)">
			<stacksize value="1"/>
			<param name="slot">
				The unit to get the one after of.
			</param>
			  <remarks>  Gets the next free block of memory after the current one.  </remarks> 
		</member>
		<member name="M:Malloc_OnScriptInit" syntax="Malloc_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Master_OnScriptInit"/>
			<dependency name="_@"/>
			<dependency name="existproperty"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<returns>  OnScriptInit  </returns>  <remarks>  Constructor.  Gets the script a master ID.  Now ALWAYS gets an ID, even if  the master system is disabled - doing otherwise is just too complicated.  </remarks>  <transition keep="true" target="_ALS : _ALS_go" />  <transition target=""/>

		</member>
		<member name="M:Malloc_Reconcile" syntax="Malloc_Reconcile(addr)">
			<tagname value="Alloc"/>
			<stacksize value="1"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="addr">
				<paraminfo>ResolvedAlloc </paraminfo>
				Memory address to find
			</param>
			  <remarks>  Transforms a memory address in to a memory slot.  </remarks> 
		</member>
		<member name="M:Malloc_Resolve" syntax="Malloc_Resolve(slot)">
			<tagname value="ResolvedAlloc"/>
			<stacksize value="1"/>
			<referrer name="Callback_Get"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Memory allocation unit to find
			</param>
			  <remarks>  Transforms a memory slot in to a memory address.  </remarks> 
		</member>
		<member name="M:Malloc_Set" syntax="Malloc_Set(array, index, value)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="value">
				Value to insert
			</param>
			      <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:Malloc_SetA" syntax="Malloc_SetA(array, index, str[], len)">
			<stacksize value="8"/>
			<referrer name="_Timer_A"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Array to insert.
			</param>
			<param name="len">
				Length of the array.
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts an array.  </remarks> 
		</member>
		<member name="M:Malloc_SetData" syntax="Malloc_SetData(slot, index, value)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to set in.
			</param>
			<param name="index">
				Where in the unit to set.
			</param>
			<param name="value">
				The value to save.
			</param>
			     
		</member>
		<member name="M:Malloc_SetS" syntax="Malloc_SetS(array, index, str[], pack)">
			<stacksize value="6"/>
			<referrer name="_Timer_S"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="cellmax"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<dependency name="strunpack"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to insert
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Should the string be packed in?
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts a string.  </remarks> 
		</member>
		<member name="M:Malloc_SetSlotSize" syntax="Malloc_SetSlotSize(slot, size)">
			<stacksize value="1"/>
			<param name="slot">
				The allocation unit to set the size of.
			</param>
			<param name="size">
				The size to set it to.
			</param>
			   
		</member>
		<member name="M:Malloc_SetVAA" syntax="Malloc_SetVAA(array, index, arg)">
			<stacksize value="2"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="memcpy"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="arg">
				Offset in the stack of the array to store.
			</param>
			      <remarks>  Inserts an array by stack offset for use in vararg functions.  </remarks> 
		</member>
		<member name="M:Malloc_SetVAS" syntax="Malloc_SetVAS(array, index, arg)">
			<stacksize value="2"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="arg">
				Offset in the stack of the string to store.
			</param>
			      <remarks>  Inserts a string by stack offset for use in vararg functions.  </remarks> 
		</member>
		<member name="M:Malloc_SlotSize" syntax="Malloc_SlotSize(slot)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Allocation unit to get the size of.
			</param>
			  <returns>  The size.  </returns> 
		</member>
		<member name="M:Malloc_SolidifyHeap" syntax="Malloc_SolidifyHeap()">
			<stacksize value="1"/>
			<referrer name="OnRuntimeError"/>
			<referrer name="Malloc_SolidifyTimer"/>
			<dependency name="YSI_g_sHeapSetup"/>
			<dependency name="heapspace"/>
		</member>
		<member name="M:Malloc_SolidifyTimer" syntax="Malloc_SolidifyTimer()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Malloc_SolidifyHeap"/>
			<dependency name="Malloc_TrySetup"/>
		</member>
		<member name="M:Malloc_TrySetup" syntax="Malloc_TrySetup()">
			<stacksize value="7"/>
			<referrer name="main"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="Malloc_SolidifyTimer"/>
			<referrer name="Malloc_DoPlayerConnect"/>
			<dependency name="AMX_HEADER_HEA"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Malloc_FindStackTop"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="__YSI_g_sHeapStart"/>
			<dependency name="__YSI_g_sUnusedStart"/>
			<dependency name="cellbits"/>
			<dependency name="memset"/>
			<remarks>  Move the heap pointer up a load.  This is called multiple times at the start  of the mode because we need to beat protections added in by the virtual  machine to steal away its heap area.  </remarks> 
		</member>
		<member name="M:Malloc_main" syntax="Malloc_main()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:ManualVehicleEngineAndLights" syntax="ManualVehicleEngineAndLights()">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
		</member>
		<member name="M:Master_GetCurrentMaster" syntax="Master_GetCurrentMaster()">
			<stacksize value="5"/>
			<referrer name="YSIM_OnMasterSystemInit"/>
			<referrer name="@a"/>
			<dependency name="_E_YCM@n"/>
			<dependency name="_E_YCM@y"/>
			<dependency name="_Master_Get"/>
			<dependency name="_YCM_g@a"/>
			<dependency name="false"/>
			<transition keep="true" target="_YCM : y" />  <transition keep="true" target="_YCM : u" />  <transition keep="true" target="_YCM : y" />  <transition keep="true" target="_YCM : n" /> 
		</member>
		<member name="M:Master_GetNext" syntax="Master_GetNext()">
			<stacksize value="8"/>
			<dependency name="getproperty"/>
			<returns>  Next master ID to be assigned.  </returns> 
		</member>
		<member name="M:Master_OnScriptExit" syntax="Master_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="ScriptInit_OnScriptExit"/>
		</member>
		<member name="M:Master_OnScriptInit" syntax="Master_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="Malloc_OnScriptInit"/>
		</member>
		<member name="M:Master_Reassert" syntax="Master_Reassert()">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="U@"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="_@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<remarks>  Rebuilds the collection of master data whenever a script is restarted.  </remarks> 
		</member>
		<member name="M:Mean" syntax="Mean(arr[], num)">
			<stacksize value="5"/>
			<dependency name="Sum"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical mean value of the array.  </returns> 
		</member>
		<member name="M:Median" syntax="Median(arr[], num)">
			<stacksize value="5"/>
			<dependency name="Utils_PreSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical median value of the array.  </returns> 
		</member>
		<member name="M:ModVehicle" syntax="ModVehicle(vehicleid)">
			<stacksize value="5"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="OnVehicleSpawn"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvComponents"/>
			<dependency name="true"/>
			<dependency name="vehicle_personal"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:Mode" syntax="Mode(arr[], num)">
			<stacksize value="6"/>
			<dependency name="Utils_PreSort"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical modal value of the array.  </returns> 
		</member>
		<member name="M:MoveDynamicObject" syntax="MoveDynamicObject(objectid, x, y, z, speed, rx, ry, rz)">
			<attribute name="native"/>
			<referrer name="closeGate"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:MoveObject" syntax="MoveObject(objectid, X, Y, Z, Speed, RotX, RotY, RotZ)">
			<attribute name="native"/>
			<referrer name="Timers"/>
			<param name="objectid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="RotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="RotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="RotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:MyHttpResponse" syntax="MyHttpResponse(playerid, response_code, data[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="EOS"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YHash"/>
			<dependency name="gQuery"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="printf"/>
			<dependency name="sendAdmin"/>
			<param name="playerid">
			</param>
			<param name="response_code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:MySQLLoad" syntax="MySQLLoad()">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="CB_OnGameModeInit"/>
			<dependency name="ERROR"/>
			<dependency name="SQL"/>
			<dependency name="SendRconCommand"/>
			<dependency name="SetGameModeText"/>
			<dependency name="WARNING"/>
			<dependency name="destroyServerTextDraws"/>
			<dependency name="mysql_close"/>
			<dependency name="mysql_connect"/>
			<dependency name="mysql_errno"/>
			<dependency name="mysql_log"/>
			<dependency name="mysql_tquery"/>
			<dependency name="print"/>
			<dependency name="serverTextDraws"/>
			<dependency name="true"/>
		</member>
		<member name="M:NOT_IN_RANGE" syntax="NOT_IN_RANGE(value, lower, upper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="value">
				The number to compare.
			</param>
			<param name="lower">
				The lower limit.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			      <returns>  Is the value outside the given range.  </returns>  <remarks>  Equivalent to:  <code>		(%1) &lt;= (%0) &lt; (%2)</code>  </remarks> 
		</member>
		<member name="M:NetStats_GetConnectedTime" syntax="NetStats_GetConnectedTime(playerid)">
			<attribute name="native"/>
			<referrer name="GetConnectedTime"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:NetStats_PacketLossPercent" syntax="NetStats_PacketLossPercent(playerid)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:NtCompare" syntax="NtCompare(s1, s2[])">
			<stacksize value="8"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetTagIndexFromName"/>
			<dependency name="ReadAmxMemory"/>
			<param name="s1">
			</param>
			<param name="s2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:NtCopy" syntax="NtCopy(src, dest[], size)">
			<stacksize value="6"/>
			<referrer name="GetPublicNameFromIndex"/>
			<referrer name="GetNativeNameFromIndex"/>
			<referrer name="GetPubVarNameFromIndex"/>
			<referrer name="GetTagNameFromIndex"/>
			<dependency name="ReadAmxMemory"/>
			<param name="src">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:O@" syntax="O@(function[], time, repeat, format[], ...)">
			<attribute name="native"/>
			<referrer name="fareUpdateTimer_yT@"/>
			<referrer name="TimerWar_yT@"/>
			<referrer name="TimerGetHit_yT@"/>
			<referrer name="FishingTimer_yT@"/>
			<referrer name="usedrugsTimer_yT@"/>
			<referrer name="advertismentTimer_yT@"/>
			<referrer name="helpnTimer_yT@"/>
			<referrer name="TimerCar_yT@"/>
			<referrer name="TimerSpeedo_yT@"/>
			<referrer name="gasTimer_yT@"/>
			<referrer name="kickEx_yT@"/>
			<referrer name="TimerJail_yT@"/>
			<referrer name="TimerWanted_yT@"/>
			<referrer name="TimersWantedFind_yT@"/>
			<referrer name="TimerPos_yT@"/>
			<referrer name="TimerCarFind_yT@"/>
			<referrer name="TimerTutorial_yT@"/>
			<referrer name="respawnTimer_yT@"/>
			<referrer name="ExpirationReport_yT@"/>
			<referrer name="closeGate_yT@"/>
			<referrer name="tazerTimer_yT@"/>
			<referrer name="testDriveTimer_yT@"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="repeat">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:O@A_" syntax="O@A_()">
			<tagname value="bool"/>
			<stacksize value="28"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmGetOpcode"/>
			<dependency name="DisasmGetOperandReloc"/>
			<dependency name="DisasmInit"/>
			<dependency name="DisasmNext"/>
			<dependency name="GetCurrentFrameReturn"/>
			<dependency name="O@V_"/>
			<dependency name="OP_CALL"/>
			<dependency name="false"/>
		</member>
		<member name="M:OnActorStreamIn" syntax="OnActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnActorStreamOut" syntax="OnActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDialogPerformed" syntax="OnDialogPerformed(playerid, dialog[], response, success)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="dialog">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="response">
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnDialogResponse" syntax="OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="49"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Dialog_Close"/>
			<dependency name="cellmax"/>
			<dependency name="funcidx"/>
			<dependency name="s_DialogName"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnDynamicActorStreamIn" syntax="OnDynamicActorStreamIn(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDynamicActorStreamOut" syntax="OnDynamicActorStreamOut(actorid, forplayerid)">
			<stacksize value="1"/>
			<param name="actorid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnDynamicObjectMoved" syntax="OnDynamicObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnEnterExitModShop" syntax="OnEnterExitModShop(playerid, enterexit, interiorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="enterexit">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:OnFilterScriptExit" syntax="OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnFilterScriptExit"/>
			<dependency name="ScriptInit_OnScriptExit"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnFilterScriptInit" syntax="OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnFilterScriptInit"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<dependency name="true"/>
			<transition keep="true" target="_script_init_fix_state : true"/>  <transition keep="true" target="_ALS : _ALS_go"/> 
		</member>
		<member name="M:OnGameModeExit" syntax="OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnGameModeExit"/>
			<dependency name="ScriptInit_OnScriptExit"/>
			<dependency name="YSI_FILTERSCRIPT"/>
		</member>
		<member name="M:OnGameModeInit" syntax="OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="ScriptInit_OnGameModeInit"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<transition keep="true" target="_script_init_fix_state : false"/>  <transition keep="true" target="_ALS : _ALS_go"/> 
		</member>
		<member name="M:OnIncomingConnection" syntax="OnIncomingConnection(playerid, ip_address[], port)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="ip_address">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="port">
			</param>
		</member>
		<member name="M:OnObjectMoved" syntax="OnObjectMoved(objectid)">
			<stacksize value="1"/>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerActionChange" syntax="OnPlayerActionChange(playerid, oldaction, newaction)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="oldaction">
			</param>
			<param name="newaction">
			</param>
		</member>
		<member name="M:OnPlayerAnimationPlay" syntax="OnPlayerAnimationPlay(playerid, animlib[], animname[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerAntiReload" syntax="OnPlayerAntiReload(playerid, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerClickMap" syntax="OnPlayerClickMap(playerid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickPlayer" syntax="OnPlayerClickPlayer(playerid, clickedplayerid, source)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="clickedplayerid">
			</param>
			<param name="source">
			</param>
		</member>
		<member name="M:OnPlayerClickPlayerTextDraw" syntax="OnPlayerClickPlayerTextDraw(playerid, playertextid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playertextid">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerClickTextDraw" syntax="OnPlayerClickTextDraw(playerid, clickedid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="e_bSelectTD"/>
			<dependency name="e_iHoverColor"/>
			<dependency name="false"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<param name="playerid">
			</param>
			<param name="clickedid">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerCommandPerformed" syntax="OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="DileyCMD"/>
			<dependency name="gettime"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="result">
			</param>
			<param name="flags">
			</param>
		</member>
		<member name="M:OnPlayerCommandReceived" syntax="OnPlayerCommandReceived(playerid, cmd[], params[], flags)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="DileyCMD"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="flags">
			</param>
		</member>
		<member name="M:OnPlayerCommandText" syntax="OnPlayerCommandText(playerid, cmdtext[])">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="cmdtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerConnect" syntax="OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="IPToInt"/>
			<dependency name="YSI_gPlayerIP"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerCrashVehicle" syntax="OnPlayerCrashVehicle(playerid, vehicleid, damage)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="damage">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerDeath" syntax="OnPlayerDeath(playerid, killerid, reason)">
			<attribute name="public"/>
			<stacksize value="4287"/>
			<dependency name="CancelJob"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="I@"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="J@"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SetPlayerFreeze"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="TimerJail_yT@"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="Working"/>
			<dependency name="_Timer_F"/>
			<dependency name="cellRandom"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="jailTime"/>
			<dependency name="pCuffed"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pName"/>
			<dependency name="pOnTurf"/>
			<dependency name="pSQLID"/>
			<dependency name="pWantedDeaths"/>
			<dependency name="pWantedLevel"/>
			<dependency name="pWantedTime"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="sendPolice"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wantedTime"/>
			<param name="playerid">
			</param>
			<param name="killerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerDisconnect" syntax="OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="YSI_gPlayerIP"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:OnPlayerEditAttachedObject" syntax="OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="boneid">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditDynamicObject" syntax="OnPlayerEditDynamicObject(playerid, objectid, response, x, y, z, rx, ry, rz)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rx">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="ry">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="rz">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEditObject" syntax="OnPlayerEditObject(playerid, playerobject, objectid, response, fX, fY, fZ, fRotX, fRotY, fRotZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="playerobject">
			</param>
			<param name="objectid">
			</param>
			<param name="response">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerEmptyWeapon" syntax="OnPlayerEmptyWeapon(playerid, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerEnterCheckpoint" syntax="OnPlayerEnterCheckpoint(playerid)">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CHECKPOINT_FINDCAR"/>
			<dependency name="CHECKPOINT_GPS"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Single@ExamenCheckpoints"/>
			<dependency name="Iterator@ExamenCheckpoints"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="_Timer_F"/>
			<dependency name="carFind"/>
			<dependency name="dmvX"/>
			<dependency name="dmvY"/>
			<dependency name="dmvZ"/>
			<dependency name="examenInfo"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pExamenCheckpoint"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pSQLID"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerExamenPTD"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicArea" syntax="OnPlayerEnterDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicCP" syntax="OnPlayerEnterDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterDynamicRaceCP" syntax="OnPlayerEnterDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerEnterRaceCheckpoint" syntax="OnPlayerEnterRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerEnterVehicle" syntax="OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="ClearAnimations"/>
			<dependency name="isBike"/>
			<dependency name="isBoat"/>
			<dependency name="isPlane"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="pFlyLicense"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="ispassenger">
			</param>
		</member>
		<member name="M:OnPlayerExitVehicle" syntax="OnPlayerExitVehicle(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerExitedMenu" syntax="OnPlayerExitedMenu(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerFPSChange" syntax="OnPlayerFPSChange(playerid, oldfps, newfps)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="oldfps">
			</param>
			<param name="newfps">
			</param>
		</member>
		<member name="M:OnPlayerFall" syntax="OnPlayerFall(playerid, damage)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damage">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerFriendlyFire" syntax="OnPlayerFriendlyFire(playerid, targetid, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamage" syntax="OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damagedid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamageActor" syntax="OnPlayerGiveDamageActor(playerid, damaged_actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="damaged_actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerGiveDamageDynamicActor" syntax="OnPlayerGiveDamageDynamicActor(playerid, actorid, amount, weaponid, bodypart)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="actorid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerHideCursor" syntax="OnPlayerHideCursor(playerid, hovercolor)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="hovercolor">
			</param>
		</member>
		<member name="M:OnPlayerHoldingKey" syntax="OnPlayerHoldingKey(playerid, keys)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="keys">
			</param>
		</member>
		<member name="M:OnPlayerInteriorChange" syntax="OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="newinteriorid">
			</param>
			<param name="oldinteriorid">
			</param>
		</member>
		<member name="M:OnPlayerJackVehicle" syntax="OnPlayerJackVehicle(playerid, targetid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerJump" syntax="OnPlayerJump(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerKeyStateChange" syntax="OnPlayerKeyStateChange(playerid, newkeys, oldkeys)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="SetTimerEx"/>
			<dependency name="e_PLAYER_TICK"/>
			<dependency name="e_bAiming"/>
			<dependency name="e_bHoldKey"/>
			<dependency name="e_iHoldTimer"/>
			<dependency name="false"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="newkeys">
			</param>
			<param name="oldkeys">
			</param>
		</member>
		<member name="M:OnPlayerLeaveCheckpoint" syntax="OnPlayerLeaveCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicArea" syntax="OnPlayerLeaveDynamicArea(playerid, areaid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="areaid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicCP" syntax="OnPlayerLeaveDynamicCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveDynamicRaceCP" syntax="OnPlayerLeaveDynamicRaceCP(playerid, checkpointid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="checkpointid">
			</param>
		</member>
		<member name="M:OnPlayerLeaveRaceCheckpoint" syntax="OnPlayerLeaveRaceCheckpoint(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerObjectMoved" syntax="OnPlayerObjectMoved(playerid, objectid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
		</member>
		<member name="M:OnPlayerPacketLoss" syntax="OnPlayerPacketLoss(playerid, oldloss, newloss)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="oldloss">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="newloss">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerPause" syntax="OnPlayerPause(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpDynamicPickup" syntax="OnPlayerPickUpDynamicPickup(playerid, pickupid)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="BIZZ"/>
			<dependency name="FACTION"/>
			<dependency name="GASCAN"/>
			<dependency name="HOUSE"/>
			<dependency name="JOB"/>
			<dependency name="PickInfo"/>
			<dependency name="SAFE"/>
			<dependency name="areaBizz"/>
			<dependency name="areaFaction"/>
			<dependency name="areaGascan"/>
			<dependency name="areaHouse"/>
			<dependency name="areaJob"/>
			<dependency name="areaSafe"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerPickUpPickup" syntax="OnPlayerPickUpPickup(playerid, pickupid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="pickupid">
			</param>
		</member>
		<member name="M:OnPlayerRamPlayer" syntax="OnPlayerRamPlayer(playerid, driverid, vehicleid, damage)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="driverid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="damage">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerReleaseKey" syntax="OnPlayerReleaseKey(playerid, keys, time)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="keys">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:OnPlayerReloadWeapon" syntax="OnPlayerReloadWeapon(playerid, weaponid, ammo)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:OnPlayerRequestClass" syntax="OnPlayerRequestClass(playerid, classid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="InterpolateCameraLookAt"/>
			<dependency name="InterpolateCameraPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="pLogged"/>
			<dependency name="pLoginEnabled"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="classid">
			</param>
		</member>
		<member name="M:OnPlayerRequestSpawn" syntax="OnPlayerRequestSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="false"/>
			<dependency name="pLogged"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSelectDynamicObject" syntax="OnPlayerSelectDynamicObject(playerid, objectid, modelid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectObject" syntax="OnPlayerSelectObject(playerid, type, objectid, modelid, fX, fY, fZ)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="objectid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSelectedMenuRow" syntax="OnPlayerSelectedMenuRow(playerid, row)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="row">
			</param>
		</member>
		<member name="M:OnPlayerShootDynamicObject" syntax="OnPlayerShootDynamicObject(playerid, weaponid, objectid, x, y, z)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="objectid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerSpawn" syntax="OnPlayerSpawn(playerid)">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CancelJob"/>
			<dependency name="Dialog_Open"/>
			<dependency name="InterpolateCameraLookAt"/>
			<dependency name="InterpolateCameraPos"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="PreloadAnimLib"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetCameraBehindPlayer"/>
			<dependency name="SetPlayerArmourEx"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerToFactionColor"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPos"/>
			<dependency name="StopFly"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="Working"/>
			<dependency name="cellRandom"/>
			<dependency name="clearChat"/>
			<dependency name="examenFail"/>
			<dependency name="fExitX"/>
			<dependency name="fExitY"/>
			<dependency name="fExitZ"/>
			<dependency name="fID"/>
			<dependency name="fInterior"/>
			<dependency name="factionInfo"/>
			<dependency name="false"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hX"/>
			<dependency name="hY"/>
			<dependency name="hZ"/>
			<dependency name="houseInfo"/>
			<dependency name="pAnimLibLoaded"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="pFaction"/>
			<dependency name="pFlymode"/>
			<dependency name="pHouseID"/>
			<dependency name="pJailed"/>
			<dependency name="pRent"/>
			<dependency name="pSkin"/>
			<dependency name="pSpawnChange"/>
			<dependency name="pTutorial"/>
			<dependency name="pinFaction"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerSprayAtVehicle" syntax="OnPlayerSprayAtVehicle(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnPlayerStartAim" syntax="OnPlayerStartAim(playerid, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerStartBurn" syntax="OnPlayerStartBurn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStateChange" syntax="OnPlayerStateChange(playerid, newstate, oldstate)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetDriver"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="e_fHealth"/>
			<dependency name="e_iAction"/>
			<dependency name="e_iVehicleID"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aVehicleInfo"/>
			<dependency name="s_aVehicleInfo"/>
			<param name="playerid">
			</param>
			<param name="newstate">
			</param>
			<param name="oldstate">
			</param>
		</member>
		<member name="M:OnPlayerStopAim" syntax="OnPlayerStopAim(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStopBurn" syntax="OnPlayerStopBurn(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamIn" syntax="OnPlayerStreamIn(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerStreamOut" syntax="OnPlayerStreamOut(playerid, forplayerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnPlayerTakeDamage" syntax="OnPlayerTakeDamage(playerid, issuerid, amount, weaponid, bodypart)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="e_PLAYER_BURN_TICK"/>
			<dependency name="e_bBurning"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="issuerid">
			</param>
			<param name="amount">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="weaponid">
			</param>
			<param name="bodypart">
			</param>
		</member>
		<member name="M:OnPlayerTargetPlayer" syntax="OnPlayerTargetPlayer(playerid, targetid, weaponid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:OnPlayerText" syntax="OnPlayerText(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<dependency name="DCC_FindChannelById"/>
			<dependency name="DCC_SendChannelMessage"/>
			<dependency name="Diley"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="MoonBot"/>
			<dependency name="Reclama"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="faceReclama"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="oocNews"/>
			<dependency name="pFaction"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pTalkingLive"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="secinmin"/>
			<dependency name="secinmin"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="strmatch"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnPlayerUpdate" syntax="OnPlayerUpdate(playerid)">
			<attribute name="public"/>
			<stacksize value="81"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="Callback_GetSpeed"/>
			<dependency name="Callback_SetFlag"/>
			<dependency name="GetAnimationName"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerCameraMode"/>
			<dependency name="GetPlayerDrunkLevel"/>
			<dependency name="GetPlayerMoney"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerTargetPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="GetPlayerWeaponState"/>
			<dependency name="GetVehicleDamageStatus"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="GetVehiclePoolSize"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerJumping"/>
			<dependency name="IsPlayerNearGarage"/>
			<dependency name="IsPlayerSkydiving"/>
			<dependency name="IsPlayerSprayingVehicle"/>
			<dependency name="IsPlayerSwimming"/>
			<dependency name="NetStats_PacketLossPercent"/>
			<dependency name="SetPlayerDrunkLevel"/>
			<dependency name="e_PLAYER_BURN_TICK"/>
			<dependency name="e_PLAYER_LAST_JUMP"/>
			<dependency name="e_PLAYER_LAST_SHOT"/>
			<dependency name="e_PLAYER_LAST_UPDATE"/>
			<dependency name="e_PLAYER_VENDING_TICK"/>
			<dependency name="e_VENDING_MACHINE_TYPE"/>
			<dependency name="e_VENDING_MACHINE_X"/>
			<dependency name="e_VENDING_MACHINE_Y"/>
			<dependency name="e_VENDING_MACHINE_Z"/>
			<dependency name="e_bAnimSet"/>
			<dependency name="e_bBurning"/>
			<dependency name="e_bReloading"/>
			<dependency name="e_bUpdate"/>
			<dependency name="e_fHealth"/>
			<dependency name="e_fPacket"/>
			<dependency name="e_fSpeed"/>
			<dependency name="e_iAction"/>
			<dependency name="e_iAnimIndex"/>
			<dependency name="e_iDoors"/>
			<dependency name="e_iDrunk"/>
			<dependency name="e_iFrames"/>
			<dependency name="e_iLastAmmo"/>
			<dependency name="e_iLastGun"/>
			<dependency name="e_iLights"/>
			<dependency name="e_iMoney"/>
			<dependency name="e_iPanels"/>
			<dependency name="e_iShotsFired"/>
			<dependency name="e_iTargetID"/>
			<dependency name="false"/>
			<dependency name="floatabs"/>
			<dependency name="floatcmp"/>
			<dependency name="floatsub"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aVehicleInfo"/>
			<dependency name="s_aVehicleInfo"/>
			<dependency name="s_aVendingMachines"/>
			<dependency name="s_aVendingMachines"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerUseCamera" syntax="OnPlayerUseCamera(playerid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnPlayerUseGarage" syntax="OnPlayerUseGarage(playerid, vehicleid, type)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:OnPlayerUseVending" syntax="OnPlayerUseVending(playerid, type)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
		</member>
		<member name="M:OnPlayerWeaponShot" syntax="OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="Callback_GetMaxClip"/>
			<dependency name="GetConnectedTime"/>
			<dependency name="GetPlayerAmmo"/>
			<dependency name="GetPlayerTeam"/>
			<dependency name="GetPlayerWeaponState"/>
			<dependency name="e_PLAYER_LAST_SHOT"/>
			<dependency name="e_iAction"/>
			<dependency name="e_iShotsFired"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="hittype">
			</param>
			<param name="hitid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnQueryError" syntax="OnQueryError(errorid, error[], callback[], query[], handle)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="true"/>
			<param name="errorid">
			</param>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:OnRconCommand" syntax="OnRconCommand(cmd[])">
			<stacksize value="1"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:OnRconLoginAttempt" syntax="OnRconLoginAttempt(ip[], password[], success)">
			<stacksize value="1"/>
			<param name="ip">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="success">
			</param>
		</member>
		<member name="M:OnRuntimeError" syntax="OnRuntimeError(code, &amp;suppress)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Malloc_SolidifyHeap"/>
			<dependency name="YSI_g_scErrorMessage1"/>
			<dependency name="YSI_g_scErrorMessage2"/>
			<dependency name="YSI_g_scErrorMessage3"/>
			<param name="code">
			</param>
			<param name="suppress">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:OnTrailerUpdate" syntax="OnTrailerUpdate(playerid, vehicleid)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnUnoccupiedVehicleUpdate" syntax="OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, new_x, new_y, new_z, vel_x, vel_y, vel_z)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="passenger_seat">
			</param>
			<param name="new_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="new_z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="vel_z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:OnVehicleCreated" syntax="OnVehicleCreated(vehicleid, color1, color2)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleDamageStatusUpdate" syntax="OnVehicleDamageStatusUpdate(vehicleid, playerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:OnVehicleDeath" syntax="OnVehicleDeath(vehicleid, killerid)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@AdminVehicles"/>
			<dependency name="Iterator@AdminVehicles"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="false"/>
			<dependency name="getVehicleOwner"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvID"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOwnerID"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="vehicleid">
			</param>
			<param name="killerid">
			</param>
		</member>
		<member name="M:OnVehicleMod" syntax="OnVehicleMod(playerid, vehicleid, componentid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="SaveComponent"/>
			<dependency name="true"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:OnVehiclePaintjob" syntax="OnVehiclePaintjob(playerid, vehicleid, paintjobid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvID"/>
			<dependency name="pvPaintJob"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="paintjobid">
			</param>
		</member>
		<member name="M:OnVehicleRespray" syntax="OnVehicleRespray(playerid, vehicleid, color1, color2)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:OnVehicleSirenStateChange" syntax="OnVehicleSirenStateChange(playerid, vehicleid, newstate)">
			<stacksize value="1"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="newstate">
			</param>
		</member>
		<member name="M:OnVehicleSpawn" syntax="OnVehicleSpawn(vehicleid)">
			<attribute name="public"/>
			<stacksize value="17"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="ModVehicle"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="false"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvPaintJob"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="true"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:OnVehicleStreamIn" syntax="OnVehicleStreamIn(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnVehicleStreamOut" syntax="OnVehicleStreamOut(vehicleid, forplayerid)">
			<stacksize value="1"/>
			<param name="vehicleid">
			</param>
			<param name="forplayerid">
			</param>
		</member>
		<member name="M:OnePlayAnim" syntax="OnePlayAnim(playerid, animlib[], animname[], Speed, looping, lockx, locky, lockz, lp)">
			<stacksize value="13"/>
			<referrer name="pc_cmd_rcarjack1"/>
			<referrer name="pc_cmd_lcarjack1"/>
			<referrer name="pc_cmd_rcarjack2"/>
			<referrer name="pc_cmd_lcarjack2"/>
			<referrer name="pc_cmd_lightcig"/>
			<referrer name="pc_cmd_tapcig"/>
			<referrer name="pc_cmd_lowthrow"/>
			<referrer name="pc_cmd_highthrow"/>
			<referrer name="pc_cmd_leftslap"/>
			<referrer name="pc_cmd_laugh"/>
			<referrer name="pc_cmd_lookout"/>
			<referrer name="pc_cmd_vomit"/>
			<referrer name="pc_cmd_slapass"/>
			<referrer name="pc_cmd_deal"/>
			<referrer name="pc_cmd_sup"/>
			<referrer name="pc_cmd_push"/>
			<referrer name="pc_cmd_akick"/>
			<referrer name="pc_cmd_lowbodypush"/>
			<referrer name="pc_cmd_headbutt"/>
			<referrer name="pc_cmd_bomb"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_fucku"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<dependency name="CB_ApplyAnimation"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="animname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="Speed">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="looping">
			</param>
			<param name="lockx">
			</param>
			<param name="locky">
			</param>
			<param name="lockz">
			</param>
			<param name="lp">
			</param>
		</member>
		<member name="M:PC_Init" syntax="PC_Init()">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnGameModeInit"/>
		</member>
		<member name="M:PC_RegAlias" syntax="PC_RegAlias(cmd[], alias[], ...)">
			<attribute name="native"/>
			<referrer name="pc_alias_adminchat"/>
			<referrer name="pc_alias_helperchat"/>
			<referrer name="pc_alias_setrepsectpoints"/>
			<referrer name="pc_alias_admingivelicense"/>
			<referrer name="pc_alias_adminsuspendlicense"/>
			<referrer name="pc_alias_vehicles"/>
			<referrer name="pc_alias_fixveh"/>
			<referrer name="pc_alias_addnos"/>
			<referrer name="pc_alias_despawncar"/>
			<referrer name="pc_alias_flipveh"/>
			<referrer name="pc_alias_acceptreport"/>
			<referrer name="pc_alias_closereport"/>
			<referrer name="pc_alias_reportmute"/>
			<referrer name="pc_alias_makeleader"/>
			<referrer name="pc_alias_setadmin"/>
			<referrer name="pc_alias_auninvite"/>
			<referrer name="pc_alias_announce"/>
			<referrer name="pc_alias_clearchat"/>
			<param name="cmd">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="alias">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
			</param>
		</member>
		<member name="M:PawnCmd_OnGameModeInit" syntax="PawnCmd_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_IsConnected"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="true"/>
		</member>
		<member name="M:PayDay" syntax="PayDay()">
			<attribute name="public"/>
			<stacksize value="8202"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GivePlayerBank"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Iterator@Player"/>
			<dependency name="MoneyMoney"/>
			<dependency name="PayDayTime"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gettime"/>
			<dependency name="hBalance"/>
			<dependency name="hID"/>
			<dependency name="hRentPrice"/>
			<dependency name="hRenters"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="pBank"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pFactionPunish"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pHours"/>
			<dependency name="pLevel"/>
			<dependency name="pRent"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="pSeconds"/>
			<dependency name="pSpawnChange"/>
			<dependency name="pStoreBank"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="update"/>
			<dependency name="updateLevelBar"/>
		</member>
		<member name="M:PlayAudioStreamForPlayer" syntax="PlayAudioStreamForPlayer(playerid, url[], posX, posY, posZ, distance, usepos)">
			<attribute name="native"/>
			<referrer name="TimerTutorial"/>
			<param name="playerid">
			</param>
			<param name="url">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="posX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="posY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="posZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="usepos">
			</param>
		</member>
		<member name="M:PlayerHaveReport" syntax="PlayerHaveReport(playerid)">
			<stacksize value="3"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_report"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="false"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:PlayerMoney" syntax="PlayerMoney(playerid, amount)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="amount">
			</param>
		</member>
		<member name="M:PlayerPlaySound" syntax="PlayerPlaySound(playerid, soundid, x, y, z)">
			<attribute name="native"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_reply"/>
			<param name="playerid">
			</param>
			<param name="soundid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawAlignment" syntax="PlayerTextDrawAlignment(playerid, text, alignment)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="alignment">
			</param>
		</member>
		<member name="M:PlayerTextDrawBackgroundColor" syntax="PlayerTextDrawBackgroundColor(playerid, text, color)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:PlayerTextDrawBoxColor" syntax="PlayerTextDrawBoxColor(playerid, text, color)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:PlayerTextDrawColor" syntax="PlayerTextDrawColor(playerid, text, color)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:PlayerTextDrawDestroy" syntax="PlayerTextDrawDestroy(playerid, text)">
			<attribute name="native"/>
			<referrer name="destroyPlayerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawFont" syntax="PlayerTextDrawFont(playerid, text, font)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="font">
			</param>
		</member>
		<member name="M:PlayerTextDrawHide" syntax="PlayerTextDrawHide(playerid, text)">
			<attribute name="native"/>
			<referrer name="examenFail"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="TimerWar"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="HideDealerShipTD"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawLetterSize" syntax="PlayerTextDrawLetterSize(playerid, text, x, y)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawSetOutline" syntax="PlayerTextDrawSetOutline(playerid, text, size)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:PlayerTextDrawSetPreviewModel" syntax="PlayerTextDrawSetPreviewModel(playerid, text, modelindex)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="modelindex">
			</param>
		</member>
		<member name="M:PlayerTextDrawSetPreviewRot" syntax="PlayerTextDrawSetPreviewRot(playerid, text, fRotX, fRotY, fRotZ, fZoom)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZoom">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawSetPreviewVehCol" syntax="PlayerTextDrawSetPreviewVehCol(playerid, text, color1, color2)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="color1">
			</param>
			<param name="color2">
			</param>
		</member>
		<member name="M:PlayerTextDrawSetProportional" syntax="PlayerTextDrawSetProportional(playerid, text, set)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="set">
			</param>
		</member>
		<member name="M:PlayerTextDrawSetShadow" syntax="PlayerTextDrawSetShadow(playerid, text, size)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:PlayerTextDrawSetString" syntax="PlayerTextDrawSetString(playerid, text, string[])">
			<attribute name="native"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawShow" syntax="PlayerTextDrawShow(playerid, text)">
			<attribute name="native"/>
			<referrer name="updateLevelBar"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="TimerWar"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawTextSize" syntax="PlayerTextDrawTextSize(playerid, text, x, y)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<referrer name="updateLevelBar"/>
			<referrer name="TimerSpeedo"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:PlayerTextDrawUseBox" syntax="PlayerTextDrawUseBox(playerid, text, use)">
			<attribute name="native"/>
			<referrer name="playerTextDraws"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="use">
			</param>
		</member>
		<member name="M:PlayerToPoint" syntax="PlayerToPoint(radi, playerid, x, y, z)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="radi">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:Pop" syntax="Pop(&amp;arg)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<dependency name="false"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<dependency name="true"/>
			<param name="arg">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:PreloadAnimLib" syntax="PreloadAnimLib(playerid, animlib[])">
			<stacksize value="13"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="CB_ApplyAnimation"/>
			<param name="playerid">
			</param>
			<param name="animlib">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:PrintAmxHeader" syntax="PrintAmxHeader()">
			<stacksize value="4"/>
			<dependency name="AMX_HDR_AMX_VERSION"/>
			<dependency name="AMX_HDR_CIP"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_FILE_VERSION"/>
			<dependency name="AMX_HDR_FLAGS"/>
			<dependency name="AMX_HDR_HEA"/>
			<dependency name="AMX_HDR_LIBRARIES"/>
			<dependency name="AMX_HDR_MAGIC"/>
			<dependency name="AMX_HDR_NAMETABLE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="AMX_HDR_PUBVARS"/>
			<dependency name="AMX_HDR_SIZE"/>
			<dependency name="AMX_HDR_STP"/>
			<dependency name="AMX_HDR_TAGS"/>
			<dependency name="ResetStaticAmxHeader"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="printf"/>
		</member>
		<member name="M:PrintStackTrace" syntax="PrintStackTrace(trace[], max)">
			<stacksize value="40"/>
			<dependency name="GetFunctionFromReturnAddress"/>
			<dependency name="GetPublicNameFromAddress"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<param name="trace">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max">
			</param>
		</member>
		<member name="M:ProfilerInit" syntax="ProfilerInit()">
			<stacksize value="31"/>
			<dependency name="AMX_HDR"/>
			<dependency name="AMX_HDR_COD"/>
			<dependency name="AMX_HDR_DAT"/>
			<dependency name="AMX_HDR_DEFSIZE"/>
			<dependency name="AMX_HDR_NATIVES"/>
			<dependency name="AMX_HDR_PUBLICS"/>
			<dependency name="GetAmxBase"/>
			<dependency name="GetAmxHeader"/>
			<dependency name="HookPublic"/>
			<dependency name="g_num_publics"/>
			<dependency name="g_pecs"/>
			<dependency name="g_publics"/>
			<dependency name="g_publics"/>
			<dependency name="new_pec"/>
			<dependency name="ppi_child_time"/>
			<dependency name="ppi_num_calls"/>
			<dependency name="ppi_total_time"/>
			<dependency name="printf"/>
		</member>
		<member name="M:ProfilerWriteData" syntax="ProfilerWriteData(filename[])">
			<tagname value="bool"/>
			<stacksize value="144"/>
			<dependency name="GetPublicNameByIndex"/>
			<dependency name="false"/>
			<dependency name="fclose"/>
			<dependency name="fopen"/>
			<dependency name="format"/>
			<dependency name="fwrite"/>
			<dependency name="g_num_publics"/>
			<dependency name="g_publics"/>
			<dependency name="g_publics"/>
			<dependency name="io_write"/>
			<dependency name="ppi_child_time"/>
			<dependency name="ppi_num_calls"/>
			<dependency name="ppi_total_time"/>
			<dependency name="true"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ProxDetectorS" syntax="ProxDetectorS(radi, playerid, targetid)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="OnPlayerDeath"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="radi">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
		</member>
		<member name="M:Push" syntax="Push(arg)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<referrer name="PushString"/>
			<dependency name="false"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<dependency name="true"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:PushString" syntax="PushString(string[])">
			<tagname value="bool"/>
			<stacksize value="5"/>
			<dependency name="Push"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:PutPlayerInVehicle" syntax="PutPlayerInVehicle(playerid, vehicleid, seatid)">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="jobWork"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<param name="playerid">
			</param>
			<param name="vehicleid">
			</param>
			<param name="seatid">
			</param>
		</member>
		<member name="M:R@" syntax="R@(buffer[])">
			<stacksize value="6"/>
			<dependency name="setproperty"/>
			<param name="buffer">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Random" syntax="Random(min, max)">
			<stacksize value="3"/>
			<dependency name="cellmin"/>
			<dependency name="random"/>
			<param name="min">
			</param>
			<param name="max">
				Upper bound.
			</param>
			<param name="minmax">Lower bound, or upper bound when only parameter.</param>    <remarks>  Generate a random float between the given numbers (min &lt;= n &lt; max).  Default minimum is 0 (changes the parameter order).  </remarks> 
		</member>
		<member name="M:RandomFloat" syntax="RandomFloat(min, max, dp)">
			<tagname value="Float"/>
			<stacksize value="5"/>
			<dependency name="operator!=(Float:,Float:)"/>
			<dependency name="operator-(Float:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="float"/>
			<dependency name="floatpower"/>
			<dependency name="floatround"/>
			<dependency name="random"/>
			<param name="min">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="max">
				<paraminfo>Float </paraminfo>
				Upper bound.
			</param>
			<param name="dp">
				How small to make the differences
			</param>
			<param name="minmax">Lower bound, or upper bound when only parameter.</param>      <remarks>  Generate a random float between the given numbers (min &lt;= n &lt; max).  Default  minimum is 0.0 (changes the parameter order).  </remarks> 
		</member>
		<member name="M:Range" syntax="Range(arr[], num)">
			<stacksize value="4"/>
			<dependency name="cellmax"/>
			<dependency name="cellmin"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need averaging.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  The mathematical range of the values of the array.  </returns> 
		</member>
		<member name="M:ReadAmxCell" syntax="ReadAmxCell(offset)">
			<stacksize value="5"/>
			<dependency name="GetAmxAddress"/>
			<dependency name="ReadPhysMemoryCell"/>
			<param name="offset">
			</param>
		</member>
		<member name="M:ReadAmxMemory" syntax="ReadAmxMemory(address)">
			<stacksize value="1"/>
			<referrer name="ReadAmxMemoryArray"/>
			<referrer name="GetRawAmxHeader"/>
			<referrer name="NtCompare"/>
			<referrer name="NtCopy"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="DisasmGetOperand"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteDataRowChar"/>
			<referrer name="DisasmWriteDataRowHex"/>
			<referrer name="CodeScanCheckJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="DumpStack"/>
			<referrer name="YVA2_FoundCall"/>
			<param name="address">
			</param>
		</member>
		<member name="M:ReadAmxMemoryArray" syntax="ReadAmxMemoryArray(address, values[], size)">
			<stacksize value="5"/>
			<dependency name="ReadAmxMemory"/>
			<param name="address">
			</param>
			<param name="values">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:ReadOpcodeNearThis" syntax="ReadOpcodeNearThis(offset)">
			<tagname value="Opcode"/>
			<stacksize value="2"/>
			<referrer name="HaveToRelocateOpcodes"/>
			<referrer name="RelocateOpcodeNow"/>
			<dependency name="OP_NONE"/>
			<param name="offset">
			</param>
		</member>
		<member name="M:ReadPhysMemory" syntax="ReadPhysMemory(address, dest[], num)">
			<stacksize value="5"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:ReadPhysMemoryCell" syntax="ReadPhysMemoryCell(address)">
			<stacksize value="5"/>
			<referrer name="ReadAmxCell"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
		</member>
		<member name="M:Reclama" syntax="Reclama(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="OnPlayerText"/>
			<dependency name="SendClientMessage"/>
			<dependency name="gettime"/>
			<dependency name="pAdmin"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendStaff"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:RelToAbs" syntax="RelToAbs(address)">
			<stacksize value="3"/>
			<referrer name="refabs"/>
			<dependency name="GetAmxBaseAddress"/>
			<dependency name="GetDat"/>
			<param name="address">
			</param>
		</member>
		<member name="M:RelocateOpcode" syntax="RelocateOpcode(opcode)">
			<tagname value="Opcode"/>
			<stacksize value="3"/>
			<referrer name="SysreqC"/>
			<referrer name="SysreqD"/>
			<referrer name="SysreqCN"/>
			<referrer name="SysreqDN"/>
			<referrer name="CallNative"/>
			<referrer name="CallNativeByAddress"/>
			<referrer name="AsmEmitOpcode"/>
			<referrer name="AsmEmitPadding"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="GetOS"/>
			<referrer name="new_pec"/>
			<referrer name="YVA2_CodeGenShiftCode"/>
			<referrer name="CGen_SetupCodeSpace"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="I@E"/>
			<referrer name="StoredF_IsHooked"/>
			<dependency name="InitOpcodeTable"/>
			<dependency name="opcode_table"/>
			<dependency name="opcode_table_is_ready"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:RelocateOpcodeNow" syntax="RelocateOpcodeNow(opcode)">
			<tagname value="Opcode"/>
			<stacksize value="5"/>
			<referrer name="RelocateOpcodeNow"/>
			<referrer name="InitOpcodeTable"/>
			<dependency name="HaveToRelocateOpcodes"/>
			<dependency name="OP_ADD"/>
			<dependency name="OP_ADDR_ALT"/>
			<dependency name="OP_ADDR_PRI"/>
			<dependency name="OP_ADD_C"/>
			<dependency name="OP_ALIGN_ALT"/>
			<dependency name="OP_ALIGN_PRI"/>
			<dependency name="OP_AND"/>
			<dependency name="OP_BOUNDS"/>
			<dependency name="OP_BREAK"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CASETBL"/>
			<dependency name="OP_CMPS"/>
			<dependency name="OP_CONST_ALT"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_DEC"/>
			<dependency name="OP_DEC_ALT"/>
			<dependency name="OP_DEC_I"/>
			<dependency name="OP_DEC_PRI"/>
			<dependency name="OP_DEC_S"/>
			<dependency name="OP_EQ"/>
			<dependency name="OP_EQ_C_ALT"/>
			<dependency name="OP_EQ_C_PRI"/>
			<dependency name="OP_FILL"/>
			<dependency name="OP_GEQ"/>
			<dependency name="OP_GRTR"/>
			<dependency name="OP_HALT"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_IDXADDR"/>
			<dependency name="OP_IDXADDR_B"/>
			<dependency name="OP_INC"/>
			<dependency name="OP_INC_ALT"/>
			<dependency name="OP_INC_I"/>
			<dependency name="OP_INC_PRI"/>
			<dependency name="OP_INC_S"/>
			<dependency name="OP_INVERT"/>
			<dependency name="OP_JEQ"/>
			<dependency name="OP_JGEQ"/>
			<dependency name="OP_JGRTR"/>
			<dependency name="OP_JLEQ"/>
			<dependency name="OP_JLESS"/>
			<dependency name="OP_JNEQ"/>
			<dependency name="OP_JNZ"/>
			<dependency name="OP_JSGEQ"/>
			<dependency name="OP_JSGRTR"/>
			<dependency name="OP_JSLEQ"/>
			<dependency name="OP_JSLESS"/>
			<dependency name="OP_JUMP"/>
			<dependency name="OP_JZER"/>
			<dependency name="OP_LCTRL"/>
			<dependency name="OP_LEQ"/>
			<dependency name="OP_LESS"/>
			<dependency name="OP_LIDX"/>
			<dependency name="OP_LIDX_B"/>
			<dependency name="OP_LOAD_ALT"/>
			<dependency name="OP_LOAD_I"/>
			<dependency name="OP_LOAD_PRI"/>
			<dependency name="OP_LOAD_S_ALT"/>
			<dependency name="OP_LOAD_S_PRI"/>
			<dependency name="OP_LODB_I"/>
			<dependency name="OP_LREF_ALT"/>
			<dependency name="OP_LREF_PRI"/>
			<dependency name="OP_LREF_S_ALT"/>
			<dependency name="OP_LREF_S_PRI"/>
			<dependency name="OP_MOVE_ALT"/>
			<dependency name="OP_MOVE_PRI"/>
			<dependency name="OP_MOVS"/>
			<dependency name="OP_NEG"/>
			<dependency name="OP_NEQ"/>
			<dependency name="OP_NOP"/>
			<dependency name="OP_NOT"/>
			<dependency name="OP_OR"/>
			<dependency name="OP_POP_ALT"/>
			<dependency name="OP_POP_PRI"/>
			<dependency name="OP_PROC"/>
			<dependency name="OP_PUSH"/>
			<dependency name="OP_PUSH_ADR"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_PUSH_S"/>
			<dependency name="OP_RET"/>
			<dependency name="OP_RETN"/>
			<dependency name="OP_SCTRL"/>
			<dependency name="OP_SDIV"/>
			<dependency name="OP_SDIV_ALT"/>
			<dependency name="OP_SGEQ"/>
			<dependency name="OP_SGRTR"/>
			<dependency name="OP_SHL"/>
			<dependency name="OP_SHL_C_ALT"/>
			<dependency name="OP_SHL_C_PRI"/>
			<dependency name="OP_SHR"/>
			<dependency name="OP_SHR_C_ALT"/>
			<dependency name="OP_SHR_C_PRI"/>
			<dependency name="OP_SIGN_ALT"/>
			<dependency name="OP_SIGN_PRI"/>
			<dependency name="OP_SLEQ"/>
			<dependency name="OP_SLESS"/>
			<dependency name="OP_SMUL"/>
			<dependency name="OP_SMUL_C"/>
			<dependency name="OP_SREF_ALT"/>
			<dependency name="OP_SREF_PRI"/>
			<dependency name="OP_SREF_S_ALT"/>
			<dependency name="OP_SREF_S_PRI"/>
			<dependency name="OP_SSHR"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_STOR_ALT"/>
			<dependency name="OP_STOR_I"/>
			<dependency name="OP_STOR_PRI"/>
			<dependency name="OP_STOR_S_ALT"/>
			<dependency name="OP_STOR_S_PRI"/>
			<dependency name="OP_STRB_I"/>
			<dependency name="OP_SUB"/>
			<dependency name="OP_SUB_ALT"/>
			<dependency name="OP_SWAP_ALT"/>
			<dependency name="OP_SWAP_PRI"/>
			<dependency name="OP_SWITCH"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="OP_UDIV"/>
			<dependency name="OP_UDIV_ALT"/>
			<dependency name="OP_UMUL"/>
			<dependency name="OP_XCHG"/>
			<dependency name="OP_XOR"/>
			<dependency name="OP_ZERO"/>
			<dependency name="OP_ZERO_ALT"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="OP_ZERO_S"/>
			<dependency name="ReadOpcodeNearThis"/>
			<dependency name="debug"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:Remote_DoSearch" syntax="Remote_DoSearch(str[], ptr)">
			<stacksize value="2"/>
			<referrer name="GetRemoteFunction"/>
			<dependency name="strcmp"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to find.
			</param>
			<param name="ptr">
				Start of the linked list.
			</param>
			    <remarks>  Finds a given string in a given list.  </remarks> 
		</member>
		<member name="M:Remote_RawStrpack" syntax="Remote_RawStrpack(dest, src[])">
			<stacksize value="6"/>
			<referrer name="Remote_WriteJustSpec"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="strlen"/>
			<dependency name="strpack"/>
			<param name="dest">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Remote_WriteJustSpec" syntax="Remote_WriteJustSpec(sptr, spec[])">
			<stacksize value="6"/>
			<referrer name="GetRemoteFunction"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="CGen_AddCodeSpace"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="Remote_RawStrpack"/>
			<param name="sptr">
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Remote_WriteSpecAndFunc" syntax="Remote_WriteSpecAndFunc(fptr, func[], sptr, spec[])">
			<stacksize value="30"/>
			<referrer name="GetRemoteFunction"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitConstAlt"/>
			<dependency name="AsmEmitConstPri"/>
			<dependency name="AsmEmitJnzRel"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmEmitLrefSPri"/>
			<dependency name="AsmEmitStorSAlt"/>
			<dependency name="CGen_AddCodeSpace"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="CGen_UseCodeSpace"/>
			<dependency name="NULL"/>
			<dependency name="Remote_RawStrpack"/>
			<dependency name="YSI_g_sRemoteStub"/>
			<dependency name="ref"/>
			<dependency name="strlen"/>
			<param name="fptr">
				Pointer in which to store the function.
			</param>
			<param name="func">
				<paraminfo> [] </paraminfo>
				Name of the function.
			</param>
			<param name="sptr">
				Pointer to the stored specifier string.
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
				Usable specifier string.
			</param>
			        <returns>  A pointer to the start of the newly generated code.  </returns>  <remarks>  Generates a tiny function-specific stub that sets the values for the  function and specifier strings to pass to "CallRemoteFunction", and checks  for any empty strings - converting them to "NULL" instead.  </remarks> 
		</member>
		<member name="M:Remote_WriteStubCode" syntax="Remote_WriteStubCode()">
			<stacksize value="28"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="Remote_WriteStubCode"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="AsmEmitStorSAlt"/>
			<dependency name="AsmEmitStorSPri"/>
			<dependency name="AsmEmitSwapPri"/>
			<dependency name="AsmEmitSysreq"/>
			<dependency name="AsmInitPtr"/>
			<remarks>  This rewrites itself to be the bulk of the call to "CallRemoteFunction".  It  modifies the stack so that the parameters already pushed are the parameters  passed to the native function.  </remarks> 
		</member>
		<member name="M:RemoveBuildingForPlayer" syntax="RemoveBuildingForPlayer(playerid, modelid, fX, fY, fZ, fRadius)">
			<attribute name="native"/>
			<referrer name="removeMaps"/>
			<param name="playerid">
			</param>
			<param name="modelid">
			</param>
			<param name="fX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRadius">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:RemovePlayerAttachedObject" syntax="RemovePlayerAttachedObject(playerid, index)">
			<attribute name="native"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="@yH_OnPlayerConnect@008"/>
			<referrer name="FishingTimer"/>
			<referrer name="CancelJob"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="OnPlayerDeath"/>
			<param name="playerid">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:RemovePlayerFromVehicle" syntax="RemovePlayerFromVehicle(playerid)">
			<attribute name="native"/>
			<referrer name="@yH_OnPlayerEnterVehicle@007"/>
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:RepairVehicle" syntax="RepairVehicle(vehicleid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_fixveh"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:ResetPlayerCash" syntax="ResetPlayerCash(playerid)">
			<stacksize value="1"/>
			<dependency name="MoneyMoney"/>
			<dependency name="StoreMoney"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerMoney" syntax="ResetPlayerMoney(playerid)">
			<attribute name="native"/>
			<referrer name="updatePlayer"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetPlayerWeapons" syntax="ResetPlayerWeapons(playerid)">
			<attribute name="native"/>
			<referrer name="resetWeapons"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_disarm"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ResetStaticAmxHeader" syntax="ResetStaticAmxHeader()">
			<stacksize value="4"/>
			<referrer name="GetAmxHeader"/>
			<referrer name="GetAmxHeaderComponent"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="GetPublicIndexFromAddress"/>
			<referrer name="GetPublicInfo"/>
			<referrer name="GetPublicIndexFromName"/>
			<referrer name="HookPublic"/>
			<referrer name="GetNativeIndexFromAddress"/>
			<referrer name="GetNativeInfo"/>
			<referrer name="GetNativeIndexFromName"/>
			<referrer name="HookNative"/>
			<referrer name="GetPubVarInfo"/>
			<referrer name="GetPubVarIndexFromName"/>
			<referrer name="GetPubVarIndexFromAddress"/>
			<referrer name="GetTagInfo"/>
			<referrer name="GetTagIndexFromName"/>
			<referrer name="GetTagIndexFromID"/>
			<referrer name="Hooks_SortPublics"/>
			<dependency name="GetAmxHeaderNow"/>
			<dependency name="gHdr"/>
			<dependency name="gInitialized"/>
			<dependency name="true"/>
		</member>
		<member name="M:ResolveJITAddress" syntax="ResolveJITAddress(addr)">
			<stacksize value="1"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:ReturnPlayerName" syntax="ReturnPlayerName(playerid)">
			<stacksize value="29"/>
			<dependency name="GetPlayerName"/>
			<dependency name="ReturnPlayerName"/>
			<param name="playerid">
				Player whose name you want to get.
			</param>
			<summary>  ReturnPlayerName  </summary>    <remarks>  Now uses a global array to avoid repeated function calls.  Actually doesn't  because that causes issues with multiple scripts.  </remarks> 
		</member>
		<member name="M:RunShellcode" syntax="RunShellcode(code_ptr, align)">
			<stacksize value="5"/>
			<referrer name="GetAmxAddress"/>
			<dependency name="SysreqD"/>
			<param name="code_ptr">
			</param>
			<param name="align">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:S@" syntax="S@(v)">
			<stacksize value="6"/>
			<dependency name="Q@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<dependency name="strunpack"/>
			<param name="v">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:SHA256_PassHash" syntax="SHA256_PassHash(password[], salt[], ret_hash[], ret_hash_len)">
			<attribute name="native"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="salt">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ret_hash">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ret_hash_len">
			</param>
		</member>
		<member name="M:SSCANF_Init" syntax="SSCANF_Init(players, invalid, len)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<param name="players">
			</param>
			<param name="invalid">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:SSCANF_IsConnected" syntax="SSCANF_IsConnected(playerid)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_Join" syntax="SSCANF_Join(playerid, name[], npc)">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnFilterScriptInit"/>
			<referrer name="PawnCmd_OnGameModeInit"/>
			<referrer name="_y_utils_OnPlayerConnect"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="npc">
			</param>
		</member>
		<member name="M:SSCANF_Leave" syntax="SSCANF_Leave(playerid)">
			<attribute name="native"/>
			<referrer name="_y_utils_OnPlayerDisconnect"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnFilterScriptInit" syntax="SSCANF_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SetTimer"/>
			<dependency name="true"/>
		</member>
		<member name="M:SSCANF_OnGameModeInit" syntax="SSCANF_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SetTimer"/>
			<dependency name="true"/>
		</member>
		<member name="M:SSCANF_OnPlayerConnect" syntax="SSCANF_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="HTTP"/>
			<dependency name="SQL"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pLastIp"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="removeMaps"/>
			<dependency name="resetVars"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SSCANF_OnPlayerDisconnect" syntax="SSCANF_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Callback_GetFlag"/>
			<dependency name="KillTimer"/>
			<dependency name="e_PLAYER_TICK_ENUM"/>
			<dependency name="e_bFlags"/>
			<dependency name="e_bHoldKey"/>
			<dependency name="e_fPacket"/>
			<dependency name="e_iAction"/>
			<dependency name="e_iAnimIndex"/>
			<dependency name="e_iDrunk"/>
			<dependency name="e_iFrames"/>
			<dependency name="e_iHoldTimer"/>
			<dependency name="e_iHoverColor"/>
			<dependency name="e_iLastAmmo"/>
			<dependency name="e_iLastGun"/>
			<dependency name="e_iMoney"/>
			<dependency name="e_iShotsFired"/>
			<dependency name="e_iTargetID"/>
			<dependency name="e_iVehicleID"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<dependency name="s_aPlayerTickInfo"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:SaveComponent" syntax="SaveComponent(vehicleid, componentid)">
			<stacksize value="25"/>
			<referrer name="OnVehicleMod"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="bscoop"/>
			<dependency name="bventl"/>
			<dependency name="bventr"/>
			<dependency name="exhaust"/>
			<dependency name="fbbars"/>
			<dependency name="fbumper"/>
			<dependency name="gQuery"/>
			<dependency name="hydraulics"/>
			<dependency name="lskirt"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="nitro"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvComponents"/>
			<dependency name="pvID"/>
			<dependency name="rbbars"/>
			<dependency name="rbumper"/>
			<dependency name="rscoop"/>
			<dependency name="rskirt"/>
			<dependency name="spoiler"/>
			<dependency name="true"/>
			<dependency name="vbase"/>
			<dependency name="vehicle_personal"/>
			<dependency name="vlights"/>
			<dependency name="wheels"/>
			<param name="vehicleid">
			</param>
			<param name="componentid">
			</param>
		</member>
		<member name="M:ScriptInit_OnFilterScriptExit" syntax="ScriptInit_OnFilterScriptExit()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_ALS"/>
			<referrer name="OnFilterScriptExit"/>
		</member>
		<member name="M:ScriptInit_OnFilterScriptInit" syntax="ScriptInit_OnFilterScriptInit()">
			<attribute name="public"/>
			<stacksize value="31"/>
			<automaton name="_ALS"/>
			<referrer name="OnFilterScriptInit"/>
			<dependency name="GetMaxPlayers"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Init"/>
			<dependency name="SSCANF_IsConnected"/>
			<dependency name="SSCANF_Join"/>
			<dependency name="SSCANF_gInit"/>
			<dependency name="true"/>
		</member>
		<member name="M:ScriptInit_OnGameModeExit" syntax="ScriptInit_OnGameModeExit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<automaton name="_ALS"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="SQL"/>
			<dependency name="destroyServerTextDraws"/>
			<dependency name="mysql_close"/>
			<dependency name="true"/>
		</member>
		<member name="M:ScriptInit_OnGameModeInit" syntax="ScriptInit_OnGameModeInit()">
			<attribute name="public"/>
			<stacksize value="2"/>
			<automaton name="_ALS"/>
			<referrer name="OnGameModeInit"/>
			<dependency name="PC_Init"/>
		</member>
		<member name="M:ScriptInit_OnScriptExit" syntax="ScriptInit_OnScriptExit()">
			<attribute name="public"/>
			<stacksize value="13"/>
			<automaton name="_ALS"/>
			<referrer name="OnFilterScriptExit"/>
			<referrer name="OnGameModeExit"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Master_OnScriptExit"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="_@"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<returns>  OnGameModeExit  </returns>  <remarks>  Destructor.  </remarks> 
		</member>
		<member name="M:ScriptInit_OnScriptInit" syntax="ScriptInit_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="print"/>
		</member>
		<member name="M:SelectTextDraw" syntax="SelectTextDraw(playerid, hovercolor)">
			<attribute name="native"/>
			<referrer name="CB_SelectTextDraw"/>
			<param name="playerid">
			</param>
			<param name="hovercolor">
			</param>
		</member>
		<member name="M:SendClientMessage" syntax="SendClientMessage(playerid, color, message[])">
			<attribute name="native"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="sendSplitMessage"/>
			<referrer name="showStats"/>
			<referrer name="showLicenses"/>
			<referrer name="sendPlayerError"/>
			<referrer name="sendPlayerSyntax"/>
			<referrer name="clearChat"/>
			<referrer name="sendAdmin"/>
			<referrer name="sendHelper"/>
			<referrer name="sendStaff"/>
			<referrer name="oocNews"/>
			<referrer name="examenFail"/>
			<referrer name="kickPlayer"/>
			<referrer name="dialog_EMAIL"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_SPAWNCHANGE"/>
			<referrer name="dialog_TOG"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="showMDC"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="FishingTimer"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="usedrugsTimer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_deletemyad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="dialog_DIALOG_CLAN"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="resetQuest"/>
			<referrer name="checkMission"/>
			<referrer name="Reclama"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="TimerWanted"/>
			<referrer name="Timers"/>
			<referrer name="TimerTutorial"/>
			<referrer name="PayDay"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_ah"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_animlist"/>
			<referrer name="pc_cmd_dance"/>
			<referrer name="pc_cmd_jumpwater"/>
			<referrer name="pc_cmd_quests"/>
			<referrer name="pc_cmd_wthelp"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="InsertEmail"/>
			<referrer name="CalculateEmails"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendClientMessageToAll" syntax="SendClientMessageToAll(color, message[])">
			<attribute name="native"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="checkPanel"/>
			<referrer name="BanIPPlayer"/>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToAll" syntax="SendPlayerMessageToAll(senderid, message[])">
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<param name="senderid">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendPlayerMessageToPlayer" syntax="SendPlayerMessageToPlayer(playerid, senderid, message[])">
			<attribute name="native"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SendRconCommand" syntax="SendRconCommand(command[])">
			<attribute name="native"/>
			<referrer name="MySQLLoad"/>
			<param name="command">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetAmxFrame" syntax="SetAmxFrame(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
		</member>
		<member name="M:SetAmxHeapTop" syntax="SetAmxHeapTop(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
		</member>
		<member name="M:SetAmxNextInstructionPointer" syntax="SetAmxNextInstructionPointer(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
		</member>
		<member name="M:SetAmxStackBottom" syntax="SetAmxStackBottom(ptr)">
			<stacksize value="1"/>
			<param name="ptr">
			</param>
		</member>
		<member name="M:SetCameraBehindPlayer" syntax="SetCameraBehindPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SetClanTag" syntax="SetClanTag(playerid)">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<referrer name="dialog_DIALOG_CLANTAG"/>
			<dependency name="SetPlayerName"/>
			<dependency name="cTag"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="pClan"/>
			<dependency name="pClanTag"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SetCurrentFramePreviousFrame" syntax="SetCurrentFramePreviousFrame(addr)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFramePreviousFrame"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:SetCurrentFrameReturn" syntax="SetCurrentFrameReturn(addr)">
			<stacksize value="5"/>
			<referrer name="I@L"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFrameReturn"/>
			<param name="addr">
			</param>
		</member>
		<member name="M:SetCurrentParameterCount" syntax="SetCurrentParameterCount(count)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFrameParameterCount"/>
			<param name="count">
			</param>
		</member>
		<member name="M:SetCurrentParameterSize" syntax="SetCurrentParameterSize(size)">
			<stacksize value="5"/>
			<dependency name="GetCallerFrame"/>
			<dependency name="SetFrameParameterSize"/>
			<param name="size">
			</param>
		</member>
		<member name="M:SetDynamicObjectMaterial" syntax="SetDynamicObjectMaterial(objectid, materialindex, modelid, txdname[], texturename[], materialcolor)">
			<attribute name="native"/>
			<referrer name="loadMaps"/>
			<param name="objectid">
			</param>
			<param name="materialindex">
			</param>
			<param name="modelid">
			</param>
			<param name="txdname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="texturename">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialcolor">
			</param>
		</member>
		<member name="M:SetFrameLocal" syntax="SetFrameLocal(frm_addr, param, value)">
			<stacksize value="1"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:SetFrameParameter" syntax="SetFrameParameter(frm_addr, param, value, idx)">
			<stacksize value="1"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="value">
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:SetFrameParameterCount" syntax="SetFrameParameterCount(frm_addr, count)">
			<stacksize value="5"/>
			<referrer name="SetCurrentParameterCount"/>
			<dependency name="SetFrameParameterSize"/>
			<param name="frm_addr">
			</param>
			<param name="count">
			</param>
		</member>
		<member name="M:SetFrameParameterSize" syntax="SetFrameParameterSize(frm_addr, size)">
			<stacksize value="1"/>
			<referrer name="SetFrameParameterCount"/>
			<referrer name="SetCurrentParameterSize"/>
			<param name="frm_addr">
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:SetFramePreviousFrame" syntax="SetFramePreviousFrame(frm_addr, addr)">
			<stacksize value="1"/>
			<referrer name="SetCurrentFramePreviousFrame"/>
			<referrer name="Callback_Restore"/>
			<param name="frm_addr">
			</param>
			<param name="addr">
			</param>
		</member>
		<member name="M:SetFrameReturn" syntax="SetFrameReturn(frm_addr, addr)">
			<stacksize value="1"/>
			<referrer name="SetCurrentFrameReturn"/>
			<referrer name="Callback_Restore"/>
			<param name="frm_addr">
			</param>
			<param name="addr">
			</param>
		</member>
		<member name="M:SetFrameVariable" syntax="SetFrameVariable(frm_addr, param, value, idx)">
			<stacksize value="1"/>
			<param name="frm_addr">
			</param>
			<param name="param">
			</param>
			<param name="value">
			</param>
			<param name="idx">
			</param>
		</member>
		<member name="M:SetGameModeText" syntax="SetGameModeText(string[])">
			<attribute name="native"/>
			<referrer name="MySQLLoad"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetNameTagDrawDistance" syntax="SetNameTagDrawDistance(distance)">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetObjectMaterialText" syntax="SetObjectMaterialText(objectid, text[], materialindex, materialsize, fontface[], fontsize, bold, fontcolor, backcolor, textalignment)">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<param name="objectid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="materialindex">
			</param>
			<param name="materialsize">
			</param>
			<param name="fontface">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="fontsize">
			</param>
			<param name="bold">
			</param>
			<param name="fontcolor">
			</param>
			<param name="backcolor">
			</param>
			<param name="textalignment">
			</param>
		</member>
		<member name="M:SetPVarInt" syntax="SetPVarInt(playerid, varname[], int_value)">
			<attribute name="native"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="BanIPOffline"/>
			<referrer name="dialog_MY_GARAGE"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_engine"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="int_value">
			</param>
		</member>
		<member name="M:SetPVarString" syntax="SetPVarString(playerid, varname[], string_value[])">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV"/>
			<param name="playerid">
			</param>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string_value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerArmour" syntax="SetPlayerArmour(playerid, armour)">
			<attribute name="native"/>
			<referrer name="SetPlayerArmourEx"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerArmourEx" syntax="SetPlayerArmourEx(playerid, armour)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="SetPlayerArmour"/>
			<dependency name="pArmour"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="armour">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerAttachedObject" syntax="SetPlayerAttachedObject(playerid, index, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ, materialcolor1, materialcolor2)">
			<attribute name="native"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_fish"/>
			<param name="playerid">
			</param>
			<param name="index">
			</param>
			<param name="modelid">
			</param>
			<param name="bone">
			</param>
			<param name="fOffsetX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fOffsetZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fRotZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleX">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleY">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fScaleZ">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="materialcolor1">
			</param>
			<param name="materialcolor2">
			</param>
		</member>
		<member name="M:SetPlayerCameraLookAt" syntax="SetPlayerCameraLookAt(playerid, x, y, z, cut)">
			<attribute name="native"/>
			<referrer name="ShowCamera"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="cut">
			</param>
		</member>
		<member name="M:SetPlayerCameraPos" syntax="SetPlayerCameraPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="ShowCamera"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerChatBubble" syntax="SetPlayerChatBubble(playerid, text[], color, drawdistance, expiretime)">
			<attribute name="native"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="OnPlayerText"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="drawdistance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="expiretime">
			</param>
		</member>
		<member name="M:SetPlayerCheckpoint" syntax="SetPlayerCheckpoint(playerid, x, y, z, size)">
			<attribute name="native"/>
			<referrer name="dialog_GPS1"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="TimerGetHit"/>
			<referrer name="dialog_TRUCKER_SELECT"/>
			<referrer name="dialog_TRUCKER_SELECTTWO"/>
			<referrer name="dialog_TRUCKER_SELECTTHREE"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimersWantedFind"/>
			<referrer name="TimerCarFind"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="size">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerColor" syntax="SetPlayerColor(playerid, color)">
			<attribute name="native"/>
			<referrer name="SetPlayerToFactionColor"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:SetPlayerDrunkLevel" syntax="SetPlayerDrunkLevel(playerid, level)">
			<attribute name="native"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="Timers"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
		</member>
		<member name="M:SetPlayerFacingAngle" syntax="SetPlayerFacingAngle(playerid, ang)">
			<attribute name="native"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
			</param>
			<param name="ang">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerFreeze" syntax="SetPlayerFreeze(playerid, time)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="OnPlayerDeath"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="gettime"/>
			<dependency name="pUnFreezeTime"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="time">
			</param>
		</member>
		<member name="M:SetPlayerHealth" syntax="SetPlayerHealth(playerid, health)">
			<attribute name="native"/>
			<referrer name="SetPlayerHealthEx"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerHealthEx" syntax="SetPlayerHealthEx(playerid, health)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="usedrugsTimer"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="SetPlayerHealth"/>
			<dependency name="pHealth"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerInterior" syntax="SetPlayerInterior(playerid, interiorid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="respawnTimer"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="playerid">
			</param>
			<param name="interiorid">
			</param>
		</member>
		<member name="M:SetPlayerLookAt" syntax="SetPlayerLookAt(playerid, x, y)">
			<stacksize value="9"/>
			<referrer name="Fly"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="operator&lt;=(Float:,Float:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPlayerFacingAngle"/>
			<dependency name="atan"/>
			<dependency name="floatabs"/>
			<dependency name="floatadd"/>
			<dependency name="floatsub"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerName" syntax="SetPlayerName(playerid, name[])">
			<attribute name="native"/>
			<referrer name="SetClanTag"/>
			<referrer name="pc_cmd_acover"/>
			<param name="playerid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerPos" syntax="SetPlayerPos(playerid, x, y, z)">
			<attribute name="native"/>
			<referrer name="StartFly"/>
			<referrer name="StopFly"/>
			<referrer name="examenFail"/>
			<referrer name="slapPlayer"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="Timers"/>
			<referrer name="respawnTimer"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerScore" syntax="SetPlayerScore(playerid, score)">
			<attribute name="native"/>
			<referrer name="resetVars"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_buylevel"/>
			<param name="playerid">
			</param>
			<param name="score">
			</param>
		</member>
		<member name="M:SetPlayerSkin" syntax="SetPlayerSkin(playerid, skinid)">
			<attribute name="native"/>
			<referrer name="setSkin"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="whenPlayerLeaveFaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="OnPlayerSpawn"/>
			<param name="playerid">
			</param>
			<param name="skinid">
			</param>
		</member>
		<member name="M:SetPlayerSpecialAction" syntax="SetPlayerSpecialAction(playerid, actionid)">
			<attribute name="native"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_handsup"/>
			<referrer name="pc_cmd_pee"/>
			<referrer name="pc_cmd_dance"/>
			<referrer name="OnPlayerDeath"/>
			<param name="playerid">
			</param>
			<param name="actionid">
			</param>
		</member>
		<member name="M:SetPlayerToFactionColor" syntax="SetPlayerToFactionColor(playerid)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="SetPlayerColor"/>
			<dependency name="false"/>
			<dependency name="pFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:SetPlayerVelocity" syntax="SetPlayerVelocity(playerid, X, Y, Z)">
			<attribute name="native"/>
			<referrer name="Fly"/>
			<param name="playerid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetPlayerVirtualWorld" syntax="SetPlayerVirtualWorld(playerid, worldid)">
			<attribute name="native"/>
			<referrer name="examenFail"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="TimerWar"/>
			<referrer name="Timers"/>
			<referrer name="TimerTutorial"/>
			<referrer name="respawnTimer"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<param name="playerid">
			</param>
			<param name="worldid">
			</param>
		</member>
		<member name="M:SetPlayerWantedLevel" syntax="SetPlayerWantedLevel(playerid, level)">
			<attribute name="native"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerWanted"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="OnPlayerDeath"/>
			<param name="playerid">
			</param>
			<param name="level">
			</param>
		</member>
		<member name="M:SetPlayerWeather" syntax="SetPlayerWeather(playerid, weather)">
			<attribute name="native"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="usedrugsTimer"/>
			<param name="playerid">
			</param>
			<param name="weather">
			</param>
		</member>
		<member name="M:SetTimer" syntax="SetTimer(funcname[], interval, repeating)">
			<attribute name="native"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="_Timer_I"/>
			<referrer name="SSCANF_OnFilterScriptInit"/>
			<referrer name="SSCANF_OnGameModeInit"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
		</member>
		<member name="M:SetTimerEx" syntax="SetTimerEx(funcname[], interval, repeating, format[], ...)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="_@_y_cgen_@_0"/>
			<referrer name="@yH_OnPlayerDisconnect@002"/>
			<referrer name="@yH_OnScriptInit@003"/>
			<referrer name="_Timer_D"/>
			<referrer name="Fly"/>
			<referrer name="CB_ApplyAnimation"/>
			<referrer name="OnPlayerKeyStateChange"/>
			<param name="funcname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="repeating">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleHealth" syntax="SetVehicleHealth(vehicleid, health)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<param name="vehicleid">
			</param>
			<param name="health">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleNumberPlate" syntax="SetVehicleNumberPlate(vehicleid, numberplate[])">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_park"/>
			<param name="vehicleid">
			</param>
			<param name="numberplate">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleParamsEx" syntax="SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="OnVehicleSpawn"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<param name="vehicleid">
			</param>
			<param name="engine">
			</param>
			<param name="lights">
			</param>
			<param name="alarm">
			</param>
			<param name="doors">
			</param>
			<param name="bonnet">
			</param>
			<param name="boot">
			</param>
			<param name="objective">
			</param>
		</member>
		<member name="M:SetVehicleParamsForPlayer" syntax="SetVehicleParamsForPlayer(vehicleid, playerid, objective, doorslocked)">
			<attribute name="native"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
			</param>
			<param name="playerid">
			</param>
			<param name="objective">
			</param>
			<param name="doorslocked">
			</param>
		</member>
		<member name="M:SetVehiclePos" syntax="SetVehiclePos(vehicleid, x, y, z)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<param name="vehicleid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleVelocity" syntax="SetVehicleVelocity(vehicleid, X, Y, Z)">
			<attribute name="native"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="vehicleid">
			</param>
			<param name="X">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="Z">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:SetVehicleVirtualWorld" syntax="SetVehicleVirtualWorld(vehicleid, worldid)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<param name="vehicleid">
			</param>
			<param name="worldid">
			</param>
		</member>
		<member name="M:SetVehicleZAngle" syntax="SetVehicleZAngle(vehicleid, z_angle)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_flipveh"/>
			<param name="vehicleid">
			</param>
			<param name="z_angle">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:ShowCamera" syntax="ShowCamera(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="pc_cmd_buycar"/>
			<dependency name="SetPlayerCameraLookAt"/>
			<dependency name="SetPlayerCameraPos"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowDealerShipTD" syntax="ShowDealerShipTD(playerid)">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="pc_cmd_buycar"/>
			<dependency name="DSModels"/>
			<dependency name="DSModels"/>
			<dependency name="DealerID"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SelectedCar"/>
			<dependency name="SpeedVehicle"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="dModel"/>
			<dependency name="dPrice"/>
			<dependency name="dStock"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="serverDealerTD"/>
			<dependency name="true"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowEmails" syntax="ShowEmails(playerid)">
			<attribute name="public"/>
			<stacksize value="244"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="pSelectedItem"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:ShowPlayerDialog" syntax="ShowPlayerDialog(playerid, dialogid, style, caption[], info[], button1[], button2[])">
			<attribute name="native"/>
			<referrer name="ShowPlayerDialogEx"/>
			<referrer name="Dialog_Close"/>
			<referrer name="Dialog_Open"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowPlayerDialogEx" syntax="ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ShowPlayerDialog"/>
			<dependency name="acDialog"/>
			<param name="playerid">
			</param>
			<param name="dialogid">
			</param>
			<param name="style">
			</param>
			<param name="caption">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="info">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="button2">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:ShowPlayerMarkers" syntax="ShowPlayerMarkers(mode)">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
			<param name="mode">
			</param>
		</member>
		<member name="M:ShowPlayerNameTagForPlayer" syntax="ShowPlayerNameTagForPlayer(playerid, showplayerid, show)">
			<attribute name="native"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="showplayerid">
			</param>
			<param name="show">
			</param>
		</member>
		<member name="M:SkipWhitespace" syntax="SkipWhitespace(str[], pos)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to skip over part of.
			</param>
			<param name="pos">
				The start of the whitespace.
			</param>
			    <returns>  The end of the whitespace.  </returns>  <remarks>  Doesn't skip over NULL terminators.  </remarks> 
		</member>
		<member name="M:SpawnPlayer" syntax="SpawnPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="whenPlayerLeaveFaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerTutorial"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerRequestSpawn"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StartFly" syntax="StartFly(playerid)">
			<tagname value="bool"/>
			<stacksize value="15"/>
			<referrer name="pc_cmd_fly"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="ApplyAnimation"/>
			<dependency name="Fly"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="OnFly"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopAudioStreamForPlayer" syntax="StopAudioStreamForPlayer(playerid)">
			<attribute name="native"/>
			<referrer name="TimerTutorial"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopFly" syntax="StopFly(playerid)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="OnFly"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StopLoopingAnim" syntax="StopLoopingAnim(playerid)">
			<stacksize value="13"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:StoredF_IsHooked" syntax="StoredF_IsHooked(addr)">
			<stacksize value="4"/>
			<referrer name="StoredF_WritePublicCode"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_Read"/>
			<dependency name="OP_JUMP"/>
			<dependency name="RelocateOpcode"/>
			<param name="addr">
				Function start address.
			</param>
			  <returns>  Is the function at this address already hooked by us?  </returns> 
		</member>
		<member name="M:StoredF_OnPubGenError" syntax="StoredF_OnPubGenError(ctx[], error)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="Debug_Print0"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
				Current code generation context.
			</param>
			<param name="error">
				<paraminfo>AsmError </paraminfo>
				The error given.
			</param>
			    <remarks>  This is a fatal error as there isn't really anything we can do about it.  </remarks> 
		</member>
		<member name="M:StoredF_WritePublicCode" syntax="StoredF_WritePublicCode(fptr, spec[])">
			<stacksize value="29"/>
			<referrer name="GetLocalFunction"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AMX_HEADER_PUBLICS"/>
			<dependency name="AMX_REAL_DATA"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_Write"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitJump"/>
			<dependency name="AsmEmitLrefSAlt"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitStorSAlt"/>
			<dependency name="AsmEmitStorSPri"/>
			<dependency name="AsmEmitSwapAlt"/>
			<dependency name="AsmEmitSwapPri"/>
			<dependency name="AsmGetCodeSize"/>
			<dependency name="AsmSetErrorHandler"/>
			<dependency name="CGen_AddCodeSpace"/>
			<dependency name="CGen_GetCodeSpace"/>
			<dependency name="CGen_UseCodeSpace"/>
			<dependency name="GetPublicAddressFromName"/>
			<dependency name="StoredF_IsHooked"/>
			<dependency name="strlen"/>
			<param name="fptr">
				Function start address.
			</param>
			<param name="spec">
				<paraminfo> [] </paraminfo>
				Function parameter types.
			</param>
			    <returns>  the new function pointer.  </returns>  <remarks>  Writes a stub for calling a public function with an alternate method.  Because "CallStoredFunction" (the call entry point) takes all its parameters  by reference and some of the actual function's parameters won't be, we have  to generate the code to convert those that aren't to values only.  Also,  because "CallStoredFunction" takes an extra parameter that's the address of  the function to call, we have to wipe that from the stack and update the  resulting frame header.  </remarks> 
		</member>
		<member name="M:StrToLower" syntax="StrToLower(str[], len)">
			<stacksize value="5"/>
			<dependency name="tolower"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to convert.
			</param>
			<param name="len">
				How much of the string to convert.
			</param>
			   
		</member>
		<member name="M:StrToUpper" syntax="StrToUpper(str[], len)">
			<stacksize value="5"/>
			<dependency name="toupper"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to convert.
			</param>
			<param name="len">
				How much of the string to convert.
			</param>
			   
		</member>
		<member name="M:Streamer_OnItemStreamIn" syntax="Streamer_OnItemStreamIn(type, id)">
			<stacksize value="1"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnItemStreamOut" syntax="Streamer_OnItemStreamOut(type, id)">
			<stacksize value="1"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_OnPluginError" syntax="Streamer_OnPluginError(error[])">
			<stacksize value="1"/>
			<param name="error">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Streamer_SetIntData" syntax="Streamer_SetIntData(type, id, data, value)">
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_createbusiness"/>
			<param name="type">
			</param>
			<param name="id">
				<paraminfo> {Text3D,_} </paraminfo>
			</param>
			<param name="data">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:Strip" syntax="Strip(str[])">
			<stacksize value="9"/>
			<dependency name="memcpy"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the start and end of.
			</param>
			 
		</member>
		<member name="M:StripL" syntax="StripL(str[])">
			<stacksize value="9"/>
			<dependency name="memcpy"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the start of.
			</param>
			 
		</member>
		<member name="M:StripNL" syntax="StripNL(str[])">
			<stacksize value="4"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to remove whitespace from the end of.
			</param>
			  <remarks>  Updated from old versions, should be more efficient  </remarks> 
		</member>
		<member name="M:Sum" syntax="Sum(arr[], num)">
			<stacksize value="2"/>
			<referrer name="Mean"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array whose values need summing.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <returns>  All the values in the array added together.  </returns> 
		</member>
		<member name="M:SysreqC" syntax="SysreqC(index, auto_pop)">
			<stacksize value="9"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="index">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SysreqCN" syntax="SysreqCN(index, args_to_push, auto_pop)">
			<stacksize value="10"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="index">
			</param>
			<param name="args_to_push">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SysreqD" syntax="SysreqD(address, auto_pop)">
			<stacksize value="9"/>
			<referrer name="RunShellcode"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:SysreqDN" syntax="SysreqDN(address, args_to_push, auto_pop)">
			<stacksize value="10"/>
			<dependency name="GetJITGeneratorVersion"/>
			<dependency name="OP_SYSREQ_D"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="cellmin"/>
			<dependency name="g_args"/>
			<dependency name="g_nargs"/>
			<param name="address">
			</param>
			<param name="args_to_push">
			</param>
			<param name="auto_pop">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawAlignment" syntax="TextDrawAlignment(text, alignment)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="alignment">
			</param>
		</member>
		<member name="M:TextDrawBackgroundColor" syntax="TextDrawBackgroundColor(text, color)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:TextDrawBoxColor" syntax="TextDrawBoxColor(text, color)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:TextDrawColor" syntax="TextDrawColor(text, color)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="color">
			</param>
		</member>
		<member name="M:TextDrawCreate" syntax="TextDrawCreate(x, y, text[])">
			<tagname value="Text"/>
			<attribute name="native"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="serverTextDraws"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawDestroy" syntax="TextDrawDestroy(text)">
			<attribute name="native"/>
			<referrer name="destroyServerTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawFont" syntax="TextDrawFont(text, font)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="font">
			</param>
		</member>
		<member name="M:TextDrawHideForPlayer" syntax="TextDrawHideForPlayer(playerid, text)">
			<attribute name="native"/>
			<referrer name="HideDealerShipTD"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawLetterSize" syntax="TextDrawLetterSize(text, x, y)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawSetOutline" syntax="TextDrawSetOutline(text, size)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:TextDrawSetProportional" syntax="TextDrawSetProportional(text, set)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="set">
			</param>
		</member>
		<member name="M:TextDrawSetSelectable" syntax="TextDrawSetSelectable(text, set)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="set">
			</param>
		</member>
		<member name="M:TextDrawSetShadow" syntax="TextDrawSetShadow(text, size)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:TextDrawSetString" syntax="TextDrawSetString(text, string[])">
			<attribute name="native"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerM"/>
			<referrer name="Timers"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawShowForPlayer" syntax="TextDrawShowForPlayer(playerid, text)">
			<attribute name="native"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="ShowDealerShipTD"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawTextSize" syntax="TextDrawTextSize(text, x, y)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:TextDrawUseBox" syntax="TextDrawUseBox(text, use)">
			<attribute name="native"/>
			<referrer name="serverTextDraws"/>
			<param name="text">
				<paraminfo>Text </paraminfo>
			</param>
			<param name="use">
			</param>
		</member>
		<member name="M:TimerCar" syntax="TimerCar(i)">
			<stacksize value="13"/>
			<referrer name="TimerCar@_yT"/>
			<dependency name="CHECKPOINT_FINDCAR"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="EOS"/>
			<dependency name="GetVehicleDamageStatus"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="SQL"/>
			<dependency name="false"/>
			<dependency name="gQuery"/>
			<dependency name="getVehicleOwner"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvOwnerID"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="true"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerCar@_yT" syntax="TimerCar@_yT(__r, i)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerCar"/>
			<param name="__r">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerCarFind" syntax="TimerCarFind(playerid)">
			<stacksize value="10"/>
			<referrer name="TimerCarFind@_yT"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerCarFind@_yT" syntax="TimerCarFind@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerCarFind"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerCarFind_yT@" syntax="TimerCarFind_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerCar_yT@" syntax="TimerCar_yT@(i)">
			<stacksize value="9"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<dependency name="gettime"/>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerGetHit" syntax="TimerGetHit(playerid)">
			<stacksize value="10"/>
			<referrer name="TimerGetHit@_yT"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Contract"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerGetHit@_yT" syntax="TimerGetHit@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerGetHit"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerGetHit_yT@" syntax="TimerGetHit_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_gethit"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerJail" syntax="TimerJail(i)">
			<stacksize value="7"/>
			<referrer name="TimerJail@_yT"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@JailedPlayers"/>
			<dependency name="Iterator@JailedPlayers"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="_Timer_F"/>
			<dependency name="jailTime"/>
			<dependency name="jailTimeTD"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="va_SendClientMessage"/>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerJail@_yT" syntax="TimerJail@_yT(__r, i)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerJail"/>
			<param name="__r">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerJail_yT@" syntax="TimerJail_yT@(i)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="OnPlayerDeath"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerM" syntax="TimerM()">
			<attribute name="public"/>
			<stacksize value="4111"/>
			<dependency name="ClockTD"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="string_fast"/>
		</member>
		<member name="M:TimerPos" syntax="TimerPos(playerid)">
			<stacksize value="6"/>
			<referrer name="TimerPos@_yT"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="pLastPosX"/>
			<dependency name="pLastPosY"/>
			<dependency name="pLastPosZ"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerPos@_yT" syntax="TimerPos@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerPos"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerPos_yT@" syntax="TimerPos_yT@(playerid)">
			<stacksize value="8"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerSpeedo" syntax="TimerSpeedo(playerid)">
			<stacksize value="4114"/>
			<referrer name="TimerSpeedo@_yT"/>
			<dependency name="operator/(Float:,_:)"/>
			<dependency name="operator*(Float:,_:)"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="_Timer_F"/>
			<dependency name="getVehicleSpeed"/>
			<dependency name="isBike"/>
			<dependency name="isBoat"/>
			<dependency name="isPlane"/>
			<dependency name="pc_cmd_engine"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvFuel"/>
			<dependency name="pvLock"/>
			<dependency name="pvOdometer"/>
			<dependency name="reverse"/>
			<dependency name="speedo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="vehicleHud"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerSpeedo@_yT" syntax="TimerSpeedo@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerSpeedo"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerSpeedo_yT@" syntax="TimerSpeedo_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerTutorial" syntax="TimerTutorial(playerid)">
			<stacksize value="4104"/>
			<referrer name="TimerTutorial@_yT"/>
			<dependency name="InterpolateCameraLookAt"/>
			<dependency name="InterpolateCameraPos"/>
			<dependency name="PlayAudioStreamForPlayer"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="StopAudioStreamForPlayer"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="_Timer_F"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pTutorial"/>
			<dependency name="pTutorialActive"/>
			<dependency name="pTutorialSeconds"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="tutorial"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerTutorial@_yT" syntax="TimerTutorial@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerTutorial"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerTutorial_yT@" syntax="TimerTutorial_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="dialog_GENDER"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimerWanted" syntax="TimerWanted(x)">
			<stacksize value="8"/>
			<referrer name="TimerWanted@_yT"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="_Timer_F"/>
			<dependency name="pSQLID"/>
			<dependency name="pWantedLevel"/>
			<dependency name="pWantedTime"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPolice"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="wantedTD"/>
			<dependency name="wantedTime"/>
			<param name="x">
			</param>
		</member>
		<member name="M:TimerWanted@_yT" syntax="TimerWanted@_yT(__r, x)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerWanted"/>
			<param name="__r">
			</param>
			<param name="x">
			</param>
		</member>
		<member name="M:TimerWanted_yT@" syntax="TimerWanted_yT@(x)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="onPlayerLogin"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="x">
			</param>
		</member>
		<member name="M:TimerWar" syntax="TimerWar(i)">
			<stacksize value="118"/>
			<referrer name="TimerWar@_yT"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="GangZoneFlashForPlayer"/>
			<dependency name="GangZoneHideForPlayerEx"/>
			<dependency name="GangZoneShowForPlayerEx"/>
			<dependency name="GangZoneStopFlashForPlayer"/>
			<dependency name="InWar"/>
			<dependency name="IsPlayerInTurf"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@ServerWars"/>
			<dependency name="Iterator@ServerWars"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="WarScore"/>
			<dependency name="WarScore"/>
			<dependency name="_Timer_F"/>
			<dependency name="decese"/>
			<dependency name="decese"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="pFaction"/>
			<dependency name="pOnTurf"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="tID"/>
			<dependency name="tOwned"/>
			<dependency name="true"/>
			<dependency name="turfInfo"/>
			<dependency name="turfInfo"/>
			<dependency name="ucideri"/>
			<dependency name="ucideri"/>
			<dependency name="update"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wAttacker"/>
			<dependency name="wFaction"/>
			<dependency name="wTime"/>
			<dependency name="war"/>
			<dependency name="warInfo"/>
			<dependency name="warInfo"/>
			<dependency name="warTD"/>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerWar@_yT" syntax="TimerWar@_yT(__r, i)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimerWar"/>
			<param name="__r">
			</param>
			<param name="i">
			</param>
		</member>
		<member name="M:TimerWar_yT@" syntax="TimerWar_yT@(i)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_attack"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="i">
			</param>
		</member>
		<member name="M:Timer_GetSingleSlot" syntax="Timer_GetSingleSlot(len)">
			<tagname value="Alloc"/>
			<stacksize value="6"/>
			<referrer name="_Timer_S"/>
			<referrer name="_Timer_A"/>
			<referrer name="_Timer_C"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<dependency name="YSI_g_sLastSlot"/>
			<param name="len">
			</param>
		</member>
		<member name="M:Timers" syntax="Timers()">
			<attribute name="public"/>
			<stacksize value="4119"/>
			<dependency name="operator++(Float:)"/>
			<dependency name="ClockTD"/>
			<dependency name="CountTime"/>
			<dependency name="GetPlayerAnimationIndex"/>
			<dependency name="GetPlayerDrunkLevel"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="GetServerTickRate"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerPaused"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@ServerClans"/>
			<dependency name="Iterator@JailedPlayers"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerClans"/>
			<dependency name="Iterator@TotalPlayerVehicles"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="MoveObject"/>
			<dependency name="PayDayTime"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerDrunkLevel"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="cDays"/>
			<dependency name="cellRandom"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="gates"/>
			<dependency name="gettime"/>
			<dependency name="mysql_tquery"/>
			<dependency name="mysql_unprocessed_queries"/>
			<dependency name="pAFKSeconds"/>
			<dependency name="pDrunkLevel"/>
			<dependency name="pFPS"/>
			<dependency name="pLastPosX"/>
			<dependency name="pLastPosY"/>
			<dependency name="pLastPosZ"/>
			<dependency name="pSeconds"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAge"/>
			<dependency name="random"/>
			<dependency name="resetQuest"/>
			<dependency name="secinmin"/>
			<dependency name="secinmin"/>
			<dependency name="serverHud"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="va_GameTextForAll"/>
			<dependency name="va_PlayerTextDrawSetString"/>
		</member>
		<member name="M:TimersWantedFind" syntax="TimersWantedFind(playerid)">
			<stacksize value="11"/>
			<referrer name="TimersWantedFind@_yT"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimersWantedFind@_yT" syntax="TimersWantedFind@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="TimersWantedFind"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimersWantedFind_yT@" syntax="TimersWantedFind_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:TimestampToDate" syntax="TimestampToDate(Timestamp, &amp;year, &amp;month, &amp;day, &amp;hour, &amp;minute, &amp;second, HourGMT, MinuteGMT)">
			<stacksize value="6"/>
			<dependency name="IsLeapYear"/>
			<dependency name="MonthTimes"/>
			<param name="Timestamp">
			</param>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="HourGMT">
			</param>
			<param name="MinuteGMT">
			</param>
		</member>
		<member name="M:ToHexStr" syntax="ToHexStr(x)">
			<stacksize value="15"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteDataRowHex"/>
			<referrer name="DisasmWriteData"/>
			<dependency name="ToHexStr"/>
			<param name="x">
			</param>
		</member>
		<member name="M:ToPrintableAscii" syntax="ToPrintableAscii(c)">
			<stacksize value="4"/>
			<referrer name="DisasmWriteDataRowChar"/>
			<dependency name="IsPrintableAscii"/>
			<param name="c">
			</param>
		</member>
		<member name="M:TogglePlayerControllable" syntax="TogglePlayerControllable(playerid, toggle)">
			<attribute name="native"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="CancelJob"/>
			<referrer name="SetPlayerFreeze"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="gasTimer"/>
			<referrer name="TimerTutorial"/>
			<referrer name="tazerTimer"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="InsertCarDS"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="OnPlayerRequestClass"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="playerid">
			</param>
			<param name="toggle">
			</param>
		</member>
		<member name="M:Translate32Bit" syntax="Translate32Bit(&amp;store_money, &amp;more_int, BigInt[])">
			<stacksize value="88"/>
			<referrer name="pc_cmd_givemoney"/>
			<dependency name="Add64Bit"/>
			<dependency name="format"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="store_money">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="more_int">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="BigInt">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:Trim" syntax="Trim(str[], &amp;start, &amp;end)">
			<stacksize value="1"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				The string to trim.
			</param>
			<param name="start">
				<paraminfo> &amp; </paraminfo>
				Start of the substring.
			</param>
			<param name="end">
				<paraminfo> &amp; </paraminfo>
				End of the substring.
			</param>
			      <remarks>  Modifies "start" and "end" to be tight on text in "str".  </remarks> 
		</member>
		<member name="M:TrollDetect" syntax="TrollDetect(playerid, hack)">
			<stacksize value="9"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVelocity"/>
			<dependency name="Kick"/>
			<dependency name="acVelocity"/>
			<dependency name="acVelocity"/>
			<dependency name="false"/>
			<dependency name="pFlymode"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="printf"/>
			<param name="playerid">
			</param>
			<param name="hack">
			</param>
		</member>
		<member name="M:U@" syntax="U@(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="Master_Reassert"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:UCMP" syntax="UCMP(value, upper)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="value">
				The unsigned number to compare.
			</param>
			<param name="upper">
				The upper limit.
			</param>
			    <returns>  An unsigned comparison between the two values.  </returns> 
		</member>
		<member name="M:UnrelocateOpcode" syntax="UnrelocateOpcode(opcode)">
			<tagname value="Opcode"/>
			<stacksize value="3"/>
			<referrer name="GetFrameFunction"/>
			<referrer name="DisasmDecodeInsn"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<dependency name="InitOpcodeTable"/>
			<dependency name="NUM_OPCODES"/>
			<dependency name="OP_NONE"/>
			<dependency name="opcode_table"/>
			<dependency name="opcode_table_is_ready"/>
			<param name="opcode">
				<paraminfo>Opcode </paraminfo>
			</param>
		</member>
		<member name="M:Update3DTextLabelText" syntax="Update3DTextLabelText(id, color, text[])">
			<attribute name="native"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_sellbiz"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:UpdateDynamic3DTextLabelText" syntax="UpdateDynamic3DTextLabelText(id, color, text[])">
			<attribute name="native"/>
			<referrer name="pc_cmd_flock"/>
			<param name="id">
				<paraminfo>Text3D </paraminfo>
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:UpdateVehicleDamageStatus" syntax="UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, tires)">
			<attribute name="native"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="pc_cmd_park"/>
			<param name="vehicleid">
			</param>
			<param name="panels">
			</param>
			<param name="doors">
			</param>
			<param name="lights">
			</param>
			<param name="tires">
			</param>
		</member>
		<member name="M:UsePlayerPedAnims" syntax="UsePlayerPedAnims()">
			<attribute name="native"/>
			<referrer name="CB_OnGameModeInit"/>
		</member>
		<member name="M:Utils_PreSort" syntax="Utils_PreSort(arr[], num)">
			<stacksize value="4"/>
			<referrer name="Mode"/>
			<referrer name="Median"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				The array to sort.
			</param>
			<param name="num">
				The size of the array.
			</param>
			    <remarks>  Sorts the array in place.  Uses bubble sort because it is easy and fast for  pre-sorted arrays (which the callers are likely to be).  </remarks> 
		</member>
		<member name="M:VALID_PLAYERID" syntax="VALID_PLAYERID(playerid)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="playerid">
				The player to check.
			</param>
			  <returns>  Is this a valid playerid (NOT, is the player connected).  </returns> 
		</member>
		<member name="M:VA_OnScriptInit" syntax="VA_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AMX_GetEntryPrefix"/>
			<dependency name="AMX_Read"/>
			<dependency name="AMX_TABLE_PUBLICS"/>
			<dependency name="CallFunction"/>
			<dependency name="HookChain_OnScriptInit"/>
			<dependency name="Hooks_DoAllHooks"/>
			<dependency name="Hooks_InvalidateName"/>
			<dependency name="Hooks_SortReplacements"/>
			<remarks>  Call the main hook run code, then advance the ALS chain.  </remarks>  <transition keep="true" target="_ALS : _ALS_go"/>  <transition target=""/>

		</member>
		<member name="M:Value64Bit" syntax="Value64Bit(ammount_store, ammount_more, value[])">
			<stacksize value="7"/>
			<referrer name="GetCashStr"/>
			<referrer name="FormatBigInt"/>
			<referrer name="GetBankMoney"/>
			<dependency name="format"/>
			<param name="ammount_store">
			</param>
			<param name="ammount_more">
			</param>
			<param name="value">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:W@" syntax="W@(function[], format[], ...)">
			<attribute name="native"/>
			<referrer name="Iter_ActorDo_"/>
			<referrer name="Iter_VehicleDo_"/>
			<referrer name="Malloc_DoPlayerConnect"/>
			<param name="function">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:WriteAmxCell" syntax="WriteAmxCell(offset, value)">
			<stacksize value="6"/>
			<dependency name="GetAmxAddress"/>
			<dependency name="WritePhysMemoryCell"/>
			<param name="offset">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:WriteAmxMemory" syntax="WriteAmxMemory(address, value)">
			<stacksize value="1"/>
			<referrer name="WriteAmxMemoryArray"/>
			<referrer name="HookPublic"/>
			<referrer name="HookNative"/>
			<referrer name="AsmEmitCell"/>
			<referrer name="AsmEmitLabelStringize"/>
			<referrer name="AsmEmitPadding"/>
			<param name="address">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:WriteAmxMemoryArray" syntax="WriteAmxMemoryArray(address, values[], size)">
			<stacksize value="6"/>
			<dependency name="WriteAmxMemory"/>
			<param name="address">
			</param>
			<param name="values">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
		</member>
		<member name="M:WritePhysMemory" syntax="WritePhysMemory(address, src[], num)">
			<stacksize value="5"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="num">
			</param>
		</member>
		<member name="M:WritePhysMemoryCell" syntax="WritePhysMemoryCell(address, what)">
			<stacksize value="5"/>
			<referrer name="WriteAmxCell"/>
			<dependency name="AbsToRel"/>
			<param name="address">
			</param>
			<param name="what">
			</param>
		</member>
		<member name="M:X@" syntax="X@(n)">
			<stacksize value="6"/>
			<dependency name="setproperty"/>
			<param name="n">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:Y@" syntax="Y@()">
			<stacksize value="6"/>
			<dependency name="_@"/>
			<dependency name="setproperty"/>
		</member>
		<member name="M:YHash" syntax="YHash(str[], sensitive, type, len, pack)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_accept"/>
			<dependency name="hash_bernstein"/>
			<dependency name="hash_fnv1"/>
			<dependency name="hash_fnv1a"/>
			<dependency name="min"/>
			<dependency name="strlen"/>
			<dependency name="toupper"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sensitive">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="type">
				<paraminfo>e_HASH_TYPE </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="pack">
			</param>
		</member>
		<member name="M:YSIM_OnMasterSystemInit" syntax="YSIM_OnMasterSystemInit()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="Master_GetCurrentMaster"/>
		</member>
		<member name="M:YVA2_CodeGenDeepCleanup" syntax="YVA2_CodeGenDeepCleanup(ctx[], depth, returningString)">
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="cellbits"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="depth">
			</param>
			<param name="returningString">
			</param>
		</member>
		<member name="M:YVA2_CodeGenMainCleanup" syntax="YVA2_CodeGenMainCleanup(ctx[])">
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitAdd"/>
			<dependency name="AsmEmitLctrl"/>
			<dependency name="AsmEmitLoadPri"/>
			<dependency name="AsmEmitPopAlt"/>
			<dependency name="AsmEmitSctrl"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="ref"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
		</member>
		<member name="M:YVA2_CodeGenPushSite" syntax="YVA2_CodeGenPushSite(ctx[], pushedBytes, skippedBytes, offset)">
			<stacksize value="7"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitAddrPri"/>
			<dependency name="AsmEmitCallAbs"/>
			<dependency name="AsmEmitHeap"/>
			<dependency name="AsmEmitPushC"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="YVA2_DoPush"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="pushedBytes">
			</param>
			<param name="skippedBytes">
			</param>
			<param name="offset">
			</param>
		</member>
		<member name="M:YVA2_CodeGenPushVariable" syntax="YVA2_CodeGenPushVariable(ctx[], stack)">
			<stacksize value="5"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="AsmEmitPushS"/>
			<param name="ctx">
				<paraminfo> [21] </paraminfo>
			</param>
			<param name="stack">
			</param>
		</member>
		<member name="M:YVA2_CodeGenShiftCode" syntax="YVA2_CodeGenShiftCode(dest, src, end)">
			<stacksize value="4"/>
			<referrer name="YVA2_FoundCall"/>
			<dependency name="OP_NOP"/>
			<dependency name="RelocateOpcode"/>
			<param name="dest">
			</param>
			<param name="src">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:YVA2_DoPush" syntax="YVA2_DoPush(skippedBytes, pushedBytes, pushRequirements)">
			<stacksize value="1"/>
			<referrer name="YVA2_DummyPush"/>
			<referrer name="YVA2_CodeGenPushSite"/>
			<dependency name="memcpy"/>
			<param name="skippedBytes">
			</param>
			<param name="pushedBytes">
			</param>
			<param name="pushRequirements">
			</param>
		</member>
		<member name="M:YVA2_DummyPush" syntax="YVA2_DummyPush(skippedBytes, pushedBytes, pushRequirements, dummy0, dummy1, dummy2, dummy3, dummy4, dummy5)">
			<stacksize value="6"/>
			<referrer name="YVA2_Initalise"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_print"/>
			<referrer name="va_fprintf"/>
			<referrer name="string_fast"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="update"/>
			<referrer name="sendPlayerError"/>
			<referrer name="sendPlayerSyntax"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="sendAdmin"/>
			<referrer name="sendHelper"/>
			<referrer name="sendStaff"/>
			<referrer name="oocNews"/>
			<referrer name="sendToAdmin"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="sendClanMessage"/>
			<dependency name="Debug_Print0"/>
			<dependency name="TRUE"/>
			<dependency name="YSI_g_sInitialised"/>
			<dependency name="YVA2_DoPush"/>
			<dependency name="YVA2_Initalise"/>
			<param name="skippedBytes">
			</param>
			<param name="pushedBytes">
			</param>
			<param name="pushRequirements">
			</param>
			<param name="dummy0">
			</param>
			<param name="dummy1">
			</param>
			<param name="dummy2">
			</param>
			<param name="dummy3">
			</param>
			<param name="dummy4">
			</param>
			<param name="dummy5">
			</param>
		</member>
		<member name="M:YVA2_FoundCall" syntax="YVA2_FoundCall(m[])">
			<stacksize value="34"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmContext_buffer_offset"/>
			<dependency name="AsmEmitHeap"/>
			<dependency name="AsmEmitPushAlt"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="CodeScanGetMatchAddressData"/>
			<dependency name="CodeScanGetMatchDisasm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="CodeScanGetMatchStack"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_POP_PRI"/>
			<dependency name="ReadAmxMemory"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sLength"/>
			<dependency name="YSI_g_sMaxNesting"/>
			<dependency name="YSI_g_sPassthroughNestings"/>
			<dependency name="YSI_g_sSkips"/>
			<dependency name="YSI_g_sStacks"/>
			<dependency name="YVA2_CodeGenDeepCleanup"/>
			<dependency name="YVA2_CodeGenMainCleanup"/>
			<dependency name="YVA2_CodeGenPushSite"/>
			<dependency name="YVA2_CodeGenPushVariable"/>
			<dependency name="YVA2_CodeGenShiftCode"/>
			<dependency name="cellbits"/>
			<dependency name="cellmax"/>
			<dependency name="cellmin"/>
			<param name="m">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:YVA2_FoundPush" syntax="YVA2_FoundPush(m[])">
			<stacksize value="29"/>
			<referrer name="YVA2_Initalise"/>
			<dependency name="CodeScanGetMatchAddress"/>
			<dependency name="CodeScanGetMatchAsm"/>
			<dependency name="CodeScanGetMatchDisasm"/>
			<dependency name="CodeScanGetMatchHole"/>
			<dependency name="CodeScanGetMatchLength"/>
			<dependency name="CodeScanGetMatchStack"/>
			<dependency name="Debug_Print0"/>
			<dependency name="DisasmContext"/>
			<dependency name="DisasmNextInsn"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="YSI_g_sContexts"/>
			<dependency name="YSI_g_sInitialised"/>
			<dependency name="YSI_g_sLength"/>
			<dependency name="YSI_g_sMaxNesting"/>
			<dependency name="YSI_g_sPassthroughNestings"/>
			<dependency name="YSI_g_sSkips"/>
			<dependency name="YSI_g_sStacks"/>
			<dependency name="cellbits"/>
			<dependency name="cellmin"/>
			<dependency name="max"/>
			<param name="m">
				<paraminfo> [211] </paraminfo>
			</param>
		</member>
		<member name="M:YVA2_Initalise" syntax="YVA2_Initalise()">
			<stacksize value="1742"/>
			<referrer name="YVA2_DummyPush"/>
			<referrer name="AMX_OnScriptInit"/>
			<dependency name="CodeScanAddMatcher"/>
			<dependency name="CodeScanInit"/>
			<dependency name="CodeScanMatcher"/>
			<dependency name="CodeScanMatcherInit_"/>
			<dependency name="CodeScanMatcherPattern_"/>
			<dependency name="CodeScanRun"/>
			<dependency name="CodeScanner"/>
			<dependency name="O@A_"/>
			<dependency name="O@V_"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_CONST_PRI"/>
			<dependency name="OP_HEAP"/>
			<dependency name="OP_MOVE_PRI"/>
			<dependency name="OP_PUSH_ALT"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="OP_PUSH_PRI"/>
			<dependency name="OP_STACK"/>
			<dependency name="OP_STOR_I"/>
			<dependency name="OP_SYSREQ_C"/>
			<dependency name="OP_ZERO_PRI"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="YVA2_FoundCall"/>
			<dependency name="YVA2_FoundPush"/>
			<dependency name="gCodeScanCallback_match"/>
		</member>
		<member name="M:YVers_Callback" syntax="YVers_Callback(index, code, data[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="false"/>
			<dependency name="print"/>
			<dependency name="printf"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<param name="index">
			</param>
			<param name="code">
			</param>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:YVers_OnScriptInit" syntax="YVers_OnScriptInit()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="Debug_Print0"/>
			<dependency name="Debug_SetState"/>
			<dependency name="YSI_FILTERSCRIPT"/>
			<remarks>  Does some strange mangling of <c>YSI_FILTERSCRIPT</c> because at one point I  found a compiler bug where the first automata in the script could conflict  with the first variable in the script.  I don't know what triggered it, and  it has never shown up since I messed about with this file to try mangle some  things.  Never the less, if it ever happens again this code might detect it.  Actually, that's less likely now, since that variable is now very unlikely  to be the first in the script ever.  </remarks> 
		</member>
		<member name="M:Z@" syntax="Z@(v)">
			<stacksize value="7"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<param name="v">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:_@_y_cgen_@_0" syntax="_@_y_cgen_@_0()">
			<attribute name="public"/>
			<stacksize value="60"/>
			<dependency name="SetTimerEx"/>
		</member>
		<member name="M:_@_y_cgen_@_1" syntax="_@_y_cgen_@_1()">
			<attribute name="public"/>
			<stacksize value="1"/>
		</member>
		<member name="M:_@_y_funcinc_@_" syntax="_@_y_funcinc_@_()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="CallLocalFunction"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="SetTimerEx"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="getproperty"/>
			<dependency name="heapspace"/>
			<dependency name="memcpy"/>
			<dependency name="memset"/>
			<dependency name="printf"/>
			<dependency name="setproperty"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
		</member>
		<member name="M:_@_y_inline_@_" syntax="_@_y_inline_@_()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="NULL"/>
			<dependency name="strcat"/>
			<dependency name="strcmp"/>
			<dependency name="strfind"/>
			<dependency name="strpack"/>
			<remarks>  Calls functions we call via "SYSREQ.C".  </remarks> 
		</member>
		<member name="M:_GetMapZoneLoopStartIndex" syntax="_GetMapZoneLoopStartIndex(x)">
			<stacksize value="9"/>
			<referrer name="GetMapZoneAtPoint"/>
			<referrer name="GetMapZoneAtPoint2D"/>
			<dependency name="operator==(Float:,Float:)"/>
			<dependency name="E_MAP_ZONE_AREA_MIN_X"/>
			<dependency name="MapZoneAreaData"/>
			<dependency name="floatcmp"/>
			<dependency name="true"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:_HookChain_IncludeStates" syntax="_HookChain_IncludeStates()">
			<stacksize value="1"/>
			<automaton name="_ALS"/>
		</member>
		<member name="M:_Hooks_AddReplacement" syntax="_Hooks_AddReplacement(longName[], shortName[])">
			<stacksize value="5"/>
			<referrer name="@_yHCheckpoint"/>
			<referrer name="@_yHContainer"/>
			<referrer name="@_yHInventory"/>
			<referrer name="@_yHDynamic"/>
			<referrer name="@_yHTextDraw"/>
			<referrer name="@_yHUpdate"/>
			<referrer name="@_yHObject"/>
			<referrer name="@_yHCommand"/>
			<referrer name="@_yHDynamicCP"/>
			<dependency name="Debug_Print0"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_LONG"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MAX"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_MIN"/>
			<dependency name="E_HOOK_NAME_REPLACEMENT_SHORT"/>
			<dependency name="YSI_g_sReplacePtr"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacements"/>
			<dependency name="YSI_g_sReplacementsLongOrder"/>
			<dependency name="YSI_g_sReplacementsShortOrder"/>
			<dependency name="strcat"/>
			<dependency name="strlen"/>
			<param name="longName">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="shortName">
				<paraminfo> [] </paraminfo>
			</param>
			<remarks>  Call the main hook run code, then advance the ALS chain.  </remarks> 
		</member>
		<member name="M:_Master_Get" syntax="_Master_Get(library[], force)">
			<tagname value="bool"/>
			<stacksize value="9"/>
			<referrer name="Master_GetCurrentMaster"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<dependency name="_@"/>
			<dependency name="existproperty"/>
			<dependency name="false"/>
			<dependency name="getproperty"/>
			<dependency name="setproperty"/>
			<dependency name="true"/>
			<param name="library">
				<paraminfo> [] </paraminfo>
				The name of the library to try become master for.
			</param>
			<param name="force">
				<paraminfo>bool </paraminfo>
			</param>
			 
		</member>
		<member name="M:_Master_Relinquish" syntax="_Master_Relinquish(library[])">
			<stacksize value="3"/>
			<referrer name="@a"/>
			<dependency name="YSI_g_sMasterCount"/>
			<dependency name="YSI_g_sMasterData"/>
			<param name="library">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:_ScriptInit_FixState" syntax="_ScriptInit_FixState()">
			<attribute name="public"/>
			<stacksize value="1"/>
			<automaton name="_script_init_fix_state"/>
		</member>
		<member name="M:_ScriptInit_IncludeStates" syntax="_ScriptInit_IncludeStates()">
			<stacksize value="1"/>
			<automaton name="_ALS"/>
		</member>
		<member name="M:_Timer_A" syntax="_Timer_A(str[], len)">
			<stacksize value="8"/>
			<dependency name="Malloc_SetA"/>
			<dependency name="Timer_GetSingleSlot"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:_Timer_C" syntax="_Timer_C(tt, g)">
			<stacksize value="5"/>
			<referrer name="fareUpdateTimer_yT@"/>
			<referrer name="TimerWar_yT@"/>
			<referrer name="TimerGetHit_yT@"/>
			<referrer name="FishingTimer_yT@"/>
			<referrer name="usedrugsTimer_yT@"/>
			<referrer name="advertismentTimer_yT@"/>
			<referrer name="helpnTimer_yT@"/>
			<referrer name="TimerCar_yT@"/>
			<referrer name="TimerSpeedo_yT@"/>
			<referrer name="gasTimer_yT@"/>
			<referrer name="kickEx_yT@"/>
			<referrer name="TimerJail_yT@"/>
			<referrer name="TimerWanted_yT@"/>
			<referrer name="TimersWantedFind_yT@"/>
			<referrer name="TimerPos_yT@"/>
			<referrer name="TimerCarFind_yT@"/>
			<referrer name="TimerTutorial_yT@"/>
			<referrer name="respawnTimer_yT@"/>
			<referrer name="ExpirationReport_yT@"/>
			<referrer name="closeGate_yT@"/>
			<referrer name="tazerTimer_yT@"/>
			<referrer name="testDriveTimer_yT@"/>
			<dependency name="I@"/>
			<dependency name="Timer_GetSingleSlot"/>
			<dependency name="YSI_gMallocMemory"/>
			<dependency name="YSI_g_sFirstSlot"/>
			<dependency name="YSI_g_sLastSlot"/>
			<param name="tt">
			</param>
			<param name="g">
			</param>
		</member>
		<member name="M:_Timer_D" syntax="_Timer_D(func[], interval, action, who, results[], a[])">
			<stacksize value="7"/>
			<dependency name="Iterator@Player"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimerEx"/>
			<dependency name="YSI_g_sPlayerTimers"/>
			<dependency name="true"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="action">
			</param>
			<param name="who">
			</param>
			<param name="results">
				<paraminfo> [200] </paraminfo>
			</param>
			<param name="a">
				<paraminfo> [2] </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_F" syntax="_Timer_F(slot)">
			<stacksize value="5"/>
			<referrer name="_Timer_H"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@007"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="TimerWar"/>
			<referrer name="@yH_OnPlayerDisconnect@008"/>
			<referrer name="CancelJob"/>
			<referrer name="@yH_OnPlayerDisconnect@010"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="TimerTutorial"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<dependency name="KillTimer"/>
			<dependency name="Malloc_Free"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="slot">
			</param>
		</member>
		<member name="M:_Timer_H" syntax="_Timer_H(slot)">
			<stacksize value="4"/>
			<dependency name="_Timer_F"/>
			<param name="slot">
			</param>
		</member>
		<member name="M:_Timer_I" syntax="_Timer_I(func[], interval, action, &amp;result)">
			<stacksize value="5"/>
			<referrer name="@yT_TimerM"/>
			<referrer name="@yT_Timers"/>
			<referrer name="@yT_PayDay"/>
			<dependency name="KillTimer"/>
			<dependency name="SetTimer"/>
			<param name="func">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="interval">
			</param>
			<param name="action">
			</param>
			<param name="result">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:_Timer_S" syntax="_Timer_S(str[])">
			<stacksize value="9"/>
			<dependency name="Malloc_SetS"/>
			<dependency name="Timer_GetSingleSlot"/>
			<dependency name="strlen"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:__CompilerSecondPass" syntax="__CompilerSecondPass()">
			<stacksize value="1"/>
		</member>
		<member name="M:__TU" syntax="__TU(t, iters)">
			<stacksize value="27"/>
			<dependency name="operator/(Float:,Float:)"/>
			<dependency name="__TU"/>
			<dependency name="float"/>
			<dependency name="format"/>
			<param name="t">
				The time in ms.
			</param>
			<param name="iters">
				The number of iterations completed in this time.
			</param>
			    <remarks>  Formats and returns a string representing the time taken for one iteration,  given the time required for many iterations.  This attempts to format the  number using a reasonable fraction of a second.  </remarks> 
		</member>
		<member name="M:_y_utils_OnPlayerConnect" syntax="_y_utils_OnPlayerConnect(playerid)">
			<attribute name="public"/>
			<stacksize value="30"/>
			<dependency name="GetPlayerName"/>
			<dependency name="IsPlayerNPC"/>
			<dependency name="SSCANF_Join"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:_y_utils_OnPlayerDisconnect" syntax="_y_utils_OnPlayerDisconnect(playerid, reason)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="SSCANF_Leave"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:addRaportPoint" syntax="addRaportPoint(playerid)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="pCommands"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:advertismentTimer" syntax="advertismentTimer(playerid)">
			<stacksize value="4106"/>
			<referrer name="advertismentTimer@_yT"/>
			<dependency name="AdText"/>
			<dependency name="AdText"/>
			<dependency name="AdTimer"/>
			<dependency name="pName"/>
			<dependency name="pPhone"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:advertismentTimer@_yT" syntax="advertismentTimer@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="advertismentTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:advertismentTimer_yT@" syntax="advertismentTimer_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_ad"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<dependency name="totalAds"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:argderef" syntax="argderef(n)">
			<stacksize value="1"/>
			<dependency name="argderef"/>
			<param name="n">
			</param>
		</member>
		<member name="M:argref" syntax="argref(n)">
			<stacksize value="1"/>
			<param name="n">
			</param>
		</member>
		<member name="M:assignCheckpointID" syntax="assignCheckpointID(i)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ExamenCheckpoints"/>
			<dependency name="Iterator@ExamenCheckpoints"/>
			<dependency name="cache_insert_id"/>
			<dependency name="dmvID"/>
			<dependency name="examenInfo"/>
			<dependency name="examenInfo"/>
			<dependency name="true"/>
			<param name="i">
			</param>
		</member>
		<member name="M:assignSQLID" syntax="assignSQLID(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="cache_insert_id"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="printf"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:atan" syntax="atan(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:banPlayer" syntax="banPlayer(playerid, adminid, days, reason[])">
			<stacksize value="41"/>
			<referrer name="warnPlayer"/>
			<referrer name="pc_cmd_ban"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerName"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SQL"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gQuery"/>
			<dependency name="getDateTime"/>
			<dependency name="gettime"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="days">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:bernstein" syntax="bernstein(string[])">
			<stacksize value="28"/>
			<referrer name="bernstein"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmEmitAdd"/>
			<dependency name="AsmEmitAddC"/>
			<dependency name="AsmEmitConstAlt"/>
			<dependency name="AsmEmitJnzRel"/>
			<dependency name="AsmEmitJzerRel"/>
			<dependency name="AsmEmitLoadI"/>
			<dependency name="AsmEmitLrefSPri"/>
			<dependency name="AsmEmitMoveAlt"/>
			<dependency name="AsmEmitMovePri"/>
			<dependency name="AsmEmitPopPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitPushPri"/>
			<dependency name="AsmEmitPushS"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitSmulC"/>
			<dependency name="AsmEmitStack"/>
			<dependency name="AsmEmitXchg"/>
			<dependency name="AsmInitPtr"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				the string to hash.
			</param>
			  <returns>  the bernstein hash of the input string  </returns>  <remarks>  This is a 32bit hash system so is not very secure, however we're only  using this as a string enumerator to uniquely identify strings easilly  and allow for a binary search of strings based on the hash of their name.  crc32, then jenkins were originally used however this is far faster, if a  little collision prone, but we're checking the strings manually anyway.  This doesn't matter as it would be done regardless of hash method, so this  doesn't need to be accounted for.  Speed is all that matters with at   least a bit of non collision (the number of strings we're dealing with,  this should have none-few collisions).  I modified it slightly from the original code pasted by aru, to code  closer to the code <a href="http://www.burtleburtle.net/bob/hash/doobs.html" />  and to work with PAWN (and shaved 0.2�s off the time for one call :D).  Uber reduced version (just for fun):  b(s[]){new h=-1,i,j;while((j=s[i++]))h=h*33+j;return h;}  Update: Contrary to what I said above this is also used to identify colour  strings for the updated text system involving file based styling and this  is not checked for collisions as it's unimportant.  But this doesn't affect  the function at all, I just mentioned it here for "interest".  Rewritten in self-generating assembly.  </remarks> 
		</member>
		<member name="M:binstr" syntax="binstr(string[])">
			<stacksize value="3"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				String to try convert to a boolean.
			</param>
			  <returns>  bool: passed boolean.  </returns>  <remarks>  This takes a value in 0110101 (boolean) format and returns it as a  regular value.  </remarks> 
		</member>
		<member name="M:boolstr" syntax="boolstr(string[])">
			<tagname value="bool"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				String to try convert to a boolean.
			</param>
			  <returns>  bool: passed boolean.  </returns>  <remarks>  This can take a number of ways of representing booleans - 0, false and  nothing there.  Anything not one of those things (false is not case  sensitive) is assumed true.  </remarks> 
		</member>
		<member name="M:buyHouseOffline" syntax="buyHouseOffline(playerid, id)">
			<attribute name="public"/>
			<stacksize value="48"/>
			<dependency name="areaHouse"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="hPrice"/>
			<dependency name="houseInfo"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:cache_affected_rows" syntax="cache_affected_rows()">
			<attribute name="native"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="BanIPOffline"/>
		</member>
		<member name="M:cache_delete" syntax="cache_delete(cache_id)">
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="checkPanel"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<param name="cache_id">
				<paraminfo>Cache </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_field_count" syntax="cache_get_field_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_fields"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_result_count" syntax="cache_get_result_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_results"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_row_count" syntax="cache_get_row_count(&amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_num_rows"/>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index_bool" syntax="cache_get_value_index_bool(row_idx, column_idx, &amp;destination)">
			<stacksize value="5"/>
			<dependency name="cache_get_value_index_int"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_index_int" syntax="cache_get_value_index_int(row_idx, column_idx, &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_index_bool"/>
			<param name="row_idx">
			</param>
			<param name="column_idx">
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name" syntax="cache_get_value_name(row_idx, column_name[], destination[], max_len)">
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="LoadFactions"/>
			<referrer name="showFactionMembers"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="LoadClans"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkPlayerAccount"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
		</member>
		<member name="M:cache_get_value_name_bool" syntax="cache_get_value_name_bool(row_idx, column_name[], &amp;destination)">
			<stacksize value="5"/>
			<referrer name="onPlayerLogin"/>
			<dependency name="cache_get_value_name_int"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>bool &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_float" syntax="cache_get_value_name_float(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="LoadHouses"/>
			<referrer name="LoadTurfs"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="LoadGasCan"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo>Float &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_get_value_name_int" syntax="cache_get_value_name_int(row_idx, column_name[], &amp;destination)">
			<attribute name="native"/>
			<referrer name="cache_get_value_name_bool"/>
			<referrer name="LoadHouses"/>
			<referrer name="LoadTurfs"/>
			<referrer name="LoadFactions"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="LoadClans"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="LoadGasCan"/>
			<referrer name="LoadDSVehicles"/>
			<param name="row_idx">
			</param>
			<param name="column_name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="destination">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:cache_insert_id" syntax="cache_insert_id()">
			<attribute name="native"/>
			<referrer name="assignSQLID"/>
			<referrer name="assignCheckpointID"/>
			<referrer name="InsertCarDS"/>
		</member>
		<member name="M:cache_num_fields" syntax="cache_num_fields()">
			<stacksize value="4"/>
			<dependency name="cache_get_field_count"/>
		</member>
		<member name="M:cache_num_results" syntax="cache_num_results()">
			<stacksize value="4"/>
			<dependency name="cache_get_result_count"/>
		</member>
		<member name="M:cache_num_rows" syntax="cache_num_rows()">
			<stacksize value="4"/>
			<referrer name="LoadHouses"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="LoadTurfs"/>
			<referrer name="LoadFactions"/>
			<referrer name="showFactionMembers"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="LoadClans"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="checkPanel"/>
			<referrer name="checkPlayerAccount"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountJail"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="checkAccountJailo"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="LoadGasCan"/>
			<referrer name="LoadDSVehicles"/>
			<referrer name="ShowEmails"/>
			<referrer name="CalculateEmails"/>
			<dependency name="cache_get_row_count"/>
		</member>
		<member name="M:calloc" syntax="calloc(size)">
			<tagname value="Alloc"/>
			<stacksize value="6"/>
			<dependency name="Malloc_Allocate"/>
			<dependency name="YSI_gMallocMemory"/>
			<param name="size">
				Size of memory to allocate.
			</param>
			  <returns>  0 on fail or a data handle on sucess.  </returns>  <remarks>  Displays errors in secure mode.  Blanks allocated mmeory.  </remarks> 
		</member>
		<member name="M:cancelDriveTest" syntax="cancelDriveTest(playerid, reason)">
			<stacksize value="4110"/>
			<referrer name="@yH_OnPlayerDeath@013"/>
			<referrer name="@yH_OnPlayerStateChange@013"/>
			<referrer name="testDriveTimer"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CB_SelectTextDraw"/>
			<dependency name="DSModels"/>
			<dependency name="DealerCar"/>
			<dependency name="DealerID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="HideDealerShipTD"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="ShowCamera"/>
			<dependency name="ShowDealerShipTD"/>
			<dependency name="TestingModel"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="dModel"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:ceildiv" syntax="ceildiv(numerator, denominator)">
			<stacksize value="1"/>
			<param name="numerator">
				The top of the division.
			</param>
			<param name="denominator">
				The bottom of the division.
			</param>
			    <returns>  (numerator / denominator) rounded up.  </returns>  <remarks>  Normal integer division ALWAYS rounds down - this always rounds up.  </remarks> 
		</member>
		<member name="M:chasedBy" syntax="chasedBy(playerid)">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="showMDC"/>
			<referrer name="pc_cmd_wanteds"/>
			<dependency name="Iterator@Wanteds"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pMDCon"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:checkAccountBanDatabase" syntax="checkAccountBanDatabase(playerid, playerName, days, reason)">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="SetPVarInt"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="getDateTime"/>
			<dependency name="getDateTime"/>
			<dependency name="gettime"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="playerName">
			</param>
			<param name="days">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:checkAccountInBanDatabase" syntax="checkAccountInBanDatabase(playerid, playerName, days, reason)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="playerName">
			</param>
			<param name="days">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:checkAccountInDatabase" syntax="checkAccountInDatabase(playerid, playerName, reason)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="SQL"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="playerName">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:checkAccountInDatabaseJailo" syntax="checkAccountInDatabaseJailo(playerid, playerName, reason, minutes)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="playerName">
			</param>
			<param name="reason">
			</param>
			<param name="minutes">
			</param>
		</member>
		<member name="M:checkAccountJail" syntax="checkAccountJail(playerid, playerName, reason)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="cache_num_rows"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="playerName">
			</param>
			<param name="reason">
			</param>
		</member>
		<member name="M:checkAccountJailo" syntax="checkAccountJailo(playerid, playerName, reason, minutes)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="cache_num_rows"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="playerName">
			</param>
			<param name="reason">
			</param>
			<param name="minutes">
			</param>
		</member>
		<member name="M:checkBanPlayer" syntax="checkBanPlayer(playerid)">
			<attribute name="public"/>
			<stacksize value="35"/>
			<dependency name="SetPVarInt"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gettime"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:checkMission" syntax="checkMission(playerid, id)">
			<attribute name="public"/>
			<stacksize value="8203"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="missionName"/>
			<dependency name="missionName"/>
			<dependency name="pDailyMission"/>
			<dependency name="pLevel"/>
			<dependency name="pNeedProgress"/>
			<dependency name="pProgress"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="updateLevelBar"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:checkPanel" syntax="checkPanel()">
			<attribute name="public"/>
			<stacksize value="4229"/>
			<dependency name="EOS"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@BetaPlayers"/>
			<dependency name="Iter_Single@MutedPlayers"/>
			<dependency name="Iter_Single@PremiumPlayers"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="Iter_Single@VipPlayers"/>
			<dependency name="Iterator@BetaPlayers"/>
			<dependency name="Iterator@MutedPlayers"/>
			<dependency name="Iterator@PremiumPlayers"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="Iterator@VipPlayers"/>
			<dependency name="J@"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gQuery"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_query"/>
			<dependency name="mysql_tquery"/>
			<dependency name="mysql_unprocessed_queries"/>
			<dependency name="pAdmin"/>
			<dependency name="pBeta"/>
			<dependency name="pHelper"/>
			<dependency name="pMute"/>
			<dependency name="pPremium"/>
			<dependency name="pSQLID"/>
			<dependency name="pVIP"/>
			<dependency name="pVehicleSlots"/>
			<dependency name="pWarn"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
		</member>
		<member name="M:checkPlayerAccount" syntax="checkPlayerAccount(playerid)">
			<attribute name="public"/>
			<stacksize value="76"/>
			<dependency name="Dialog_Open"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:checkPlayerBan" syntax="checkPlayerBan(playerid)">
			<attribute name="public"/>
			<stacksize value="130"/>
			<dependency name="EOS"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gQuery"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pIp"/>
			<dependency name="pLoginEnabled"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:checkPlayerBanIP" syntax="checkPlayerBanIP(playerid)">
			<attribute name="public"/>
			<stacksize value="127"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:chrfind" syntax="chrfind(needle, haystack[], start)">
			<stacksize value="3"/>
			<dependency name="strlen"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			      <returns>  Fail - -1, Success - pos  </returns> 
		</member>
		<member name="M:chrfindp" syntax="chrfindp(needle, haystack[], start)">
			<stacksize value="1"/>
			<param name="needle">
				The character to find.
			</param>
			<param name="haystack">
				<paraminfo> [] </paraminfo>
				The string to find it in.
			</param>
			<param name="start">
				The offset to start from.
			</param>
			      <returns>  Fail - -1, Success - pos  </returns>  <remarks>  Like <symbolref name="chrfind" />, but with no upper-bounds check on  <paramref name="start" />.  </remarks> 
		</member>
		<member name="M:clearChat" syntax="clearChat(playerid, lines)">
			<stacksize value="6"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="OnPlayerSpawn"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="lines">
			</param>
		</member>
		<member name="M:closeGate" syntax="closeGate(gate)">
			<stacksize value="10"/>
			<referrer name="closeGate@_yT"/>
			<dependency name="MoveDynamicObject"/>
			<dependency name="gates"/>
			<dependency name="print"/>
			<dependency name="true"/>
			<param name="gate">
			</param>
		</member>
		<member name="M:closeGate@_yT" syntax="closeGate@_yT(__r, gate)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="closeGate"/>
			<param name="__r">
			</param>
			<param name="gate">
			</param>
		</member>
		<member name="M:closeGate_yT@" syntax="closeGate_yT@(gate)">
			<stacksize value="8"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="gate">
			</param>
		</member>
		<member name="M:copy_1" syntax="copy_1(&amp;dest, source[], start)">
			<stacksize value="1"/>
			<referrer name="GetAmxHeaderNow"/>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:copy_2" syntax="copy_2(&amp;dest, source[], start)">
			<stacksize value="1"/>
			<referrer name="GetAmxHeaderNow"/>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:copy_4" syntax="copy_4(&amp;dest, source[], start)">
			<stacksize value="1"/>
			<referrer name="GetAmxHeaderNow"/>
			<param name="dest">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
		</member>
		<member name="M:deref" syntax="deref(v)">
			<stacksize value="1"/>
			<dependency name="deref"/>
			<param name="v">
			</param>
		</member>
		<member name="M:destroyPlayerTextDraws" syntax="destroyPlayerTextDraws(playerid)">
			<stacksize value="4"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<dependency name="PlayerTextDrawDestroy"/>
			<dependency name="fareTD"/>
			<dependency name="playerLevelPTD"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="serverHud"/>
			<dependency name="true"/>
			<dependency name="wantedTD"/>
			<dependency name="warTD"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:destroyServerTextDraws" syntax="destroyServerTextDraws()">
			<stacksize value="4"/>
			<referrer name="MySQLLoad"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<dependency name="ClockTD"/>
			<dependency name="TextDrawDestroy"/>
			<dependency name="serverDealerTD"/>
			<dependency name="true"/>
		</member>
		<member name="M:dialog_BIZ_OPTION" syntax="dialog_BIZ_OPTION(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_BIZ_OPTION_ADMIN" syntax="dialog_BIZ_OPTION_ADMIN(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_BIZ_OPTION_DESCADMIN" syntax="dialog_BIZ_OPTION_DESCADMIN(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12301"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IDSelected"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="bizDescription"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwner"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_BIZ_OPTION_DESCRIPTION" syntax="dialog_BIZ_OPTION_DESCRIPTION(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="bizDescription"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwner"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pBusinessID"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_BIZ_OPTION_TITLE" syntax="dialog_BIZ_OPTION_TITLE(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="bizDescription"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwner"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pBusinessID"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_BIZ_OPTION_TITLEADMIN" syntax="dialog_BIZ_OPTION_TITLEADMIN(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12301"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IDSelected"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="bizDescription"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwner"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_BUYBIZ" syntax="dialog_BUYBIZ(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bizBalance"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="pPhone"/>
			<dependency name="pPhoneBook"/>
			<dependency name="pSQLID"/>
			<dependency name="pWTalkie"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_BUY_INSURANCE" syntax="dialog_BUY_INSURANCE(playerid, response)">
			<attribute name="public"/>
			<stacksize value="8201"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="floatround"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="getInsurancePrice"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAge"/>
			<dependency name="pvID"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvOdometer"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
		</member>
		<member name="M:dialog_DIALOG_CLAN" syntax="dialog_DIALOG_CLAN(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4110"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cTag"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="pClan"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_CLANSETTINGS" syntax="dialog_DIALOG_CLANSETTINGS(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_CLANSETTINGS1" syntax="dialog_DIALOG_CLANSETTINGS1(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="cClanColor"/>
			<dependency name="cID"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="format"/>
			<dependency name="pClan"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendClanMessage"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_CLANSETTINGS2" syntax="dialog_DIALOG_CLANSETTINGS2(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="cClanColor"/>
			<dependency name="cID"/>
			<dependency name="cMotd"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="format"/>
			<dependency name="pClan"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendClanMessage"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_CLANTAG" syntax="dialog_DIALOG_CLANTAG(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SetClanTag"/>
			<dependency name="pClanTag"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_EMAILS" syntax="dialog_DIALOG_EMAILS(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4341"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="mysql_query"/>
			<dependency name="pSQLID"/>
			<dependency name="pSelectedItem"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_EMAILS2" syntax="dialog_DIALOG_EMAILS2(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="selName"/>
			<dependency name="selName"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_FDEPOSIT" syntax="dialog_DIALOG_FDEPOSIT(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="pSelectedItem"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_FDEPOSIT2" syntax="dialog_DIALOG_FDEPOSIT2(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="PlayerMoney"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pDrugs"/>
			<dependency name="pFaction"/>
			<dependency name="pMats"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSafeID"/>
			<dependency name="pSelectedItem"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sDrugs"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="safeInfo"/>
			<dependency name="safeInfo"/>
			<dependency name="saveSafe"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_FWITHDRAW" syntax="dialog_DIALOG_FWITHDRAW(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="8202"/>
			<dependency name="Dialog_Open"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pSafeID"/>
			<dependency name="pSelectedItem"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sDrugs"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="safeInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_FWITHDRAW2" syntax="dialog_DIALOG_FWITHDRAW2(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="16396"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pDrugs"/>
			<dependency name="pFaction"/>
			<dependency name="pMats"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSafeID"/>
			<dependency name="pSelectedItem"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sDrugs"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="safeInfo"/>
			<dependency name="safeInfo"/>
			<dependency name="saveSafe"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_HELP" syntax="dialog_DIALOG_HELP(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="pFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_HUD" syntax="dialog_DIALOG_HUD(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<dependency name="pFPSShow"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_JOBS" syntax="dialog_DIALOG_JOBS(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="CHECKPOINT_JOB"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="jobInfo"/>
			<dependency name="jobInfo"/>
			<dependency name="jobName"/>
			<dependency name="jobX"/>
			<dependency name="jobY"/>
			<dependency name="jobZ"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_MEMBERS" syntax="dialog_DIALOG_MEMBERS(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SQL"/>
			<dependency name="Selected"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="format"/>
			<dependency name="mysql_query"/>
			<dependency name="pFactionRank"/>
			<dependency name="playerInfo"/>
			<dependency name="selName"/>
			<dependency name="selName"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_MEMBERS2" syntax="dialog_DIALOG_MEMBERS2(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4147"/>
			<dependency name="Dialog_Open"/>
			<dependency name="FEMALE_GENDER"/>
			<dependency name="GetPlayerID"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="SQL"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="mysql_query"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionPunish"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pGender"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="selName"/>
			<dependency name="selName"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="showFactionMembers"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_MEMBERSRANK" syntax="dialog_DIALOG_MEMBERSRANK(playerid, response, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="GetPlayerID"/>
			<dependency name="factionLog"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="selName"/>
			<dependency name="selName"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_MEMBERSUINV" syntax="dialog_DIALOG_MEMBERSUINV(playerid, response, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4106"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SetPVarString"/>
			<dependency name="selName"/>
			<dependency name="selName"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_MEMBERSUINV2" syntax="dialog_DIALOG_MEMBERSUINV2(playerid, response, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4213"/>
			<dependency name="Dialog_Open"/>
			<dependency name="FEMALE_GENDER"/>
			<dependency name="GetPVarString"/>
			<dependency name="GetPlayerID"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="SQL"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="factionLog"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="mysql_query"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionPunish"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pGender"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="selName"/>
			<dependency name="selName"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_REPORT" syntax="dialog_DIALOG_REPORT(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="ExpirationReport_yT@"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="J@"/>
			<dependency name="REPORT_TYPE_STUCK"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="pReportMute"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportText"/>
			<dependency name="reportTimer"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_REPORT_CHEATER" syntax="dialog_DIALOG_REPORT_CHEATER(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Dialog_Open"/>
			<dependency name="ExpirationReport_yT@"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="J@"/>
			<dependency name="REPORT_TYPE_CHEATER"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="pReportMute"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportPlayer"/>
			<dependency name="reportText"/>
			<dependency name="reportTimer"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sscanf"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_REPORT_NORMAL" syntax="dialog_DIALOG_REPORT_NORMAL(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="ExpirationReport_yT@"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="J@"/>
			<dependency name="REPORT_TYPE_NORMAL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="gettime"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="pReportMute"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportText"/>
			<dependency name="reportTimer"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_DIALOG_SETGUN" syntax="dialog_DIALOG_SETGUN(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GunName"/>
			<dependency name="GunName"/>
			<dependency name="false"/>
			<dependency name="pGuns"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="save_guns"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_SHOP" syntax="dialog_DIALOG_SHOP(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@PremiumPlayers"/>
			<dependency name="Iter_Single@VipPlayers"/>
			<dependency name="Iterator@PremiumPlayers"/>
			<dependency name="Iterator@VipPlayers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pName"/>
			<dependency name="pPremium"/>
			<dependency name="pPremiumPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="pVIP"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_SVF" syntax="dialog_DIALOG_SVF(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4106"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AttachObjectToVehicle"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CreateObject"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetObjectMaterialText"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="svfVehicleObjects"/>
			<dependency name="true"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehiclePlayerID"/>
			<dependency name="vehicleRank"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_DIALOG_WANTEDS" syntax="dialog_DIALOG_WANTEDS(playerid, response)">
			<attribute name="public"/>
			<stacksize value="45"/>
			<dependency name="CHECKPOINT_WANTEDFIND"/>
			<dependency name="Get3DZone"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="TimersWantedFind_yT@"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pName"/>
			<dependency name="pSelectedItem"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wantedFind"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
		</member>
		<member name="M:dialog_EMAIL" syntax="dialog_EMAIL(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="isValidEmail"/>
			<dependency name="pEMail"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_GENDER" syntax="dialog_GENDER(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="FEMALE_GENDER"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="MALE_GENDER"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="TimerTutorial_yT@"/>
			<dependency name="pEMail"/>
			<dependency name="pGender"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="pTutorialActive"/>
			<dependency name="pTutorialSeconds"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="tutorial"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_GPS" syntax="dialog_GPS(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="21"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GetDistanceBetweenPoints"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_GPS1" syntax="dialog_GPS1(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="CHECKPOINT_GPS"/>
			<dependency name="GetDistanceBetweenPoints"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_HOUSE_OPTION" syntax="dialog_HOUSE_OPTION(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_HOUSE_OPTION_ADMIN" syntax="dialog_HOUSE_OPTION_ADMIN(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_HOUSE_OPTION_DESCADMIN" syntax="dialog_HOUSE_OPTION_DESCADMIN(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12301"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IDSelected"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_HOUSE_OPTION_DESCRIPTION" syntax="dialog_HOUSE_OPTION_DESCRIPTION(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_HOUSE_OPTION_TITLE" syntax="dialog_HOUSE_OPTION_TITLE(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_HOUSE_OPTION_TITLEADMIN" syntax="dialog_HOUSE_OPTION_TITLEADMIN(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="12301"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IDSelected"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_LOGIN" syntax="dialog_LOGIN(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="Kick"/>
			<dependency name="SHA256_PassHash"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pLogged"/>
			<dependency name="pName"/>
			<dependency name="pPassword"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_MY_GARAGE" syntax="dialog_MY_GARAGE(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="SetPVarInt"/>
			<dependency name="pSelectVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_MY_GARAGE_DESPAWNED" syntax="dialog_MY_GARAGE_DESPAWNED(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4112"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="ModVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="TimerCar_yT@"/>
			<dependency name="UpdateVehicleDamageStatus"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gString"/>
			<dependency name="getInsurancePrice"/>
			<dependency name="gettime"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvAge"/>
			<dependency name="pvAngle"/>
			<dependency name="pvCarPlate"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvFuel"/>
			<dependency name="pvHealth"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvInterior"/>
			<dependency name="pvLock"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOdometer"/>
			<dependency name="pvPaintJob"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="pvVirtualWorld"/>
			<dependency name="pvX"/>
			<dependency name="pvY"/>
			<dependency name="pvZ"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_MY_GARAGE_SPAWNED" syntax="dialog_MY_GARAGE_SPAWNED(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="4142"/>
			<dependency name="operator&lt;(_:,Float:)"/>
			<dependency name="CHECKPOINT_FINDCAR"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DebugVehicles"/>
			<dependency name="Dialog_Open"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="EOS"/>
			<dependency name="Get3DZone"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetVehicleDamageStatus"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsVehicleOccupied"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="J@"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="StoreMoney"/>
			<dependency name="TimerCarFind_yT@"/>
			<dependency name="TimerCar_yT@"/>
			<dependency name="_Timer_F"/>
			<dependency name="carFind"/>
			<dependency name="false"/>
			<dependency name="floatround"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gQuery"/>
			<dependency name="gString"/>
			<dependency name="getInsurancePrice"/>
			<dependency name="getVehicleHealth"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAge"/>
			<dependency name="pvAngle"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvInterior"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOdometer"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="pvVirtualWorld"/>
			<dependency name="pvX"/>
			<dependency name="pvY"/>
			<dependency name="pvZ"/>
			<dependency name="random"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_REGISTER" syntax="dialog_REGISTER(playerid, response, listitem, inputtext[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="Kick"/>
			<dependency name="SHA256_PassHash"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pLogged"/>
			<dependency name="pName"/>
			<dependency name="pPassword"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
			<param name="inputtext">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:dialog_SELL_BIZ_STATE" syntax="dialog_SELL_BIZ_STATE(playerid, response)">
			<attribute name="public"/>
			<stacksize value="12303"/>
			<dependency name="EOS"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="bizDescription"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwned"/>
			<dependency name="bizOwner"/>
			<dependency name="bizOwnerID"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gQuery"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="strcmp"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
		</member>
		<member name="M:dialog_SELL_HOUSE_STATE" syntax="dialog_SELL_HOUSE_STATE(playerid, response)">
			<attribute name="public"/>
			<stacksize value="12303"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwned"/>
			<dependency name="hOwner"/>
			<dependency name="hOwnerID"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="strcmp"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
		</member>
		<member name="M:dialog_SPAWNCHANGE" syntax="dialog_SPAWNCHANGE(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pFaction"/>
			<dependency name="pHouse"/>
			<dependency name="pRent"/>
			<dependency name="pSQLID"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_TOG" syntax="dialog_TOG(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pLiveToggle"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_TRANSFERBIZ" syntax="dialog_TRANSFERBIZ(playerid, response)">
			<attribute name="public"/>
			<stacksize value="12346"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GivePlayerBank"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bizBalance"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pBank"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pStoreBank"/>
			<dependency name="pTransferMoney"/>
			<dependency name="pTransferPlayer"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendStaff"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
		</member>
		<member name="M:dialog_TRUCKER_SELECT" syntax="dialog_TRUCKER_SELECT(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CHECKPOINT_TRUCKERLV"/>
			<dependency name="CHECKPOINT_TRUCKERSF"/>
			<dependency name="CancelJob"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="JobVehicle"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="Trailer"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_TRUCKER_SELECTTHREE" syntax="dialog_TRUCKER_SELECTTHREE(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CHECKPOINT_TRUCKERLS"/>
			<dependency name="CHECKPOINT_TRUCKERSF"/>
			<dependency name="CancelJob"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="JobVehicle"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="Trailer"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:dialog_TRUCKER_SELECTTWO" syntax="dialog_TRUCKER_SELECTTWO(playerid, response, listitem)">
			<attribute name="public"/>
			<stacksize value="16"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CHECKPOINT_TRUCKERLS"/>
			<dependency name="CHECKPOINT_TRUCKERLV"/>
			<dependency name="CancelJob"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="JobVehicle"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="Trailer"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="response">
			</param>
			<param name="listitem">
			</param>
		</member>
		<member name="M:endofline" syntax="endofline(line[], pos)">
			<stacksize value="3"/>
			<dependency name="cellmin"/>
			<dependency name="strlen"/>
			<param name="line">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			<param name="pos">
				Postion to start from.
			</param>
			    <remarks>  Checks if the current point in a line is the end of non-whitespace data.  </remarks> 
		</member>
		<member name="M:enter_public" syntax="enter_public(index, address)">
			<stacksize value="6"/>
			<referrer name="new_pec"/>
			<dependency name="GetTickCount"/>
			<dependency name="ProfCallInfo"/>
			<dependency name="exit_public"/>
			<dependency name="g_call_depth"/>
			<dependency name="g_call_stack"/>
			<dependency name="g_call_stack"/>
			<dependency name="pci_index"/>
			<dependency name="pci_start_time"/>
			<dependency name="printf"/>
			<param name="index">
			</param>
			<param name="address">
			</param>
		</member>
		<member name="M:examenFail" syntax="examenFail(playerid)">
			<stacksize value="6"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="pExamenCheckpoint"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="playerExamenPTD"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:existproperty" syntax="existproperty(id, name[], value)">
			<attribute name="native"/>
			<referrer name="Malloc_OnScriptInit"/>
			<referrer name="_Master_Get"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:exit_public" syntax="exit_public()">
			<stacksize value="6"/>
			<referrer name="enter_public"/>
			<dependency name="GetTickCount"/>
			<dependency name="cellmax"/>
			<dependency name="cellmin"/>
			<dependency name="g_call_depth"/>
			<dependency name="g_call_stack"/>
			<dependency name="g_num_publics"/>
			<dependency name="g_publics"/>
			<dependency name="g_publics"/>
			<dependency name="pci_index"/>
			<dependency name="pci_start_time"/>
			<dependency name="ppi_child_time"/>
			<dependency name="ppi_num_calls"/>
			<dependency name="ppi_total_time"/>
		</member>
		<member name="M:faceReclama" syntax="faceReclama(text[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="OnPlayerText"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="true"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:factionLog" syntax="factionLog(factionid, name[], action[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_accept"/>
			<dependency name="EOS"/>
			<dependency name="gQuery"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="factionid">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="action">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:factionName" syntax="factionName(fid)">
			<stacksize value="41"/>
			<referrer name="showStats"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_myraport"/>
			<referrer name="LoadSafes"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="fName"/>
			<dependency name="factionInfo"/>
			<dependency name="factionInfo"/>
			<dependency name="factionName"/>
			<dependency name="format"/>
			<param name="fid">
			</param>
		</member>
		<member name="M:fareUpdateTimer" syntax="fareUpdateTimer(playerid)">
			<stacksize value="4107"/>
			<referrer name="fareUpdateTimer@_yT"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="PlayerMoney"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="_Timer_F"/>
			<dependency name="addRaportPoint"/>
			<dependency name="fareTD"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pName"/>
			<dependency name="pTaxiDriver"/>
			<dependency name="pTaxiDuty"/>
			<dependency name="pTaxiFare"/>
			<dependency name="pTaxiMoney"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="taxi"/>
			<dependency name="true"/>
			<dependency name="updateTaxiTextdraw"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:fareUpdateTimer@_yT" syntax="fareUpdateTimer@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="fareUpdateTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:fareUpdateTimer_yT@" syntax="fareUpdateTimer_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:fclose" syntax="fclose(handle)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="DisasmWrite"/>
			<referrer name="ProfilerWriteData"/>
			<referrer name="ftouch"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
		</member>
		<member name="M:fexist" syntax="fexist(pattern[])">
			<attribute name="native"/>
			<referrer name="ftouch"/>
			<param name="pattern">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:float" syntax="float(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<referrer name="__TU"/>
			<referrer name="RandomFloat"/>
			<referrer name="updateLevelBar"/>
			<param name="value">
			</param>
		</member>
		<member name="M:floatabs" syntax="floatabs(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="GetDistanceBetweenPoints"/>
			<referrer name="AttachTrailer"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatadd" syntax="floatadd(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator+(Float:,_:)"/>
			<referrer name="SetPlayerLookAt"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcmp" syntax="floatcmp(oper1, oper2)">
			<attribute name="native"/>
			<referrer name="operator==(Float:,Float:)"/>
			<referrer name="operator==(Float:,_:)"/>
			<referrer name="operator!=(Float:,Float:)"/>
			<referrer name="operator!=(Float:,_:)"/>
			<referrer name="operator&gt;(Float:,Float:)"/>
			<referrer name="operator&gt;(Float:,_:)"/>
			<referrer name="operator&gt;(_:,Float:)"/>
			<referrer name="operator&gt;=(Float:,Float:)"/>
			<referrer name="operator&gt;=(Float:,_:)"/>
			<referrer name="operator&gt;=(_:,Float:)"/>
			<referrer name="operator&lt;(Float:,Float:)"/>
			<referrer name="operator&lt;(Float:,_:)"/>
			<referrer name="operator&lt;(_:,Float:)"/>
			<referrer name="operator&lt;=(Float:,Float:)"/>
			<referrer name="operator&lt;=(Float:,_:)"/>
			<referrer name="operator&lt;=(_:,Float:)"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="_GetMapZoneLoopStartIndex"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatcos" syntax="floatcos(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floatdiv" syntax="floatdiv(dividend, divisor)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator/(Float:,_:)"/>
			<referrer name="operator/(_:,Float:)"/>
			<param name="dividend">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="divisor">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatmul" syntax="floatmul(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator*(Float:,_:)"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatpower" syntax="floatpower(value, exponent)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="RandomFloat"/>
			<referrer name="GetDistanceBetweenPoints"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="exponent">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatround" syntax="floatround(value, method)">
			<attribute name="native"/>
			<referrer name="RandomFloat"/>
			<referrer name="getVehicleHealth"/>
			<referrer name="getVehicleSpeed"/>
			<referrer name="GetDistancePlayerToVeh"/>
			<referrer name="DistanceToPlayer"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="method">
				<paraminfo>floatround_method </paraminfo>
			</param>
		</member>
		<member name="M:floatsin" syntax="floatsin(value, mode)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="IsPlayerSprayingVehicle"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>anglemode </paraminfo>
			</param>
		</member>
		<member name="M:floatsqroot" syntax="floatsqroot(value)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="Callback_GetSpeed"/>
			<referrer name="getVehicleSpeed"/>
			<referrer name="GetDistancePlayerToVeh"/>
			<referrer name="GetDistanceBetweenPoints"/>
			<param name="value">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floatsub" syntax="floatsub(oper1, oper2)">
			<tagname value="Float"/>
			<attribute name="native"/>
			<referrer name="operator-(Float:,_:)"/>
			<referrer name="operator-(_:,Float:)"/>
			<referrer name="SetPlayerLookAt"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="GetDistanceBetweenPoints"/>
			<param name="oper1">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="oper2">
				<paraminfo>Float </paraminfo>
			</param>
		</member>
		<member name="M:floordiv" syntax="floordiv(numerator, denominator)">
			<stacksize value="1"/>
			<param name="numerator">
				The top of the division.
			</param>
			<param name="denominator">
				The bottom of the division.
			</param>
			<summary>  floordiv(numerator, denominator);  </summary>      <returns>  (numerator / denominator) rounded down.  </returns>  <remarks>  Normal integer division ALWAYS rounds down - this also always rounds down,  making it a little pointless, but also more explicit in function.  </remarks> 
		</member>
		<member name="M:fopen" syntax="fopen(name[], mode)">
			<tagname value="File"/>
			<attribute name="native"/>
			<referrer name="DisasmWrite"/>
			<referrer name="ProfilerWriteData"/>
			<referrer name="ftouch"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="mode">
				<paraminfo>filemode </paraminfo>
			</param>
		</member>
		<member name="M:format" syntax="format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="GetPlayer2DZone"/>
			<referrer name="GetPlayer3DZone"/>
			<referrer name="Get3DZone"/>
			<referrer name="Get2DPosZone"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Debug_PrintArray"/>
			<referrer name="ProfilerWriteData"/>
			<referrer name="__TU"/>
			<referrer name="va_return"/>
			<referrer name="Bit_Display"/>
			<referrer name="@dialog_format"/>
			<referrer name="Dialog_Open"/>
			<referrer name="formatNumber"/>
			<referrer name="resetVars"/>
			<referrer name="secinmin"/>
			<referrer name="Value64Bit"/>
			<referrer name="GetCashStr"/>
			<referrer name="FormatBigInt"/>
			<referrer name="GetBankMoney"/>
			<referrer name="CheckerBigInt"/>
			<referrer name="Translate32Bit"/>
			<referrer name="formatNumbers"/>
			<referrer name="formatNumbers2"/>
			<referrer name="FormatIntNumber"/>
			<referrer name="formatNumberss"/>
			<referrer name="missionName"/>
			<referrer name="dialog_EMAIL"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="LoadHouses"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="factionName"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="pc_cmd_quests"/>
			<referrer name="ShowEmails"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:formatNumber" syntax="formatNumber(number)">
			<stacksize value="7"/>
			<referrer name="showStats"/>
			<referrer name="LoadHouses"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="checkMission"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="gasTimer"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="EOS"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="gString"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="number">
			</param>
		</member>
		<member name="M:formatNumbers" syntax="formatNumbers(number)">
			<stacksize value="21"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<dependency name="format"/>
			<dependency name="formatNumbers"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="number">
			</param>
		</member>
		<member name="M:formatNumbers2" syntax="formatNumbers2(...)">
			<stacksize value="140"/>
			<referrer name="GetCashStr"/>
			<referrer name="FormatBigInt"/>
			<referrer name="GetBankMoney"/>
			<dependency name="FormatIntNumber"/>
			<dependency name="format"/>
			<dependency name="formatNumbers2"/>
			<dependency name="getarg"/>
			<dependency name="strdel"/>
			<dependency name="strfind"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="...">
			</param>
		</member>
		<member name="M:formatNumberss" syntax="formatNumberss(number[])">
			<stacksize value="31"/>
			<referrer name="pc_cmd_givemoney"/>
			<dependency name="format"/>
			<dependency name="formatNumberss"/>
			<dependency name="strins"/>
			<dependency name="strlen"/>
			<param name="number">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:free" syntax="free(slot)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				Slot of memory to free up.
			</param>
			  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:ftouch" syntax="ftouch(filename[])">
			<stacksize value="5"/>
			<dependency name="fclose"/>
			<dependency name="fexist"/>
			<dependency name="fopen"/>
			<dependency name="io_write"/>
			<param name="filename">
				<paraminfo> [] </paraminfo>
				The file to "touch".
			</param>
			<summary>  ftouch(filename);  </summary>    <returns>  0 - File already exists.  1 - File was created.  -1 - File was not created.  </returns>  <remarks>  This "touches" a file in the Unix sense of creating it but not opening or  editing it in any way.  </remarks> 
		</member>
		<member name="M:funcidx" syntax="funcidx(name[])">
			<attribute name="native"/>
			<referrer name="CGen_GetAddr"/>
			<referrer name="GetLocalFunction"/>
			<referrer name="OnDialogResponse"/>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:fwrite" syntax="fwrite(handle, string[])">
			<attribute name="native"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="DisasmWriteDataRowChar"/>
			<referrer name="DisasmWriteDataRowHex"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="ProfilerWriteData"/>
			<referrer name="va_fprintf"/>
			<param name="handle">
				<paraminfo>File </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:gasTimer" syntax="gasTimer(playerid, procent)">
			<stacksize value="4104"/>
			<referrer name="gasTimer@_yT"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="areaGascan"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gFull"/>
			<dependency name="gasInfo"/>
			<dependency name="gasInfo"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="pvFuel"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="procent">
			</param>
		</member>
		<member name="M:gasTimer@_yT" syntax="gasTimer@_yT(__r, playerid, procent)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="gasTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
			<param name="procent">
			</param>
		</member>
		<member name="M:gasTimer_yT@" syntax="gasTimer_yT@(playerid, procent)">
			<stacksize value="9"/>
			<referrer name="pc_cmd_fill"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
			<param name="procent">
			</param>
		</member>
		<member name="M:getDateTime" syntax="getDateTime()">
			<stacksize value="16"/>
			<referrer name="banPlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<dependency name="EOS"/>
			<dependency name="gString"/>
			<dependency name="getDateTime"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="va_format"/>
		</member>
		<member name="M:getInsurancePrice" syntax="getInsurancePrice(x, y)">
			<stacksize value="1"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<param name="x">
			</param>
			<param name="y">
			</param>
		</member>
		<member name="M:getNeedProgress" syntax="getNeedProgress(playerid, id)">
			<attribute name="public"/>
			<stacksize value="1"/>
			<referrer name="pc_cmd_quests"/>
			<referrer name="pc_cmd_finalquest"/>
			<dependency name="pNeedProgress"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:getVehicleHealth" syntax="getVehicleHealth(vehicleid)">
			<stacksize value="5"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="floatround"/>
			<param name="vehicleid">
			</param>
		</member>
		<member name="M:getVehicleOwner" syntax="getVehicleOwner(id)">
			<stacksize value="2"/>
			<referrer name="TimerCar"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="id">
			</param>
		</member>
		<member name="M:getVehicleSpeed" syntax="getVehicleSpeed(vehicleid, mode)">
			<stacksize value="9"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_park"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="GetVehicleVelocity"/>
			<dependency name="floatround"/>
			<dependency name="floatsqroot"/>
			<param name="vehicleid">
			</param>
			<param name="mode">
			</param>
		</member>
		<member name="M:getWeaponName" syntax="getWeaponName(weapon_id)">
			<stacksize value="5"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<dependency name="EOS"/>
			<dependency name="GetWeaponName"/>
			<dependency name="gString"/>
			<dependency name="getWeaponName"/>
			<param name="weapon_id">
			</param>
		</member>
		<member name="M:getWeaponSlot" syntax="getWeaponSlot(weaponid)">
			<stacksize value="2"/>
			<referrer name="serverWeapon"/>
			<param name="weaponid">
			</param>
		</member>
		<member name="M:getarg" syntax="getarg(arg, index)">
			<attribute name="native"/>
			<referrer name="AsmEmitInstruction"/>
			<referrer name="CodeScanMatcherPattern_"/>
			<referrer name="I@L"/>
			<referrer name="formatNumbers2"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
		</member>
		<member name="M:getdate" syntax="getdate(&amp;year, &amp;month, &amp;day)">
			<attribute name="native"/>
			<referrer name="getDateTime"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerM"/>
			<param name="year">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="month">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="day">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:getproperty" syntax="getproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Z@"/>
			<referrer name="S@"/>
			<referrer name="F@"/>
			<referrer name="Master_GetNext"/>
			<referrer name="Malloc_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
			<referrer name="@a"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:gettime" syntax="gettime(&amp;hour, &amp;minute, &amp;second)">
			<attribute name="native"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="getDateTime"/>
			<referrer name="kickPlayer"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="BanIPOffline"/>
			<referrer name="SetPlayerFreeze"/>
			<referrer name="Reclama"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="TimerCar_yT@"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="TimerM"/>
			<referrer name="Timers"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerText"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<param name="hour">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="minute">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="second">
				<paraminfo> &amp; </paraminfo>
			</param>
		</member>
		<member name="M:giveQuest" syntax="giveQuest(playerid)">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="onPlayerLogin"/>
			<dependency name="pDailyMission"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="questProgress"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:gpci" syntax="gpci(playerid, serial[], len)">
			<attribute name="native"/>
			<referrer name="pc_cmd_ip"/>
			<param name="playerid">
			</param>
			<param name="serial">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:haveWeapons" syntax="haveWeapons(playerid)">
			<attribute name="public"/>
			<stacksize value="34"/>
			<referrer name="pc_cmd_confiscate"/>
			<dependency name="GetPlayerWeaponData"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:heapspace" syntax="heapspace()">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="HookChain_OnScriptInit"/>
			<referrer name="Malloc_SolidifyHeap"/>
		</member>
		<member name="M:helpnTimer" syntax="helpnTimer(playerid)">
			<stacksize value="5"/>
			<referrer name="helpnTimer@_yT"/>
			<dependency name="CautaHelperNou"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:helpnTimer@_yT" syntax="helpnTimer@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="helpnTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:helpnTimer_yT@" syntax="helpnTimer_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="CautaHelper"/>
			<referrer name="removeFunction"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:hexstr" syntax="hexstr(string[])">
			<stacksize value="4"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
				String to convert to a number.
			</param>
			  <returns>  value of the passed hex string.  </returns>  <remarks>  Now stops on invalid characters.  </remarks> 
		</member>
		<member name="M:isBike" syntax="isBike(carid)">
			<stacksize value="3"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="carid">
			</param>
		</member>
		<member name="M:isBoat" syntax="isBoat(carid)">
			<stacksize value="3"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="carid">
			</param>
		</member>
		<member name="M:isMotor" syntax="isMotor(carid)">
			<stacksize value="3"/>
			<referrer name="pc_cmd_entercar"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="carid">
			</param>
		</member>
		<member name="M:isPlane" syntax="isPlane(carid)">
			<stacksize value="3"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="false"/>
			<dependency name="true"/>
			<param name="carid">
			</param>
		</member>
		<member name="M:isPlayerLogged" syntax="isPlayerLogged(playerid)">
			<stacksize value="6"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_houseoption"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_renters"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="pc_cmd_myraport"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizoption"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="checkPanel"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_spawnchange"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="InsertEmail"/>
			<referrer name="pc_cmd_insertemail"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@Player"/>
			<dependency name="false"/>
			<dependency name="pLogged"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:isValidEmail" syntax="isValidEmail(email[])">
			<stacksize value="9"/>
			<referrer name="dialog_EMAIL"/>
			<dependency name="false"/>
			<dependency name="strfind"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="email">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:iseven" syntax="iseven(value)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="value">
				Value to check if is even.
			</param>
			 
		</member>
		<member name="M:ishex" syntax="ishex(str[])">
			<stacksize value="3"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check.
			</param>
			  <returns>  true/false.  </returns> 
		</member>
		<member name="M:isnull" syntax="isnull(str[])">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check if is null.
			</param>
			 
		</member>
		<member name="M:isnumeric" syntax="isnumeric(str[])">
			<stacksize value="2"/>
			<dependency name="cellmin"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to check
			</param>
			  <remarks>  Checks if a given string is numeric.  </remarks> 
		</member>
		<member name="M:isodd" syntax="isodd(value)">
			<tagname value="bool"/>
			<stacksize value="1"/>
			<param name="value">
				Value to check if is odd.
			</param>
			 
		</member>
		<member name="M:iterfunc" syntax="iterfunc(params)">
			<stacksize value="1"/>
			<param name="params">
				The iterator function's parameters.
			</param>
			  <remarks>  Used to declare a special iterator function.  Examples:  <code>  iterfunc stock OnlyZero(cur)                                                    <br />  {                                                                               <br /><indent />  if (cur == -1)                                                              <br /><indent /><indent />  return 0;                                                               <br /><indent />  return -1;                                                                  <br />  }                                                                               <br />  </code>  <code>  iterfunc stock AlsoOnlyZero[cellmin](cur)                                       <br />  {                                                                               <br /><indent />  if (cur == cellmin)                                                         <br /><indent /><indent />  return 0;                                                               <br /><indent />  return cellmin;                                                             <br />  }                                                                               <br />  </code>  <code>  iterfunc stock OneToTen[cellmin](cur)                                           <br />  {                                                                               <br /><indent />  if (cur == cellmin)                                                         <br /><indent /><indent />  return 1;                                                               <br /><indent />  if (cur == 10)                                                              <br /><indent /><indent />  return cellmin;                                                         <br /><indent />  return cur + 1;                                                             <br />  }                                                                               <br />  </code>  <code>  iterfunc stock OneToN(cur, n)                                                   <br />  {                                                                               <br /><indent />  if (n &lt; 1)                                                               <br /><indent /><indent />  return -1;                                                              <br /><indent />  if (cur == -1)                                                              <br /><indent /><indent />  return 1;                                                               <br /><indent />  if (cur == n)                                                               <br /><indent /><indent />  return -1;                                                              <br /><indent />  return cur + 1;                                                             <br />  }                                                                               <br />  </code>  </remarks> 
		</member>
		<member name="M:jobWork" syntax="jobWork(playerid, job)">
			<stacksize value="4103"/>
			<referrer name="pc_cmd_startwork"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CHECKPOINT_ARMSDEALER"/>
			<dependency name="CHECKPOINT_CARPENTER"/>
			<dependency name="CHECKPOINT_DRUGSDEALER"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="GetDistanceBetweenPoints"/>
			<dependency name="JOB_ARMSDEALER"/>
			<dependency name="JOB_CARPENTER"/>
			<dependency name="JOB_DRUGSDEALER"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="JobVehicle"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="Working"/>
			<dependency name="gString"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="job">
			</param>
		</member>
		<member name="M:kickEx" syntax="kickEx(playerid)">
			<stacksize value="3"/>
			<referrer name="kickEx@_yT"/>
			<dependency name="Kick"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:kickEx@_yT" syntax="kickEx@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="kickEx"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:kickEx_yT@" syntax="kickEx_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="banPlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="wrongPass"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="checkPanel"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnPlayerCommandReceived"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:kickPlayer" syntax="kickPlayer(playerid, adminid, silent, reason[])">
			<stacksize value="4135"/>
			<referrer name="pc_cmd_kick"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerName"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gQuery"/>
			<dependency name="getDateTime"/>
			<dependency name="getDateTime"/>
			<dependency name="gettime"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="silent">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:loadMaps" syntax="loadMaps()">
			<attribute name="public"/>
			<stacksize value="20"/>
			<referrer name="CB_OnGameModeInit"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CreateDynamicObject"/>
			<dependency name="CreateDynamicObjectEx"/>
			<dependency name="SetDynamicObjectMaterial"/>
			<dependency name="gates"/>
		</member>
		<member name="M:main" syntax="main()">
			<attribute name="entry"/>
			<stacksize value="3"/>
			<dependency name="Malloc_TrySetup"/>
		</member>
		<member name="M:malloc" syntax="malloc(size)">
			<tagname value="Alloc"/>
			<stacksize value="1"/>
			<param name="size">
				Size of memory to allocate.
			</param>
			  <returns>  0 on fail or a data handle on sucess.  </returns>  <remarks>  Displays errors in secure mode.  </remarks> 
		</member>
		<member name="M:max" syntax="max(value1, value2)">
			<attribute name="native"/>
			<referrer name="YVA2_FoundPush"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:memcpy" syntax="memcpy(dest[], source[], index, numbytes, maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="CodeScanCheck"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="rawMemcpy"/>
			<referrer name="YVA2_DoPush"/>
			<referrer name="Iter_Init_Internal"/>
			<referrer name="Iter_YieldLoop"/>
			<referrer name="Iter_YieldReturn"/>
			<referrer name="Malloc_GetA"/>
			<referrer name="Malloc_SetA"/>
			<referrer name="Malloc_SetVAA"/>
			<referrer name="Callback_Get"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="index">
			</param>
			<param name="numbytes">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:memset" syntax="memset(arr[], val, size)">
			<stacksize value="7"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="rawMemset"/>
			<referrer name="Bit_SetAll"/>
			<referrer name="Malloc_TrySetup"/>
			<referrer name="Malloc_Allocate"/>
			<dependency name="rawMemset"/>
			<param name="arr">
				<paraminfo> [] </paraminfo>
				Array or address to set to a value.
			</param>
			<param name="val">
			</param>
			<param name="size">
			</param>
			  <param name="iValue">What to set the cells to.</param>  <param name="iSize">Number of cells to fill.</param>  <remarks>  Based on code by Slice:  <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781" />  Modified to use binary flags instead of a loop.  "memset" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "rawmemset" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a multiple  of 4.  </remarks> 
		</member>
		<member name="M:mget" syntax="mget(slot, index)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to get data from.
			</param>
			<param name="index">
				The location in the unit to get.
			</param>
			    <returns>  The data  </returns>  <remarks>  Shorthand for <symbolref name="Malloc_Get" />.  </remarks> 
		</member>
		<member name="M:mgeta" syntax="mgeta(target[], length, array, index)">
			<stacksize value="1"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the string.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			        <returns>  The data  </returns>  <remarks>  Displays errors in secure mode.  Gets an array.  Shorthand for <symbolref name="Malloc_GetA" />.  </remarks> 
		</member>
		<member name="M:mgets" syntax="mgets(target[], length, array, index, pack)">
			<stacksize value="1"/>
			<param name="target">
				<paraminfo> [] </paraminfo>
				Target for the string.
			</param>
			<param name="length">
				Length of the target.
			</param>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Return the string packed?
			</param>
			          <returns>  The data  </returns>  <remarks>  Displays errors in secure mode.  Gets a string.  Shorthand for <symbolref name="Malloc_GetS" />.  </remarks> 
		</member>
		<member name="M:min" syntax="min(value1, value2)">
			<attribute name="native"/>
			<referrer name="DisasmWriteData"/>
			<referrer name="CodeScanAddJumpTarget"/>
			<referrer name="CodeScanAddSwitchTarget"/>
			<referrer name="YHash"/>
			<param name="value1">
			</param>
			<param name="value2">
			</param>
		</member>
		<member name="M:missionName" syntax="missionName(playerid, type, id)">
			<stacksize value="71"/>
			<referrer name="checkMission"/>
			<referrer name="pc_cmd_quests"/>
			<dependency name="format"/>
			<dependency name="missionName"/>
			<dependency name="pNeedProgress"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:mset" syntax="mset(slot, index, value)">
			<stacksize value="1"/>
			<param name="slot">
				<paraminfo>Alloc </paraminfo>
				The allocation unit to set in.
			</param>
			<param name="index">
				Where in the unit to set.
			</param>
			<param name="value">
				The value to save.
			</param>
			      <remarks>  Shorthand for <symbolref name="Malloc_Set" />.  </remarks> 
		</member>
		<member name="M:mseta" syntax="mseta(array, index, str[], len)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				Array to insert.
			</param>
			<param name="len">
				Length of the array.
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts an array.  Shorthand for <symbolref name="Malloc_SetA" />.  </remarks> 
		</member>
		<member name="M:msets" syntax="msets(array, index, str[], pack)">
			<stacksize value="1"/>
			<param name="array">
				<paraminfo>Alloc </paraminfo>
				Data unit to put information in.
			</param>
			<param name="index">
				Index in the unit.
			</param>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to insert
			</param>
			<param name="pack">
				<paraminfo>bool </paraminfo>
				Should the string be packed in?
			</param>
			        <remarks>  Displays errors in secure mode.  Inserts a string.  Shorthand for <symbolref name="Malloc_SetS" />.  </remarks> 
		</member>
		<member name="M:mutePlayer" syntax="mutePlayer(playerid, adminid, minutes, reason[])">
			<stacksize value="37"/>
			<referrer name="pc_cmd_mute"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerName"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@MutedPlayers"/>
			<dependency name="Iterator@MutedPlayers"/>
			<dependency name="SQL"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gQuery"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="minutes">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:mysql_close" syntax="mysql_close(handle)">
			<attribute name="native"/>
			<referrer name="MySQLLoad"/>
			<referrer name="ScriptInit_OnGameModeExit"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_connect" syntax="mysql_connect(host[], user[], password[], database[], option_id)">
			<tagname value="MySQL"/>
			<attribute name="native"/>
			<referrer name="MySQLLoad"/>
			<param name="host">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="user">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="password">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="database">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="option_id">
				<paraminfo>MySQLOpt </paraminfo>
			</param>
		</member>
		<member name="M:mysql_errno" syntax="mysql_errno(handle)">
			<attribute name="native"/>
			<referrer name="MySQLLoad"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_format" syntax="mysql_format(handle, output[], max_len, format[], ...)">
			<attribute name="native"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="max_len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_log" syntax="mysql_log(loglevel)">
			<attribute name="native"/>
			<referrer name="MySQLLoad"/>
			<param name="loglevel">
				<paraminfo>E_LOGLEVEL </paraminfo>
			</param>
		</member>
		<member name="M:mysql_pquery" syntax="mysql_pquery(handle, query[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="warnPlayer"/>
			<referrer name="banPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="onPlayerLogin"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_query" syntax="mysql_query(handle, query[], use_cache)">
			<tagname value="Cache"/>
			<attribute name="native"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="checkPanel"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="use_cache">
				<paraminfo>bool </paraminfo>
			</param>
		</member>
		<member name="M:mysql_tquery" syntax="mysql_tquery(handle, query[], callback[], format[], ...)">
			<attribute name="native"/>
			<referrer name="update"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_members"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="MySQLLoad"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="SaveComponent"/>
			<referrer name="TimerCar"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_emails"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
			<param name="query">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="callback">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:mysql_unprocessed_queries" syntax="mysql_unprocessed_queries(handle)">
			<attribute name="native"/>
			<referrer name="checkPanel"/>
			<referrer name="Timers"/>
			<param name="handle">
				<paraminfo>MySQL </paraminfo>
			</param>
		</member>
		<member name="M:new_pec" syntax="new_pec(index, address, code_start)">
			<stacksize value="13"/>
			<referrer name="ProfilerInit"/>
			<dependency name="OP_CALL"/>
			<dependency name="OP_PUSH_C"/>
			<dependency name="ProfEntryCode"/>
			<dependency name="RelocateOpcode"/>
			<dependency name="enter_public"/>
			<dependency name="g_num_pecs"/>
			<dependency name="g_pecs"/>
			<dependency name="g_pecs"/>
			<dependency name="pec_call_enter"/>
			<dependency name="pec_push_8"/>
			<dependency name="pec_push_address"/>
			<dependency name="pec_push_index"/>
			<param name="index">
			</param>
			<param name="address">
			</param>
			<param name="code_start">
			</param>
		</member>
		<member name="M:numargs" syntax="numargs()">
			<attribute name="native"/>
			<referrer name="refabs"/>
			<referrer name="ref"/>
			<referrer name="DynamicCallFunctionInclusion_"/>
			<referrer name="AsmEmitInstruction"/>
			<referrer name="CodeScanMatcherPattern_"/>
		</member>
		<member name="M:onPlayerLogin" syntax="onPlayerLogin(playerid)">
			<attribute name="public"/>
			<stacksize value="4159"/>
			<dependency name="AllowPlayerTeleport"/>
			<dependency name="ClockTD"/>
			<dependency name="DCC_GetBotPresenceStatus"/>
			<dependency name="DCC_SetBotActivity"/>
			<dependency name="DCC_SetBotPresenceStatus"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="I@"/>
			<dependency name="IDLE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iter_Single@Freqs"/>
			<dependency name="Iter_Single@Player"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="Iter_Single@ServerStaff"/>
			<dependency name="Iter_Single@TotalClanMembers"/>
			<dependency name="Iter_Single@Wanteds"/>
			<dependency name="Iter_Single@loggedPlayers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@Freqs"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="Iterator@ServerStaff"/>
			<dependency name="Iterator@TotalClanMembers"/>
			<dependency name="Iterator@Wanteds"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="J@"/>
			<dependency name="MoneyMoney"/>
			<dependency name="PlayerNumber"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="StoreMoney"/>
			<dependency name="TextDrawSetString"/>
			<dependency name="TextDrawShowForPlayer"/>
			<dependency name="TimerWanted_yT@"/>
			<dependency name="_Timer_F"/>
			<dependency name="cClanColor"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_bool"/>
			<dependency name="cache_get_value_name_float"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="clanInfo"/>
			<dependency name="clearChat"/>
			<dependency name="false"/>
			<dependency name="gQuery"/>
			<dependency name="gString"/>
			<dependency name="getDateTime"/>
			<dependency name="getDateTime"/>
			<dependency name="getdate"/>
			<dependency name="gettime"/>
			<dependency name="giveQuest"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="pArmsSkill"/>
			<dependency name="pArmsTimes"/>
			<dependency name="pArrested"/>
			<dependency name="pBank"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="pCarpenterSkill"/>
			<dependency name="pCarpenterTimes"/>
			<dependency name="pClan"/>
			<dependency name="pClanAge"/>
			<dependency name="pClanRank"/>
			<dependency name="pClanTag"/>
			<dependency name="pClanWarns"/>
			<dependency name="pCommands"/>
			<dependency name="pDailyMission"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pDrugs"/>
			<dependency name="pDrugsSkill"/>
			<dependency name="pDrugsTimes"/>
			<dependency name="pEMail"/>
			<dependency name="pFPSShow"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionPunish"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pFishSkill"/>
			<dependency name="pFishTimes"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pGender"/>
			<dependency name="pGuns"/>
			<dependency name="pHelper"/>
			<dependency name="pHours"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pIp"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pJob"/>
			<dependency name="pLevel"/>
			<dependency name="pLiveToggle"/>
			<dependency name="pLogged"/>
			<dependency name="pLoginEnabled"/>
			<dependency name="pLoginTimer"/>
			<dependency name="pLoginTries"/>
			<dependency name="pMats"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pNeedProgress"/>
			<dependency name="pPassword"/>
			<dependency name="pPhone"/>
			<dependency name="pPhoneBook"/>
			<dependency name="pPremium"/>
			<dependency name="pPremiumPoints"/>
			<dependency name="pProgress"/>
			<dependency name="pRent"/>
			<dependency name="pReportMute"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="pSeconds"/>
			<dependency name="pSkin"/>
			<dependency name="pSpawnChange"/>
			<dependency name="pStoreBank"/>
			<dependency name="pTruckSkill"/>
			<dependency name="pTruckTimes"/>
			<dependency name="pTutorial"/>
			<dependency name="pVIP"/>
			<dependency name="pVehicleSlots"/>
			<dependency name="pWTChannel"/>
			<dependency name="pWTalkie"/>
			<dependency name="pWToggle"/>
			<dependency name="pWantedDeaths"/>
			<dependency name="pWantedLevel"/>
			<dependency name="pWantedTime"/>
			<dependency name="pWarn"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendClanMessage"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendStaff"/>
			<dependency name="serverHud"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="updateLevelBar"/>
			<dependency name="updatePlayer"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wantedTime"/>
			<dependency name="wrongPass"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:oocNews" syntax="oocNews(color, text[], ...)">
			<stacksize value="15"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="OnPlayerText"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@Player"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gFast"/>
			<dependency name="pLiveToggle"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:pc_alias_acceptreport" syntax="pc_alias_acceptreport()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_addnos" syntax="pc_alias_addnos()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_adminchat" syntax="pc_alias_adminchat()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_admingivelicense" syntax="pc_alias_admingivelicense()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_adminsuspendlicense" syntax="pc_alias_adminsuspendlicense()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_announce" syntax="pc_alias_announce()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_auninvite" syntax="pc_alias_auninvite()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_clearchat" syntax="pc_alias_clearchat()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_closereport" syntax="pc_alias_closereport()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_despawncar" syntax="pc_alias_despawncar()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_fixveh" syntax="pc_alias_fixveh()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_flipveh" syntax="pc_alias_flipveh()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_helperchat" syntax="pc_alias_helperchat()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_makeleader" syntax="pc_alias_makeleader()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_reportmute" syntax="pc_alias_reportmute()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_setadmin" syntax="pc_alias_setadmin()">
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_setrepsectpoints" syntax="pc_alias_setrepsectpoints()">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_alias_vehicles" syntax="pc_alias_vehicles()">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="PC_RegAlias"/>
		</member>
		<member name="M:pc_cmd_aaa2" syntax="pc_cmd_aaa2(playerid, parmas[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="pinBusiness"/>
			<dependency name="pinFaction"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="parmas">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_accept" syntax="pc_cmd_accept(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4138"/>
			<dependency name="CHECKPOINT_FACTION_DUTY"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="InstructorAcceptedCall"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iter_Single@ServiceCalls"/>
			<dependency name="Iter_Single@TotalClanMembers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServiceCalls"/>
			<dependency name="Iterator@TotalClanMembers"/>
			<dependency name="MedicAcceptedCall"/>
			<dependency name="PlayerMoney"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="SERVICE_INSTRUCTOR"/>
			<dependency name="SERVICE_PARAMEDICS"/>
			<dependency name="SERVICE_TAXI"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="YHash"/>
			<dependency name="addRaportPoint"/>
			<dependency name="cTotal"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInvitedBy"/>
			<dependency name="fSkins"/>
			<dependency name="factionLog"/>
			<dependency name="invitedByPlayer"/>
			<dependency name="invitedPlayer"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pClan"/>
			<dependency name="pClanAge"/>
			<dependency name="pClanRank"/>
			<dependency name="pClanWarns"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pInLesson"/>
			<dependency name="pLesson"/>
			<dependency name="pLicense"/>
			<dependency name="pLicenseOffer"/>
			<dependency name="pLiveOffer"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="pSpawnChange"/>
			<dependency name="pTalkingLive"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="ticketMoney"/>
			<dependency name="ticketPlayer"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_acceptreport" syntax="pc_cmd_acceptreport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="EOS"/>
			<dependency name="GetReportID"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="PlayerHaveReport"/>
			<dependency name="REPORT_TYPE_NONE"/>
			<dependency name="_Timer_F"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pReportChat"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportPlayer"/>
			<dependency name="reportText"/>
			<dependency name="reportTimer"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_acover" syntax="pc_cmd_acover(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="31"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerID"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SetPlayerName"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pAdminCover"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="serverHud"/>
			<dependency name="strlen"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ad" syntax="pc_cmd_ad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4119"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="AdText"/>
			<dependency name="AdTimer"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="J@"/>
			<dependency name="PlayerMoney"/>
			<dependency name="advertismentTimer_yT@"/>
			<dependency name="bizBalance"/>
			<dependency name="bizFee"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gettime"/>
			<dependency name="pLevel"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pPhone"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="secinmin"/>
			<dependency name="secinmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendStaff"/>
			<dependency name="strlen"/>
			<dependency name="totalAds"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_GameTextForPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_addbizgas" syntax="pc_cmd_addbizgas(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@ServerGasCan"/>
			<dependency name="Iterator@ServerBusinesses"/>
			<dependency name="Iterator@ServerGasCan"/>
			<dependency name="bizInfo"/>
			<dependency name="bizType"/>
			<dependency name="gBizID"/>
			<dependency name="gFull"/>
			<dependency name="gID"/>
			<dependency name="gX"/>
			<dependency name="gY"/>
			<dependency name="gZ"/>
			<dependency name="gasInfo"/>
			<dependency name="gasInfo"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="updateGasCan"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_addexamcp" syntax="pc_cmd_addexamcp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@ExamenCheckpoints"/>
			<dependency name="Iterator@ExamenCheckpoints"/>
			<dependency name="SQL"/>
			<dependency name="dmvID"/>
			<dependency name="dmvX"/>
			<dependency name="dmvY"/>
			<dependency name="dmvZ"/>
			<dependency name="examenInfo"/>
			<dependency name="examenInfo"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_addnos" syntax="pc_cmd_addnos(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="AddVehicleComponent"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_adminbusiness" syntax="pc_cmd_adminbusiness(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IDSelected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerBusinesses"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_adminchat" syntax="pc_cmd_adminchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_admingivelicense" syntax="pc_cmd_admingivelicense(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="47"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YHash"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_adminhouse" syntax="pc_cmd_adminhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IDSelected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerHouses"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_admins" syntax="pc_cmd_admins(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_adminsuspendlicense" syntax="pc_cmd_adminsuspendlicense(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="47"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YHash"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_admintakelicense" syntax="pc_cmd_admintakelicense(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="46"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YHash"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ah" syntax="pc_cmd_ah(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_aim" syntax="pc_cmd_aim(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_akick" syntax="pc_cmd_akick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_animlist" syntax="pc_cmd_animlist(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_announce" syntax="pc_cmd_announce(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="152"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_aq" syntax="pc_cmd_aq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Questions"/>
			<dependency name="format"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pQuestionText"/>
			<dependency name="pTalkingLive"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ar" syntax="pc_cmd_ar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="ConversationOpen"/>
			<dependency name="HelperBusy"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="sendPlayerError"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_area" syntax="pc_cmd_area(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4143"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmourEx"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="YHash"/>
			<dependency name="getWeaponName"/>
			<dependency name="getWeaponName"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="serverWeapon"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_armour" syntax="pc_cmd_armour(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="SetPlayerArmourEx"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hUpgrade"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pName"/>
			<dependency name="pRent"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_arrest" syntax="pc_cmd_arrest(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@JailedPlayers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@JailedPlayers"/>
			<dependency name="J@"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="TimerJail_yT@"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="addRaportPoint"/>
			<dependency name="cellRandom"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="jailTime"/>
			<dependency name="pArrested"/>
			<dependency name="pCuffed"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessageToAll"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_attack" syntax="pc_cmd_attack(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="80"/>
			<dependency name="I@"/>
			<dependency name="InWar"/>
			<dependency name="IsPlayerInTurf"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@ServerTurfs"/>
			<dependency name="Iter_Single@ServerWars"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServerWars"/>
			<dependency name="J@"/>
			<dependency name="TimerWar_yT@"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="tOwned"/>
			<dependency name="true"/>
			<dependency name="turfInfo"/>
			<dependency name="wAttacker"/>
			<dependency name="wFaction"/>
			<dependency name="wTime"/>
			<dependency name="war"/>
			<dependency name="warInfo"/>
			<dependency name="warInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_auninvite" syntax="pc_cmd_auninvite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="49"/>
			<dependency name="DestroyObject"/>
			<dependency name="IsValidObject"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pFactionPunish"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="svfVehicleObjects"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehiclePlayerID"/>
			<dependency name="vehicleRank"/>
			<dependency name="whenPlayerLeaveFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_balance" syntax="pc_cmd_balance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="72"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ban" syntax="pc_cmd_ban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4172"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="banPlayer"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_banip" syntax="pc_cmd_banip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4175"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="getDateTime"/>
			<dependency name="getDateTime"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="pIp"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_banipoffline" syntax="pc_cmd_banipoffline(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4188"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="getDateTime"/>
			<dependency name="getDateTime"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="pIp"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_banoffline" syntax="pc_cmd_banoffline(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="99"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_basket" syntax="pc_cmd_basket(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bat" syntax="pc_cmd_bat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_beach" syntax="pc_cmd_beach(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bizbalance" syntax="pc_cmd_bizbalance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8201"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bizBalance"/>
			<dependency name="bizInfo"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bizdeposit" syntax="pc_cmd_bizdeposit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12299"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bizBalance"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bizlock" syntax="pc_cmd_bizlock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizLocked"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bizoption" syntax="pc_cmd_bizoption(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bizwithdraw" syntax="pc_cmd_bizwithdraw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12299"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="SendClientMessage"/>
			<dependency name="bizBalance"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_blockf" syntax="pc_cmd_blockf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="factionChat"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_bomb" syntax="pc_cmd_bomb(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="ClearAnimations"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_box" syntax="pc_cmd_box(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_buy" syntax="pc_cmd_buy(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="bizInfo"/>
			<dependency name="bizType"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_buybusiness" syntax="pc_cmd_buybusiness(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12304"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="areaBizz"/>
			<dependency name="bizDescription"/>
			<dependency name="bizExtX"/>
			<dependency name="bizExtY"/>
			<dependency name="bizExtZ"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwned"/>
			<dependency name="bizOwner"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="cache_delete"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_num_rows"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gString"/>
			<dependency name="mysql_query"/>
			<dependency name="pBank"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_buycar" syntax="pc_cmd_buycar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="CB_SelectTextDraw"/>
			<dependency name="DSModels"/>
			<dependency name="DealerCar"/>
			<dependency name="DealerCarType"/>
			<dependency name="DealerID"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="LoadDsVehs"/>
			<dependency name="PlayerTextDrawSetPreviewModel"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="ShowCamera"/>
			<dependency name="ShowDealerShipTD"/>
			<dependency name="TestingModel"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="dModel"/>
			<dependency name="pinDealer"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="true"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_buyhouse" syntax="pc_cmd_buyhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="GetPlayerID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SQL"/>
			<dependency name="StoreMoney"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="areaHouse"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hExtX"/>
			<dependency name="hExtY"/>
			<dependency name="hExtZ"/>
			<dependency name="hID"/>
			<dependency name="hOwned"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pBank"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pLevel"/>
			<dependency name="pMoney"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_buyinsurance" syntax="pc_cmd_buyinsurance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="floatround"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="getInsurancePrice"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvAge"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="pvOdometer"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_buylevel" syntax="pc_cmd_buylevel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="StoreMoney"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pLevel"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="updateLevelBar"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_cancel" syntax="pc_cmd_cancel(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="40"/>
			<dependency name="CHECKPOINT_FACTION_DUTY"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="InstructorAcceptedCall"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@ServiceCalls"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServiceCalls"/>
			<dependency name="MedicAcceptedCall"/>
			<dependency name="SERVICE_INSTRUCTOR"/>
			<dependency name="SERVICE_PARAMEDICS"/>
			<dependency name="SERVICE_TAXI"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_carcolor" syntax="pc_cmd_carcolor(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="ChangeVehicleColor"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvID"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_carhand" syntax="pc_cmd_carhand(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_carplate" syntax="pc_cmd_carplate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="StoreMoney"/>
			<dependency name="format"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvCarPlate"/>
			<dependency name="pvID"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ch" syntax="pc_cmd_ch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="ConversationOpen"/>
			<dependency name="HelperAtribut"/>
			<dependency name="HelperBusy"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="QuestionStock"/>
			<dependency name="QuestionStock"/>
			<dependency name="_Timer_F"/>
			<dependency name="helpTimer"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_chant" syntax="pc_cmd_chant(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_chat" syntax="pc_cmd_chat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_cinvite" syntax="pc_cmd_cinvite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4139"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cSlots"/>
			<dependency name="cTotal"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInvitedBy"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pClan"/>
			<dependency name="pClanRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_clan" syntax="pc_cmd_clan(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="pClan"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_clanchat" syntax="pc_cmd_clanchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="Reclama"/>
			<dependency name="cClanColor"/>
			<dependency name="cRank1"/>
			<dependency name="cRank2"/>
			<dependency name="cRank3"/>
			<dependency name="cRank4"/>
			<dependency name="cRank5"/>
			<dependency name="cRank6"/>
			<dependency name="cRank7"/>
			<dependency name="clanChat"/>
			<dependency name="clanInfo"/>
			<dependency name="clanInfo"/>
			<dependency name="faceReclama"/>
			<dependency name="pClan"/>
			<dependency name="pClanRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="removeFunction"/>
			<dependency name="sendClanMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_clear" syntax="pc_cmd_clear(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4138"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Wanteds"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@Wanteds"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="_Timer_F"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWantedLevel"/>
			<dependency name="pWantedTime"/>
			<dependency name="pinFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendPolice"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wantedName"/>
			<dependency name="wantedName"/>
			<dependency name="wantedTime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_clearanim" syntax="pc_cmd_clearanim(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_clearchat" syntax="pc_cmd_clearchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="clearChat"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_closereport" syntax="pc_cmd_closereport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="74"/>
			<dependency name="EOS"/>
			<dependency name="GetReportID"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="PlayerHaveReport"/>
			<dependency name="REPORT_TYPE_NONE"/>
			<dependency name="_Timer_F"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pReportChat"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportPlayer"/>
			<dependency name="reportText"/>
			<dependency name="reportTimer"/>
			<dependency name="reportType"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_closestcar" syntax="pc_cmd_closestcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetClosestVehicle"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_confiscate" syntax="pc_cmd_confiscate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="22"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="addRaportPoint"/>
			<dependency name="haveWeapons"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pDrugs"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="resetWeapons"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_contract" syntax="pc_cmd_contract(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4111"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iter_Single@Contracts"/>
			<dependency name="Iterator@Contracts"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="cAgainst"/>
			<dependency name="cID"/>
			<dependency name="cMoney"/>
			<dependency name="contractInfo"/>
			<dependency name="contractInfo"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_contracts" syntax="pc_cmd_contracts(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Contracts"/>
			<dependency name="Iterator@Contracts"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="cAgainst"/>
			<dependency name="cID"/>
			<dependency name="cMoney"/>
			<dependency name="contractInfo"/>
			<dependency name="contractInfo"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_count" syntax="pc_cmd_count(playerid, params[], help)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="CountTime"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_GameTextForAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="help">
			</param>
		</member>
		<member name="M:pc_cmd_crack" syntax="pc_cmd_crack(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_createbusiness" syntax="pc_cmd_createbusiness(playerid, params[], help)">
			<attribute name="public"/>
			<stacksize value="12336"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="BIZZ"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="CreateDynamicSphere"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerBusinesses"/>
			<dependency name="Iterator@ServerBusinesses"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="YHash"/>
			<dependency name="bizArea"/>
			<dependency name="bizBalance"/>
			<dependency name="bizDescription"/>
			<dependency name="bizExtX"/>
			<dependency name="bizExtY"/>
			<dependency name="bizExtZ"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInterior"/>
			<dependency name="bizLocked"/>
			<dependency name="bizOwned"/>
			<dependency name="bizOwner"/>
			<dependency name="bizOwnerID"/>
			<dependency name="bizPickup"/>
			<dependency name="bizPrice"/>
			<dependency name="bizStatic"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="bizType"/>
			<dependency name="bizX"/>
			<dependency name="bizY"/>
			<dependency name="bizZ"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="help">
			</param>
		</member>
		<member name="M:pc_cmd_createhouse" syntax="pc_cmd_createhouse(playerid, params[], help)">
			<attribute name="public"/>
			<stacksize value="8314"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicMapIcon"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="CreateDynamicSphere"/>
			<dependency name="E_STREAMER_EXTRA_ID"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="HOUSE"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@ServerHouses"/>
			<dependency name="Iterator@ServerHouses"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Streamer_SetIntData"/>
			<dependency name="YHash"/>
			<dependency name="bigInteriors"/>
			<dependency name="bigInteriorsID"/>
			<dependency name="format"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hArea"/>
			<dependency name="hBalance"/>
			<dependency name="hDescription"/>
			<dependency name="hExtX"/>
			<dependency name="hExtY"/>
			<dependency name="hExtZ"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hLocked"/>
			<dependency name="hOwned"/>
			<dependency name="hOwner"/>
			<dependency name="hOwnerID"/>
			<dependency name="hPickup"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hRentabil"/>
			<dependency name="hRenters"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="hUpgrade"/>
			<dependency name="hX"/>
			<dependency name="hY"/>
			<dependency name="hZ"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="mediumInteriors"/>
			<dependency name="mediumInteriorsID"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="smallInteriors"/>
			<dependency name="smallInteriorsID"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="help">
			</param>
		</member>
		<member name="M:pc_cmd_createsafe" syntax="pc_cmd_createsafe(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4149"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Free_Internal"/>
			<dependency name="Iterator@FactionSafes"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sDrugs"/>
			<dependency name="sFactionID"/>
			<dependency name="sID"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="sPosX"/>
			<dependency name="sPosY"/>
			<dependency name="sPosZ"/>
			<dependency name="sVirtualID"/>
			<dependency name="safeInfo"/>
			<dependency name="safeInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_crossarms" syntax="pc_cmd_crossarms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_cuff" syntax="pc_cmd_cuff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="18"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCuffed"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_d" syntax="pc_cmd_d(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4247"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Reclama"/>
			<dependency name="SetPlayerChatBubble"/>
			<dependency name="faceReclama"/>
			<dependency name="factionName"/>
			<dependency name="pAdmin"/>
			<dependency name="pFaction"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="removeFunction"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dance" syntax="pc_cmd_dance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dancing" syntax="pc_cmd_dancing(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_deal" syntax="pc_cmd_deal(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dealstance" syntax="pc_cmd_dealstance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_deletead" syntax="pc_cmd_deletead(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="42"/>
			<dependency name="AdText"/>
			<dependency name="AdText"/>
			<dependency name="AdTimer"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendStaff"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_deletemyad" syntax="pc_cmd_deletemyad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="AdText"/>
			<dependency name="AdText"/>
			<dependency name="AdTimer"/>
			<dependency name="SendClientMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_deposit" syntax="pc_cmd_deposit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4185"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GivePlayerBank"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="PlayerMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatNumbers"/>
			<dependency name="formatNumbers"/>
			<dependency name="pBank"/>
			<dependency name="pMoney"/>
			<dependency name="pSQLID"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_despawncar" syntax="pc_cmd_despawncar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@AdminVehicles"/>
			<dependency name="Iterator@AdminVehicles"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="false"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_despawncars" syntax="pc_cmd_despawncars(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Iter_Clear_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Single@AdminVehicles"/>
			<dependency name="Iterator@AdminVehicles"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="false"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_disarm" syntax="pc_cmd_disarm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerWeapons"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_drunk" syntax="pc_cmd_drunk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_duty" syntax="pc_cmd_duty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="SetPlayerArmourEx"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SetPlayerToFactionColor"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="pSkin"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pinFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="resetWeapons"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="serverWeapon"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_dvf" syntax="pc_cmd_dvf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="DestroyObject"/>
			<dependency name="IsValidObject"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="sendPlayerError"/>
			<dependency name="svfVehicleObjects"/>
			<dependency name="true"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehiclePlayerID"/>
			<dependency name="vehicleRank"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_eat" syntax="pc_cmd_eat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hUpgrade"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pName"/>
			<dependency name="pRent"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_emails" syntax="pc_cmd_emails(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4103"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="SQL"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_endlive" syntax="pc_cmd_endlive(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="Questions"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="addRaportPoint"/>
			<dependency name="format"/>
			<dependency name="pQuestionText"/>
			<dependency name="pTalkingLive"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_engine" syntax="pc_cmd_engine(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="operator&lt;(Float:,_:)"/>
			<dependency name="GetPVarInt"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="J@"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="SetPVarInt"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="TimerSpeedo_yT@"/>
			<dependency name="_Timer_F"/>
			<dependency name="false"/>
			<dependency name="gettime"/>
			<dependency name="isBike"/>
			<dependency name="pName"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvInsurancePoints"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="speedo"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicleHud"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_entercar" syntax="pc_cmd_entercar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="isBike"/>
			<dependency name="isMotor"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_exam" syntax="pc_cmd_exam(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_Single@ExamenCheckpoints"/>
			<dependency name="Iterator@ExamenCheckpoints"/>
			<dependency name="MoneyMoney"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="StoreMoney"/>
			<dependency name="dmvX"/>
			<dependency name="dmvY"/>
			<dependency name="dmvZ"/>
			<dependency name="examenInfo"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pExamenCheckpoint"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="pSQLID"/>
			<dependency name="playerExamenPTD"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_exhaust" syntax="pc_cmd_exhaust(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_exhausted" syntax="pc_cmd_exhausted(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_f" syntax="pc_cmd_f(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="259"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Reclama"/>
			<dependency name="faceReclama"/>
			<dependency name="factionChat"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pspecFaction"/>
			<dependency name="removeFunction"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_factions" syntax="pc_cmd_factions(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Single@ServerFactions"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="fApps"/>
			<dependency name="fMinLevel"/>
			<dependency name="factionInfo"/>
			<dependency name="factionInfo"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fall" syntax="pc_cmd_fall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fallback" syntax="pc_cmd_fallback(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fapps" syntax="pc_cmd_fapps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsNumeric"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="fApps"/>
			<dependency name="factionInfo"/>
			<dependency name="factionInfo"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fare" syntax="pc_cmd_fare(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4105"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="SendClientMessage"/>
			<dependency name="_Timer_F"/>
			<dependency name="fareTD"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pFaction"/>
			<dependency name="pName"/>
			<dependency name="pTaxiDriver"/>
			<dependency name="pTaxiDuty"/>
			<dependency name="pTaxiFare"/>
			<dependency name="pTaxiMoney"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="taxi"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="updateTaxiTextdraw"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="va_SendClientMessageToAll"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fdeposit" syntax="pc_cmd_fdeposit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="areaSafe"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pSafeID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sFactionID"/>
			<dependency name="sPosX"/>
			<dependency name="sPosY"/>
			<dependency name="sPosZ"/>
			<dependency name="safeInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fill" syntax="pc_cmd_fill(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="operator-(Float:,Float:)"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="J@"/>
			<dependency name="PlayerMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="areaGascan"/>
			<dependency name="gFull"/>
			<dependency name="gX"/>
			<dependency name="gY"/>
			<dependency name="gZ"/>
			<dependency name="gasInfo"/>
			<dependency name="gasTimer_yT@"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="vehicle_fuel"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_finalquest" syntax="pc_cmd_finalquest(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="checkMission"/>
			<dependency name="getNeedProgress"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pDailyMission"/>
			<dependency name="pProgress"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_findbusiness" syntax="pc_cmd_findbusiness(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CHECKPOINT_GPS"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerBusinesses"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="bizExtX"/>
			<dependency name="bizExtY"/>
			<dependency name="bizExtZ"/>
			<dependency name="bizInfo"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_findhouse" syntax="pc_cmd_findhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="CHECKPOINT_GPS"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="GetPlayerDistanceFromPoint"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerHouses"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="hExtX"/>
			<dependency name="hExtY"/>
			<dependency name="hExtZ"/>
			<dependency name="houseInfo"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fish" syntax="pc_cmd_fish(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<referrer name="pc_cmd_startwork"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="ClearAnimations"/>
			<dependency name="FishTimer"/>
			<dependency name="FishWeight"/>
			<dependency name="Fishing"/>
			<dependency name="FishingTimer_yT@"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInArea"/>
			<dependency name="J@"/>
			<dependency name="SetPlayerAttachedObject"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="pJob"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fixveh" syntax="pc_cmd_fixveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="RepairVehicle"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_flipveh" syntax="pc_cmd_flipveh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetVehicleZAngle"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_flock" syntax="pc_cmd_flock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4142"/>
			<dependency name="IsNumeric"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="UpdateDynamic3DTextLabelText"/>
			<dependency name="fID"/>
			<dependency name="fLocked"/>
			<dependency name="fText"/>
			<dependency name="factionInfo"/>
			<dependency name="factionInfo"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fly" syntax="pc_cmd_fly(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="StartFly"/>
			<dependency name="StopFly"/>
			<dependency name="false"/>
			<dependency name="pFlymode"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_freeze" syntax="pc_cmd_freeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFreeze"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_freqmembers" syntax="pc_cmd_freqmembers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Iter_Single@Freqs"/>
			<dependency name="Iterator@Freqs"/>
			<dependency name="pName"/>
			<dependency name="pWTChannel"/>
			<dependency name="pWTalkie"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_frisk" syntax="pc_cmd_frisk(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="GetPlayerWeaponData"/>
			<dependency name="GetWeaponName"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pDrugs"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pMats"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_frisked" syntax="pc_cmd_frisked(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fspec" syntax="pc_cmd_fspec(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<dependency name="IsNumeric"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pspecFaction"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fucku" syntax="pc_cmd_fucku(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_fwithdraw" syntax="pc_cmd_fwithdraw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="16396"/>
			<dependency name="Dialog_Open"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="areaSafe"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pSafeID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sDrugs"/>
			<dependency name="sFactionID"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="sPosX"/>
			<dependency name="sPosY"/>
			<dependency name="sPosZ"/>
			<dependency name="safeInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_getarrested" syntax="pc_cmd_getarrested(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_getcar" syntax="pc_cmd_getcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gethere" syntax="pc_cmd_gethere(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gethit" syntax="pc_cmd_gethit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4110"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CHECKPOINT_GETHIT"/>
			<dependency name="Contract"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="I@"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Random_Internal"/>
			<dependency name="Iter_Single@Contracts"/>
			<dependency name="Iterator@Contracts"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="J@"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerCheckpoint"/>
			<dependency name="ShowPlayerNameTagForPlayer"/>
			<dependency name="TimerGetHit_yT@"/>
			<dependency name="Undercover"/>
			<dependency name="cAgainst"/>
			<dependency name="cMoney"/>
			<dependency name="contractInfo"/>
			<dependency name="contractInfo"/>
			<dependency name="false"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="getHit"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_getjob" syntax="pc_cmd_getjob(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_Single@ServerJobs"/>
			<dependency name="SendClientMessage"/>
			<dependency name="areaJob"/>
			<dependency name="jobInfo"/>
			<dependency name="jobInfo"/>
			<dependency name="jobLevel"/>
			<dependency name="jobName"/>
			<dependency name="jobX"/>
			<dependency name="jobY"/>
			<dependency name="jobZ"/>
			<dependency name="pJob"/>
			<dependency name="pLevel"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_givegun" syntax="pc_cmd_givegun(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4108"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="getWeaponName"/>
			<dependency name="getWeaponName"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="serverWeapon"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_givelicense" syntax="pc_cmd_givelicense(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="PlayerMoney"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pInLesson"/>
			<dependency name="pLicense"/>
			<dependency name="pLicenseOffer"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_givemoney" syntax="pc_cmd_givemoney(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="60"/>
			<dependency name="CheckerBigInt"/>
			<dependency name="MoneyMoney"/>
			<dependency name="StoreMoney"/>
			<dependency name="Translate32Bit"/>
			<dependency name="formatNumberss"/>
			<dependency name="formatNumberss"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="updatePlayer"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_goto" syntax="pc_cmd_goto(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="IsSeatTaked"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="MaxSeats"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gotocar" syntax="pc_cmd_gotocar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="GetVehicleVirtualWorld"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gotofaction" syntax="pc_cmd_gotofaction(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="IsNumeric"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="fEnterX"/>
			<dependency name="fEnterY"/>
			<dependency name="fEnterZ"/>
			<dependency name="factionInfo"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="pinFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gotojob" syntax="pc_cmd_gotojob(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerJobs"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="jobID"/>
			<dependency name="jobInfo"/>
			<dependency name="jobInfo"/>
			<dependency name="jobName"/>
			<dependency name="jobX"/>
			<dependency name="jobY"/>
			<dependency name="jobZ"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gotomark" syntax="pc_cmd_gotomark(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="false"/>
			<dependency name="pMark"/>
			<dependency name="pMarkInterior"/>
			<dependency name="pMarkX"/>
			<dependency name="pMarkY"/>
			<dependency name="pMarkZ"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gotoxyz" syntax="pc_cmd_gotoxyz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gps" syntax="pc_cmd_gps(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCheckpoint"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_gro" syntax="pc_cmd_gro(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_handsup" syntax="pc_cmd_handsup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="pFreezed"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_headbutt" syntax="pc_cmd_headbutt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_heal" syntax="pc_cmd_heal(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="operator&gt;=(Float:,Float:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="MoneyMoney"/>
			<dependency name="PlayerMoney"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="StoreMoney"/>
			<dependency name="addRaportPoint"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hUpgrade"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAFKSeconds"/>
			<dependency name="pFaction"/>
			<dependency name="pHealth"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pinFaction"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_GameTextForPlayer"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_healme" syntax="pc_cmd_healme(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_helduty" syntax="pc_cmd_helduty(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="HelperDuty"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendHelper"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_help" syntax="pc_cmd_help(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_helperchat" syntax="pc_cmd_helperchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="pAdmin"/>
			<dependency name="pHelper"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendStaff"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_helpers" syntax="pc_cmd_helpers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="HelperDuty"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pHelper"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hide" syntax="pc_cmd_hide(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_highthrow" syntax="pc_cmd_highthrow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hitch" syntax="pc_cmd_hitch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hl" syntax="pc_cmd_hl(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="154"/>
			<dependency name="ConversationOpen"/>
			<dependency name="HelperAtribut"/>
			<dependency name="HelperBusy"/>
			<dependency name="pHelper"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hlock" syntax="pc_cmd_hlock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="hLocked"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hoodfrisked" syntax="pc_cmd_hoodfrisked(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_housebalance" syntax="pc_cmd_housebalance(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hBalance"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_housedeposit" syntax="pc_cmd_housedeposit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8202"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="PlayerMoney"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hBalance"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_houseoption" syntax="pc_cmd_houseoption(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_housewithdraw" syntax="pc_cmd_housewithdraw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8202"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hBalance"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_hud" syntax="pc_cmd_hud(playerid, parmas[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="gString"/>
			<dependency name="pFPSShow"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="parmas">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_id" syntax="pc_cmd_id(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="46"/>
			<dependency name="GetPlayerPing"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFPS"/>
			<dependency name="pFaction"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_injured" syntax="pc_cmd_injured(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_insertemail" syntax="pc_cmd_insertemail(playerid, params[], help)">
			<attribute name="public"/>
			<stacksize value="131"/>
			<dependency name="InsertEmail"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="help">
			</param>
		</member>
		<member name="M:pc_cmd_invite" syntax="pc_cmd_invite(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="78"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPVarInt"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="gString"/>
			<dependency name="gettime"/>
			<dependency name="invitedByPlayer"/>
			<dependency name="invitedPlayer"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ip" syntax="pc_cmd_ip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="108"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="SendClientMessage"/>
			<dependency name="gpci"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jail" syntax="pc_cmd_jail(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="44"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@JailedPlayers"/>
			<dependency name="Iterator@JailedPlayers"/>
			<dependency name="J@"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="TimerJail_yT@"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="cellRandom"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="jailTime"/>
			<dependency name="pAdmin"/>
			<dependency name="pCuffed"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jailo" syntax="pc_cmd_jailo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="67"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jobs" syntax="pc_cmd_jobs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="290"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="Iter_Single@ServerJobs"/>
			<dependency name="Iterator@ServerJobs"/>
			<dependency name="format"/>
			<dependency name="jobInfo"/>
			<dependency name="jobInfo"/>
			<dependency name="jobLegal"/>
			<dependency name="jobLevel"/>
			<dependency name="jobName"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_jumpwater" syntax="pc_cmd_jumpwater(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SendClientMessage"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_kick" syntax="pc_cmd_kick(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="kickPlayer"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_killcp" syntax="pc_cmd_killcp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DisablePlayerCheckpoint"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_kiss" syntax="pc_cmd_kiss(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_knife" syntax="pc_cmd_knife(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_koface" syntax="pc_cmd_koface(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_kostomach" syntax="pc_cmd_kostomach(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_laugh" syntax="pc_cmd_laugh(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lay" syntax="pc_cmd_lay(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lay2" syntax="pc_cmd_lay2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lcarjack1" syntax="pc_cmd_lcarjack1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lcarjack2" syntax="pc_cmd_lcarjack2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lean" syntax="pc_cmd_lean(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_leaveclan" syntax="pc_cmd_leaveclan(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@TotalClanMembers"/>
			<dependency name="Iterator@TotalClanMembers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="cClanColor"/>
			<dependency name="cTotal"/>
			<dependency name="clanInfo"/>
			<dependency name="pClan"/>
			<dependency name="pClanAge"/>
			<dependency name="pClanRank"/>
			<dependency name="pClanWarns"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendClanMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_leftslap" syntax="pc_cmd_leftslap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_licenses" syntax="pc_cmd_licenses(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="showLicenses"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lifejump" syntax="pc_cmd_lifejump(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lightcig" syntax="pc_cmd_lightcig(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lights" syntax="pc_cmd_lights(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="17"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="false"/>
			<dependency name="isBike"/>
			<dependency name="isBoat"/>
			<dependency name="isPlane"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="vehicle_lights"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_live" syntax="pc_cmd_live(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="14"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pLiveOffer"/>
			<dependency name="pName"/>
			<dependency name="pTalkingLive"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lock" syntax="pc_cmd_lock(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4112"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="GetClosestVehicle"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleParamsEx"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="SetVehicleParamsEx"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="pvID"/>
			<dependency name="pvLock"/>
			<dependency name="pvModelID"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lookout" syntax="pc_cmd_lookout(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lowbodypush" syntax="pc_cmd_lowbodypush(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_lowthrow" syntax="pc_cmd_lowthrow(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_makeleader" syntax="pc_cmd_makeleader(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="46"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="fSkins"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_mark" syntax="pc_cmd_mark(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pMark"/>
			<dependency name="pMarkInterior"/>
			<dependency name="pMarkX"/>
			<dependency name="pMarkY"/>
			<dependency name="pMarkZ"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_mdc" syntax="pc_cmd_mdc(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="showMDC"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_medic" syntax="pc_cmd_medic(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_megaphone" syntax="pc_cmd_megaphone(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="41"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Reclama"/>
			<dependency name="faceReclama"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="removeFunction"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_members" syntax="pc_cmd_members(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4103"/>
			<dependency name="SQL"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_mute" syntax="pc_cmd_mute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="75"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="mutePlayer"/>
			<dependency name="pAdmin"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_mutedplayers" syntax="pc_cmd_mutedplayers(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@MutedPlayers"/>
			<dependency name="Iterator@MutedPlayers"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_myad" syntax="pc_cmd_myad(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="AdText"/>
			<dependency name="AdText"/>
			<dependency name="AdTimer"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_myraport" syntax="pc_cmd_myraport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="45"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCommands"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionRank"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="raportPoints"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_n" syntax="pc_cmd_n(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="149"/>
			<dependency name="CautaHelper"/>
			<dependency name="HelperAtribut"/>
			<dependency name="QuestionStock"/>
			<dependency name="QuestionStock"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_news" syntax="pc_cmd_news(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="260"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="addRaportPoint"/>
			<dependency name="gettime"/>
			<dependency name="oocNews"/>
			<dependency name="pFaction"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="vehicleFaction"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_number" syntax="pc_cmd_number(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pPhone"/>
			<dependency name="pPhoneBook"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_order" syntax="pc_cmd_order(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="GunOrder"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pFaction"/>
			<dependency name="pGuns"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pinFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="safeInfo"/>
			<dependency name="safeInfo"/>
			<dependency name="saveSafe"/>
			<dependency name="sendPlayerError"/>
			<dependency name="serverWeapon"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_park" syntax="pc_cmd_park(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="19"/>
			<dependency name="operator&lt;(Float:,Float:)"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="ChangeVehiclePaintjob"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="GetVehicleDamageStatus"/>
			<dependency name="GetVehicleHealth"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="GetVehicleZAngle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="LinkVehicleToInterior"/>
			<dependency name="ModVehicle"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="SQL"/>
			<dependency name="SetVehicleHealth"/>
			<dependency name="SetVehicleNumberPlate"/>
			<dependency name="SetVehicleVirtualWorld"/>
			<dependency name="UpdateVehicleDamageStatus"/>
			<dependency name="false"/>
			<dependency name="gQuery"/>
			<dependency name="getVehicleSpeed"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="pvAngle"/>
			<dependency name="pvCarPlate"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvDamageDoors"/>
			<dependency name="pvDamageLights"/>
			<dependency name="pvDamagePanels"/>
			<dependency name="pvDamageTires"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvFuel"/>
			<dependency name="pvHealth"/>
			<dependency name="pvID"/>
			<dependency name="pvInterior"/>
			<dependency name="pvModelID"/>
			<dependency name="pvOwnerID"/>
			<dependency name="pvPaintJob"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="pvVirtualWorld"/>
			<dependency name="pvX"/>
			<dependency name="pvY"/>
			<dependency name="pvZ"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="vehicle_bonnet"/>
			<dependency name="vehicle_boot"/>
			<dependency name="vehicle_engine"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_lights"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pee" syntax="pc_cmd_pee(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="pFreezed"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_pm" syntax="pc_cmd_pm(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="137"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_push" syntax="pc_cmd_push(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_question" syntax="pc_cmd_question(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="189"/>
			<dependency name="Questions"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="pQuestionText"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_questions" syntax="pc_cmd_questions(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Questions"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pTalkingLive"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_quests" syntax="pc_cmd_quests(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="165"/>
			<dependency name="SendClientMessage"/>
			<dependency name="format"/>
			<dependency name="getNeedProgress"/>
			<dependency name="missionName"/>
			<dependency name="missionName"/>
			<dependency name="pDailyMission"/>
			<dependency name="pProgress"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_quitjob" syntax="pc_cmd_quitjob(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="CancelJob"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="SendClientMessage"/>
			<dependency name="Working"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pJob"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_r" syntax="pc_cmd_r(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="259"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Reclama"/>
			<dependency name="faceReclama"/>
			<dependency name="factionChat"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pspecFaction"/>
			<dependency name="removeFunction"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rap" syntax="pc_cmd_rap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rcarjack1" syntax="pc_cmd_rcarjack1(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rcarjack2" syntax="pc_cmd_rcarjack2(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rchat" syntax="pc_cmd_rchat(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="pName"/>
			<dependency name="pReportChat"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rentabil" syntax="pc_cmd_rentabil(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12301"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPVarInt"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="gettime"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hRentabil"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_renters" syntax="pc_cmd_renters(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Iter_Single@RentersHouses"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rentroom" syntax="pc_cmd_rentroom(playerid, parmas[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@RentersHouses"/>
			<dependency name="Iterator@RentersHouses"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="areaHouse"/>
			<dependency name="hExtX"/>
			<dependency name="hExtY"/>
			<dependency name="hExtZ"/>
			<dependency name="hID"/>
			<dependency name="hInterior"/>
			<dependency name="hOwned"/>
			<dependency name="hPrice"/>
			<dependency name="hRentabil"/>
			<dependency name="hX"/>
			<dependency name="hY"/>
			<dependency name="hZ"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pRent"/>
			<dependency name="pSQLID"/>
			<dependency name="pSpawnChange"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="parmas">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_reply" syntax="pc_cmd_reply(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="193"/>
			<dependency name="PlayerNumber"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pPhone"/>
			<dependency name="pPhoneOnline"/>
			<dependency name="pReply"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendToAdmin"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_report" syntax="pc_cmd_report(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="PlayerHaveReport"/>
			<dependency name="gettime"/>
			<dependency name="pReportMute"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_reportmute" syntax="pc_cmd_reportmute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="75"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pReportMute"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_reports" syntax="pc_cmd_reports(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Reports"/>
			<dependency name="Iterator@Reports"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="reportID"/>
			<dependency name="reportInfo"/>
			<dependency name="reportInfo"/>
			<dependency name="reportText"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_resetquests" syntax="pc_cmd_resetquests(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="3"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="resetQuest"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_resetraport" syntax="pc_cmd_resetraport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCommands"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_respawn" syntax="pc_cmd_respawn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_respawnhere" syntax="pc_cmd_respawnhere(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="I@"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="J@"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="respawnTimer_yT@"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_robman" syntax="pc_cmd_robman(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_rollfall" syntax="pc_cmd_rollfall(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_salute" syntax="pc_cmd_salute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_scratch" syntax="pc_cmd_scratch(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sellbiz" syntax="pc_cmd_sellbiz(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12303"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="bizDescription"/>
			<dependency name="bizFee"/>
			<dependency name="bizID"/>
			<dependency name="bizInfo"/>
			<dependency name="bizInfo"/>
			<dependency name="bizOwner"/>
			<dependency name="bizPrice"/>
			<dependency name="bizText"/>
			<dependency name="bizTitle"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sellbizstate" syntax="pc_cmd_sellbizstate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pBusiness"/>
			<dependency name="pBusinessID"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sellhouse" syntax="pc_cmd_sellhouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sellhousestate" syntax="pc_cmd_sellhousestate(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pinHouse"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_service" syntax="pc_cmd_service(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="46"/>
			<dependency name="GetMapZoneName"/>
			<dependency name="GetPlayerCityLocation"/>
			<dependency name="GetPlayerCityLocation"/>
			<dependency name="GetPlayerMapZone"/>
			<dependency name="InstructorAcceptedCall"/>
			<dependency name="IsValidMapZone"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@ServiceCalls"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServiceCalls"/>
			<dependency name="MedicAcceptedCall"/>
			<dependency name="SERVICE_INSTRUCTOR"/>
			<dependency name="SERVICE_PARAMEDICS"/>
			<dependency name="SERVICE_TAXI"/>
			<dependency name="TaxiAcceptedCall"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_set" syntax="pc_cmd_set(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="43"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerArmourEx"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="StoreMoney"/>
			<dependency name="YHash"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pBank"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="pPremium"/>
			<dependency name="pPremiumPoints"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="pStoreBank"/>
			<dependency name="pVIP"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="setSkin"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="updateLevelBar"/>
			<dependency name="updatePlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_setadmin" syntax="pc_cmd_setadmin(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="AllowPlayerTeleport"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iter_Single@ServerStaff"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerStaff"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="serverHud"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_setfreq" syntax="pc_cmd_setfreq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Single@Freqs"/>
			<dependency name="Iterator@Freqs"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pSQLID"/>
			<dependency name="pWTChannel"/>
			<dependency name="pWTalkie"/>
			<dependency name="pWToggle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_setguns" syntax="pc_cmd_setguns(playerid, parmas[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="GunName"/>
			<dependency name="GunName"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="pGuns"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="parmas">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sethelper" syntax="pc_cmd_sethelper(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pHelper"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendStaff"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_setraport" syntax="pc_cmd_setraport(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="15"/>
			<dependency name="fCommands"/>
			<dependency name="factionInfo"/>
			<dependency name="factionInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_setrentprice" syntax="pc_cmd_setrentprice(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12302"/>
			<dependency name="Update3DTextLabelText"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="hDescription"/>
			<dependency name="hID"/>
			<dependency name="hOwner"/>
			<dependency name="hPrice"/>
			<dependency name="hRentPrice"/>
			<dependency name="hRentabil"/>
			<dependency name="hText"/>
			<dependency name="hTitle"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_shop" syntax="pc_cmd_shop(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="gString"/>
			<dependency name="pPremium"/>
			<dependency name="pVIP"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_shouting" syntax="pc_cmd_shouting(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_showfreq" syntax="pc_cmd_showfreq(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="pWTChannel"/>
			<dependency name="pWTalkie"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_showlicenses" syntax="pc_cmd_showlicenses(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="showLicenses"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sit" syntax="pc_cmd_sit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_skills" syntax="pc_cmd_skills(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="JOB_ARMSDEALER"/>
			<dependency name="JOB_CARPENTER"/>
			<dependency name="JOB_DRUGSDEALER"/>
			<dependency name="JOB_FISHER"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pArmsSkill"/>
			<dependency name="pArmsTimes"/>
			<dependency name="pCarpenterSkill"/>
			<dependency name="pCarpenterTimes"/>
			<dependency name="pDrugsSkill"/>
			<dependency name="pDrugsTimes"/>
			<dependency name="pFishSkill"/>
			<dependency name="pFishTimes"/>
			<dependency name="pTruckSkill"/>
			<dependency name="pTruckTimes"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="returnNeededPoints"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_skipn" syntax="pc_cmd_skipn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="CautaHelperNou"/>
			<dependency name="HelperBusy"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="sendPlayerError"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_slap" syntax="pc_cmd_slap(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator-(Float:,_:)"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerHealthEx"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_slapass" syntax="pc_cmd_slapass(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_slapcar" syntax="pc_cmd_slapcar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GetVehicleModel"/>
			<dependency name="GetVehiclePos"/>
			<dependency name="IsNumeric"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SetVehiclePos"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sms" syntax="pc_cmd_sms(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="193"/>
			<dependency name="PlayerNumber"/>
			<dependency name="PlayerPlaySound"/>
			<dependency name="SendClientMessage"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pPhone"/>
			<dependency name="pPhoneOnline"/>
			<dependency name="pReply"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendToAdmin"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_so" syntax="pc_cmd_so(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_spawncar" syntax="pc_cmd_spawncar(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="20"/>
			<dependency name="CB_CreateVehicle"/>
			<dependency name="GetPlayerFacingAngle"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@AdminVehicles"/>
			<dependency name="Iterator@AdminVehicles"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="PutPlayerInVehicle"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<dependency name="vehicle_fuel"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_spawnchange" syntax="pc_cmd_spawnchange(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_speed" syntax="pc_cmd_speed(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="pAdmin"/>
			<dependency name="pEnableBoost"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_startlesson" syntax="pc_cmd_startlesson(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pInLesson"/>
			<dependency name="pLevel"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_startwork" syntax="pc_cmd_startwork(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="JOB_ARMSDEALER"/>
			<dependency name="JOB_CARPENTER"/>
			<dependency name="JOB_DRUGSDEALER"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="Working"/>
			<dependency name="jobInfo"/>
			<dependency name="jobWork"/>
			<dependency name="jobXST"/>
			<dependency name="jobYST"/>
			<dependency name="jobZST"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pJob"/>
			<dependency name="pc_cmd_fish"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_stats" syntax="pc_cmd_stats(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="showStats"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_stoplesson" syntax="pc_cmd_stoplesson(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pInLesson"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_su" syntax="pc_cmd_su(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="I@"/>
			<dependency name="Iter_Add_InternalC"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Wanteds"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@Wanteds"/>
			<dependency name="J@"/>
			<dependency name="SetPlayerWantedLevel"/>
			<dependency name="TimerWanted_yT@"/>
			<dependency name="addRaportPoint"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pSQLID"/>
			<dependency name="pWantedLevel"/>
			<dependency name="pWantedTime"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sendPolice"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="wantedTime"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_sup" syntax="pc_cmd_sup(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_svf" syntax="pc_cmd_svf(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="266"/>
			<dependency name="Dialog_Open"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strcat"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_swapcolors" syntax="pc_cmd_swapcolors(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="ChangeVehicleColor"/>
			<dependency name="GetPlayerCash"/>
			<dependency name="GetPlayerState"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="MoneyMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="StoreMoney"/>
			<dependency name="pSQLID"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvColorOne"/>
			<dependency name="pvColorTwo"/>
			<dependency name="pvID"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicle_personal"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_taichi" syntax="pc_cmd_taichi(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tapcig" syntax="pc_cmd_tapcig(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tazer" syntax="pc_cmd_tazer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="GetPlayerWeapon"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="pTazer"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_ticket" syntax="pc_cmd_ticket(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4140"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="ticketMoney"/>
			<dependency name="ticketPlayer"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tie" syntax="pc_cmd_tie(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="GetPlayerVehicleID"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="IsPlayerInVehicle"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCuffed"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_tog" syntax="pc_cmd_tog(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="11"/>
			<dependency name="Dialog_Open"/>
			<dependency name="pLiveToggle"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_transfer" syntax="pc_cmd_transfer(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4124"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="GetPlayerBank"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="formatNumbers"/>
			<dependency name="formatNumbers"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="pTransferMoney"/>
			<dependency name="pTransferPlayer"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_turfs" syntax="pc_cmd_turfs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="GangZoneHideForPlayerEx"/>
			<dependency name="GangZoneShowForPlayerEx"/>
			<dependency name="Iter_Single@ServerTurfs"/>
			<dependency name="SendClientMessage"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pShowTurfs"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="tID"/>
			<dependency name="tOwned"/>
			<dependency name="true"/>
			<dependency name="turfInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unban" syntax="pc_cmd_unban(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unbanip" syntax="pc_cmd_unbanip(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="EOS"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_uncuff" syntax="pc_cmd_uncuff(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="RemovePlayerAttachedObject"/>
			<dependency name="SetPlayerSpecialAction"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCuffed"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unfreeze" syntax="pc_cmd_unfreeze(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="8"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="false"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFreeze"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unjail" syntax="pc_cmd_unjail(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="41"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@JailedPlayers"/>
			<dependency name="Iterator@JailedPlayers"/>
			<dependency name="PlayerTextDrawHide"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="_Timer_F"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="jailTime"/>
			<dependency name="jailTimeTD"/>
			<dependency name="pAdmin"/>
			<dependency name="pJailTime"/>
			<dependency name="pJailed"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unjailo" syntax="pc_cmd_unjailo(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="65"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="SQL"/>
			<dependency name="gQuery"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_tquery"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="strlen"/>
			<dependency name="strmatch"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unmute" syntax="pc_cmd_unmute(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="41"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@MutedPlayers"/>
			<dependency name="Iterator@MutedPlayers"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unrentroom" syntax="pc_cmd_unrentroom(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@RentersHouses"/>
			<dependency name="Iterator@RentersHouses"/>
			<dependency name="SendClientMessage"/>
			<dependency name="hID"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pRent"/>
			<dependency name="pSQLID"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_untie" syntax="pc_cmd_untie(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="10"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="ProxDetectorS"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pCuffed"/>
			<dependency name="pFactionRank"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_unwarn" syntax="pc_cmd_unwarn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="75"/>
			<dependency name="GetPVarInt"/>
			<dependency name="SetPVarInt"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pAdmin"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWarn"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendAdmin"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_upgradehouse" syntax="pc_cmd_upgradehouse(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="Iterator@RentersHouses"/>
			<dependency name="PlayerMoney"/>
			<dependency name="SendClientMessage"/>
			<dependency name="hUpgrade"/>
			<dependency name="houseInfo"/>
			<dependency name="houseInfo"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pHouse"/>
			<dependency name="pHouseID"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_usedrugs" syntax="pc_cmd_usedrugs(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="13"/>
			<dependency name="CB_ApplyAnimation"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="UsingDrugs"/>
			<dependency name="false"/>
			<dependency name="pDrugs"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendNearbyMessage"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="usedrugsTimer_yT@"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_vehicles" syntax="pc_cmd_vehicles(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="IsVehicleOccupied"/>
			<dependency name="Iter_Single@PlayerVehicles"/>
			<dependency name="Iterator@PlayerVehicles"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="gettime"/>
			<dependency name="pSelectVehicle"/>
			<dependency name="pVehicleSlots"/>
			<dependency name="personalVehicle"/>
			<dependency name="personalVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="pvDespawnTime"/>
			<dependency name="pvID"/>
			<dependency name="pvModelID"/>
			<dependency name="pvSpawnedID"/>
			<dependency name="sendPlayerError"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="vehNames"/>
			<dependency name="vehNames"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_vomit" syntax="pc_cmd_vomit(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="OnePlayAnim"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wank" syntax="pc_cmd_wank(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wanteds" syntax="pc_cmd_wanteds(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4133"/>
			<dependency name="CallRemoteFunction"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@Wanteds"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@Wanteds"/>
			<dependency name="chasedBy"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pName"/>
			<dependency name="pSelectedItem"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strcat"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_warn" syntax="pc_cmd_warn(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="73"/>
			<dependency name="GetPVarInt"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="gettime"/>
			<dependency name="isPlayerLogged"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessageToAll"/>
			<dependency name="warnPlayer"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wars" syntax="pc_cmd_wars(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="83"/>
			<dependency name="Iter_Single@ServerWars"/>
			<dependency name="WarScore"/>
			<dependency name="WarScore"/>
			<dependency name="factionName"/>
			<dependency name="factionName"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wAttacker"/>
			<dependency name="wFaction"/>
			<dependency name="wTime"/>
			<dependency name="warInfo"/>
			<dependency name="warInfo"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wave" syntax="pc_cmd_wave(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="12"/>
			<dependency name="IsPlayerInAnyVehicle"/>
			<dependency name="LoopingAnim"/>
			<dependency name="pAnimLooping"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_withdraw" syntax="pc_cmd_withdraw(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="4185"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GivePlayerBank"/>
			<dependency name="GivePlayerCash"/>
			<dependency name="SendClientMessage"/>
			<dependency name="formatNumbers"/>
			<dependency name="formatNumbers"/>
			<dependency name="pBank"/>
			<dependency name="pMoney"/>
			<dependency name="pSQLID"/>
			<dependency name="pStoreBank"/>
			<dependency name="pinBusiness"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="sendPlayerSyntax"/>
			<dependency name="sscanf"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wt" syntax="pc_cmd_wt(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="138"/>
			<dependency name="Iterator@Freqs"/>
			<dependency name="Reclama"/>
			<dependency name="faceReclama"/>
			<dependency name="gettime"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pWTChannel"/>
			<dependency name="pWTalkie"/>
			<dependency name="pWToggle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="removeFunction"/>
			<dependency name="sendPlayerError"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<dependency name="unformat"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:pc_cmd_wthelp" syntax="pc_cmd_wthelp(playerid, params[])">
			<attribute name="public"/>
			<stacksize value="5"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pWTalkie"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="params">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:playerTextDraws" syntax="playerTextDraws(playerid)">
			<stacksize value="8"/>
			<referrer name="resetVars"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="PlayerTextDrawAlignment"/>
			<dependency name="PlayerTextDrawBackgroundColor"/>
			<dependency name="PlayerTextDrawBoxColor"/>
			<dependency name="PlayerTextDrawColor"/>
			<dependency name="PlayerTextDrawFont"/>
			<dependency name="PlayerTextDrawLetterSize"/>
			<dependency name="PlayerTextDrawSetOutline"/>
			<dependency name="PlayerTextDrawSetPreviewModel"/>
			<dependency name="PlayerTextDrawSetPreviewRot"/>
			<dependency name="PlayerTextDrawSetPreviewVehCol"/>
			<dependency name="PlayerTextDrawSetProportional"/>
			<dependency name="PlayerTextDrawSetShadow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="PlayerTextDrawUseBox"/>
			<dependency name="fareTD"/>
			<dependency name="jailTimeTD"/>
			<dependency name="levelBar"/>
			<dependency name="playerExamenPTD"/>
			<dependency name="playerLevelPTD"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="serverDealerPTD"/>
			<dependency name="serverHud"/>
			<dependency name="true"/>
			<dependency name="vehicleHud"/>
			<dependency name="wantedTD"/>
			<dependency name="warTD"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:print" syntax="print(string[])">
			<attribute name="native"/>
			<referrer name="ScriptInit_OnScriptInit"/>
			<referrer name="YVers_Callback"/>
			<referrer name="DumpStack"/>
			<referrer name="PrintStackTrace"/>
			<referrer name="va_print"/>
			<referrer name="LoadHouses"/>
			<referrer name="LoadTurfs"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="LoadClans"/>
			<referrer name="MySQLLoad"/>
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="LoadGasCan"/>
			<referrer name="closeGate"/>
			<referrer name="OnQueryError"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:printf" syntax="printf(format[], ...)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="Debug_Print0"/>
			<referrer name="PrintAmxHeader"/>
			<referrer name="enter_public"/>
			<referrer name="ProfilerInit"/>
			<referrer name="DumpStack"/>
			<referrer name="PrintStackTrace"/>
			<referrer name="TrollDetect"/>
			<referrer name="LoadHouses"/>
			<referrer name="LoadTurfs"/>
			<referrer name="LoadFactions"/>
			<referrer name="LoadSafes"/>
			<referrer name="LoadJobs"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="LoadClans"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="LoadExamCheckpoints"/>
			<referrer name="assignSQLID"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="LoadGasCan"/>
			<referrer name="LoadDSVehicles"/>
			<referrer name="OnQueryError"/>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:questProgress" syntax="questProgress(playerid, type, id)">
			<attribute name="public"/>
			<stacksize value="9"/>
			<referrer name="giveQuest"/>
			<referrer name="resetQuest"/>
			<dependency name="pNeedProgress"/>
			<dependency name="pProgress"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
			<param name="type">
			</param>
			<param name="id">
			</param>
		</member>
		<member name="M:random" syntax="random(max)">
			<attribute name="native"/>
			<referrer name="Random"/>
			<referrer name="RandomFloat"/>
			<referrer name="Iter_Random_Internal"/>
			<referrer name="Iter_RandomFree_InternalC"/>
			<referrer name="Iter_Func@Random"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="FishingTimer"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="questProgress"/>
			<referrer name="giveQuest"/>
			<referrer name="resetQuest"/>
			<referrer name="checkMission"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="InsertCarDS"/>
			<referrer name="OnPlayerSpawn"/>
			<referrer name="OnPlayerDeath"/>
			<param name="max">
			</param>
		</member>
		<member name="M:raportPoints" syntax="raportPoints(playerid)">
			<attribute name="public"/>
			<stacksize value="2"/>
			<referrer name="pc_cmd_myraport"/>
			<dependency name="fCommands"/>
			<dependency name="factionInfo"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:rawMemcpy" syntax="rawMemcpy(dest, src, bytes)">
			<stacksize value="1"/>
			<referrer name="Callback_Get"/>
			<referrer name="Callback_Restore"/>
			<dependency name="memcpy"/>
			<param name="dest">
				Destination address.
			</param>
			<param name="src">
				Source data.
			</param>
			<param name="bytes">
				Number of bytes to copy.
			</param>
			<summary>  rawMemcpy  </summary>        <remarks>  Like memcpy, but takes addresses instead of arrays.  Also far less secure.  </remarks> 
		</member>
		<member name="M:rawMemset" syntax="rawMemset(iAddress, iValue, iSize)">
			<stacksize value="28"/>
			<referrer name="memset"/>
			<referrer name="rawMemset"/>
			<dependency name="AMX_HEADER_COD"/>
			<dependency name="AsmContext"/>
			<dependency name="AsmContext_buffer"/>
			<dependency name="AsmEmitAnd"/>
			<dependency name="AsmEmitConstAlt"/>
			<dependency name="AsmEmitFill"/>
			<dependency name="AsmEmitLoadPri"/>
			<dependency name="AsmEmitLoadSAlt"/>
			<dependency name="AsmEmitLoadSPri"/>
			<dependency name="AsmEmitProc"/>
			<dependency name="AsmEmitRetn"/>
			<dependency name="AsmEmitShlCPri"/>
			<dependency name="AsmEmitStorPri"/>
			<dependency name="AsmInitPtr"/>
			<dependency name="memset"/>
			<param name="iAddress">
				Array or address to set to a value.
			</param>
			<param name="iValue">
				What to set the cells to.
			</param>
			<param name="iSize">
				Number of cells to fill.
			</param>
			      <remarks>  Based on code by Slice:  <a href="http://forum.sa-mp.com/showthread.php?p=1606781#post1606781" />  Modified to use binary flags instead of a loop.  "memset" takes an array, the size of the array, and a value to fill it with  and sets the whole array to that value.  "rawmemset" is similar, but takes an AMX data segment address instead and  the size is in bytes, not cells.  However, the size must still be a multiple  of 4.  </remarks> 
		</member>
		<member name="M:ref" syntax="ref(...)">
			<stacksize value="2"/>
			<referrer name="AsmRaiseError"/>
			<referrer name="AsmInit"/>
			<referrer name="CodeScanAddMatcher"/>
			<referrer name="YVA2_CodeGenMainCleanup"/>
			<referrer name="GetRemoteFunction"/>
			<referrer name="I@E"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
		</member>
		<member name="M:refabs" syntax="refabs(...)">
			<stacksize value="5"/>
			<referrer name="GetAmxAddress"/>
			<dependency name="RelToAbs"/>
			<dependency name="numargs"/>
			<param name="...">
			</param>
		</member>
		<member name="M:removeFunction" syntax="removeFunction(playerid, text[])">
			<attribute name="public"/>
			<stacksize value="7"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_wt"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="DestroyObject"/>
			<dependency name="HelperAtribut"/>
			<dependency name="HelperBusy"/>
			<dependency name="I@"/>
			<dependency name="IsValidObject"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="Iter_Remove_InternalC"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="Iter_Single@ServerStaff"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="Iterator@ServerStaff"/>
			<dependency name="J@"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="StopFly"/>
			<dependency name="false"/>
			<dependency name="helpTimer"/>
			<dependency name="helpnTimer_yT@"/>
			<dependency name="pAdmin"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionAge"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pFactionPunish"/>
			<dependency name="pFactionRank"/>
			<dependency name="pFactionWarns"/>
			<dependency name="pFlymode"/>
			<dependency name="pHelper"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="playerVehicle"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="sendStaff"/>
			<dependency name="svfVehicleObjects"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="vehicleFaction"/>
			<dependency name="vehiclePlayerID"/>
			<dependency name="vehicleRank"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:removeMaps" syntax="removeMaps(playerid)">
			<stacksize value="8"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<dependency name="RemoveBuildingForPlayer"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:resetQuest" syntax="resetQuest()">
			<attribute name="public"/>
			<stacksize value="8"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_resetquests"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pDailyMission"/>
			<dependency name="pLogged"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="questProgress"/>
			<dependency name="random"/>
			<dependency name="true"/>
			<dependency name="update"/>
		</member>
		<member name="M:resetVars" syntax="resetVars(playerid)">
			<stacksize value="5"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="CHECKPOINT_NONE"/>
			<dependency name="DeletePVar"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerIp"/>
			<dependency name="GetPlayerName"/>
			<dependency name="InitFly"/>
			<dependency name="IsValidVehicle"/>
			<dependency name="Iter_DestroyVehicle"/>
			<dependency name="SetPlayerScore"/>
			<dependency name="false"/>
			<dependency name="format"/>
			<dependency name="pAFKSeconds"/>
			<dependency name="pAdmin"/>
			<dependency name="pAdminCover"/>
			<dependency name="pAnimLooping"/>
			<dependency name="pBank"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pCheckpoint"/>
			<dependency name="pCheckpointID"/>
			<dependency name="pCuffed"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pDrunkLevel"/>
			<dependency name="pEnableBoost"/>
			<dependency name="pExamenCheckpoint"/>
			<dependency name="pExamenVehicle"/>
			<dependency name="pFPS"/>
			<dependency name="pFactionDuty"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pFlymode"/>
			<dependency name="pGender"/>
			<dependency name="pHelper"/>
			<dependency name="pHours"/>
			<dependency name="pInLesson"/>
			<dependency name="pLastIp"/>
			<dependency name="pLastPosX"/>
			<dependency name="pLastPosY"/>
			<dependency name="pLastPosZ"/>
			<dependency name="pLesson"/>
			<dependency name="pLevel"/>
			<dependency name="pLicense"/>
			<dependency name="pLicenseOffer"/>
			<dependency name="pLiveOffer"/>
			<dependency name="pLogged"/>
			<dependency name="pLoginEnabled"/>
			<dependency name="pLoginTries"/>
			<dependency name="pMark"/>
			<dependency name="pMarkX"/>
			<dependency name="pMarkY"/>
			<dependency name="pMarkZ"/>
			<dependency name="pMoney"/>
			<dependency name="pMute"/>
			<dependency name="pName"/>
			<dependency name="pOnTurf"/>
			<dependency name="pQuestionText"/>
			<dependency name="pReportChat"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSafeID"/>
			<dependency name="pSeconds"/>
			<dependency name="pSelectedItem"/>
			<dependency name="pShowTurfs"/>
			<dependency name="pTalkingLive"/>
			<dependency name="pTaxiDuty"/>
			<dependency name="pTaxiFare"/>
			<dependency name="pTazer"/>
			<dependency name="pTutorial"/>
			<dependency name="pVehicleSlots"/>
			<dependency name="pWarn"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="pinVehicle"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="playerTextDraws"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:resetWeapons" syntax="resetWeapons(playerid)">
			<stacksize value="3"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_confiscate"/>
			<dependency name="ResetPlayerWeapons"/>
			<dependency name="WeaponAmmo"/>
			<dependency name="WeaponAmmo"/>
			<dependency name="Weapons"/>
			<dependency name="Weapons"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:respawnTimer" syntax="respawnTimer(playerid, x, y, z, virtual_world, interior)">
			<stacksize value="6"/>
			<referrer name="respawnTimer@_yT"/>
			<dependency name="SetPlayerInterior"/>
			<dependency name="SetPlayerPos"/>
			<dependency name="SetPlayerVirtualWorld"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="virtual_world">
			</param>
			<param name="interior">
			</param>
		</member>
		<member name="M:respawnTimer@_yT" syntax="respawnTimer@_yT(__r, playerid, x, y, z, virtual_world, interior)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="9"/>
			<dependency name="respawnTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="virtual_world">
			</param>
			<param name="interior">
			</param>
		</member>
		<member name="M:respawnTimer_yT@" syntax="respawnTimer_yT@(playerid, x, y, z, virtual_world, interior)">
			<stacksize value="13"/>
			<referrer name="pc_cmd_respawnhere"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="z">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="virtual_world">
			</param>
			<param name="interior">
			</param>
		</member>
		<member name="M:returnNeededPoints" syntax="returnNeededPoints(playerid, job)">
			<stacksize value="6"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="IsPlayerConnected"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerJobs"/>
			<dependency name="JOB_ARMSDEALER"/>
			<dependency name="JOB_CARPENTER"/>
			<dependency name="JOB_DRUGSDEALER"/>
			<dependency name="JOB_FISHER"/>
			<dependency name="JOB_TRUCKER"/>
			<dependency name="pArmsSkill"/>
			<dependency name="pCarpenterSkill"/>
			<dependency name="pDrugsSkill"/>
			<dependency name="pFishSkill"/>
			<dependency name="pTruckSkill"/>
			<dependency name="playerInfo"/>
			<param name="playerid">
			</param>
			<param name="job">
			</param>
		</member>
		<member name="M:returnstringarg" syntax="returnstringarg(idx)">
			<stacksize value="131"/>
			<dependency name="returnstringarg"/>
			<dependency name="strcat"/>
			<param name="idx">
				Index of the string in the parameters.
			</param>
			  <returns>  string  </returns>  <remarks>  Is passed the result of getarg, which will be the address of a string (in  theory) and uses that for DMA to get the string.  </remarks> 
		</member>
		<member name="M:saveSafe" syntax="saveSafe(id)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<dependency name="sDrugs"/>
			<dependency name="sID"/>
			<dependency name="sMaterials"/>
			<dependency name="sMoney"/>
			<dependency name="safeInfo"/>
			<dependency name="safeInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="id">
			</param>
		</member>
		<member name="M:save_guns" syntax="save_guns(playerid)">
			<stacksize value="10"/>
			<referrer name="dialog_DIALOG_SETGUN"/>
			<dependency name="pGuns"/>
			<dependency name="pSQLID"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:secinmin" syntax="secinmin(secunde)">
			<stacksize value="21"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="Timers"/>
			<referrer name="OnPlayerText"/>
			<dependency name="format"/>
			<dependency name="secinmin"/>
			<param name="secunde">
			</param>
		</member>
		<member name="M:sendAdmin" syntax="sendAdmin(color, text[], ...)">
			<stacksize value="15"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="MyHttpResponse"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="checkPanel"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="BanIPOffline"/>
			<referrer name="checkAccountJail"/>
			<referrer name="checkAccountJailo"/>
			<referrer name="ExpirationReport"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gFast"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendClanMessage" syntax="sendClanMessage(cid, color, message[], ...)">
			<stacksize value="15"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@TotalClanMembers"/>
			<dependency name="Iterator@ServerClans"/>
			<dependency name="Iterator@TotalClanMembers"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="false"/>
			<dependency name="gString"/>
			<dependency name="pClan"/>
			<dependency name="playerInfo"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="cid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendFactionMessage" syntax="sendFactionMessage(fid, color, message[], ...)">
			<stacksize value="15"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="sendPolice"/>
			<referrer name="pc_cmd_blockf"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="removeFunction"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Iterator@FactionMembers"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="Iterator@ServerFactions"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="false"/>
			<dependency name="gString"/>
			<dependency name="playerInfo"/>
			<dependency name="pspecFaction"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="fid">
			</param>
			<param name="color">
			</param>
			<param name="message">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendHelper" syntax="sendHelper(color, text[], ...)">
			<stacksize value="15"/>
			<referrer name="pc_cmd_helduty"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@ServerHelpers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gFast"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendNearbyMessage" syntax="sendNearbyMessage(playerid, color, distance, text[], ...)">
			<stacksize value="15"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="FishingTimer"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerText"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="IsPlayerInRangeOfPoint"/>
			<dependency name="Iterator@loggedPlayers"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gString"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="distance">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendPlayerError" syntax="sendPlayerError(playerid, text[], ...)">
			<stacksize value="16"/>
			<referrer name="wrongPass"/>
			<referrer name="dialog_DIALOG_REPORT"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="dialog_SPAWNCHANGE"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_sellhousestate"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_houseoption"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_renters"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_eat"/>
			<referrer name="pc_cmd_armour"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_turfs"/>
			<referrer name="@yH_OnPlayerEnterVehicle@007"/>
			<referrer name="@yH_OnPlayerStateChange@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="showMDC"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_blockf"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_tazer"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_questions"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_attack"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="pc_cmd_dvf"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="pc_cmd_myraport"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="pc_cmd_jobs"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_quitjob"/>
			<referrer name="pc_cmd_fish"/>
			<referrer name="pc_cmd_startwork"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_sellbizstate"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizoption"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_buy"/>
			<referrer name="pc_cmd_balance"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_myad"/>
			<referrer name="pc_cmd_deletemyad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="pc_cmd_helduty"/>
			<referrer name="pc_cmd_n"/>
			<referrer name="pc_cmd_ar"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="pc_cmd_skipn"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_leaveclan"/>
			<referrer name="pc_cmd_clan"/>
			<referrer name="checkAccountInBanDatabase"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="BanIPOffline"/>
			<referrer name="checkAccountInDatabase"/>
			<referrer name="checkAccountJail"/>
			<referrer name="checkAccountInDatabaseJailo"/>
			<referrer name="checkAccountJailo"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_buyinsurance"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_park"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_despawncars"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_closestcar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_fly"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_mark"/>
			<referrer name="pc_cmd_gotomark"/>
			<referrer name="pc_cmd_healme"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_ah"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_speed"/>
			<referrer name="pc_cmd_clearchat"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_aaa2"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_engine"/>
			<referrer name="pc_cmd_lights"/>
			<referrer name="pc_cmd_report"/>
			<referrer name="pc_cmd_spawnchange"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_gps"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_carhand"/>
			<referrer name="pc_cmd_lifejump"/>
			<referrer name="pc_cmd_robman"/>
			<referrer name="pc_cmd_exhaust"/>
			<referrer name="pc_cmd_rcarjack1"/>
			<referrer name="pc_cmd_lcarjack1"/>
			<referrer name="pc_cmd_rcarjack2"/>
			<referrer name="pc_cmd_lcarjack2"/>
			<referrer name="pc_cmd_hoodfrisked"/>
			<referrer name="pc_cmd_lightcig"/>
			<referrer name="pc_cmd_tapcig"/>
			<referrer name="pc_cmd_bat"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_clearanim"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_box"/>
			<referrer name="pc_cmd_lowthrow"/>
			<referrer name="pc_cmd_highthrow"/>
			<referrer name="pc_cmd_leftslap"/>
			<referrer name="pc_cmd_handsup"/>
			<referrer name="pc_cmd_fall"/>
			<referrer name="pc_cmd_fallback"/>
			<referrer name="pc_cmd_laugh"/>
			<referrer name="pc_cmd_lookout"/>
			<referrer name="pc_cmd_aim"/>
			<referrer name="pc_cmd_crossarms"/>
			<referrer name="pc_cmd_lay"/>
			<referrer name="pc_cmd_hide"/>
			<referrer name="pc_cmd_vomit"/>
			<referrer name="pc_cmd_wave"/>
			<referrer name="pc_cmd_shouting"/>
			<referrer name="pc_cmd_chant"/>
			<referrer name="pc_cmd_frisked"/>
			<referrer name="pc_cmd_exhausted"/>
			<referrer name="pc_cmd_injured"/>
			<referrer name="pc_cmd_slapass"/>
			<referrer name="pc_cmd_deal"/>
			<referrer name="pc_cmd_dealstance"/>
			<referrer name="pc_cmd_crack"/>
			<referrer name="pc_cmd_wank"/>
			<referrer name="pc_cmd_salute"/>
			<referrer name="pc_cmd_gro"/>
			<referrer name="pc_cmd_sup"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_push"/>
			<referrer name="pc_cmd_akick"/>
			<referrer name="pc_cmd_lowbodypush"/>
			<referrer name="pc_cmd_headbutt"/>
			<referrer name="pc_cmd_pee"/>
			<referrer name="pc_cmd_koface"/>
			<referrer name="pc_cmd_kostomach"/>
			<referrer name="pc_cmd_kiss"/>
			<referrer name="pc_cmd_rollfall"/>
			<referrer name="pc_cmd_lay2"/>
			<referrer name="pc_cmd_hitch"/>
			<referrer name="pc_cmd_beach"/>
			<referrer name="pc_cmd_medic"/>
			<referrer name="pc_cmd_scratch"/>
			<referrer name="pc_cmd_sit"/>
			<referrer name="pc_cmd_drunk"/>
			<referrer name="pc_cmd_bomb"/>
			<referrer name="pc_cmd_getarrested"/>
			<referrer name="pc_cmd_chat"/>
			<referrer name="pc_cmd_fucku"/>
			<referrer name="pc_cmd_taichi"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_wthelp"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_freqmembers"/>
			<referrer name="pc_cmd_finalquest"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="pc_cmd_help"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="pc_cmd_buycar"/>
			<referrer name="pc_cmd_emails"/>
			<referrer name="pc_cmd_insertemail"/>
			<referrer name="OnPlayerEnterVehicle"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="EOS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gString"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendPlayerSyntax" syntax="sendPlayerSyntax(playerid, text[], ...)">
			<stacksize value="16"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="pc_cmd_n"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_adminchat"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_gotojob"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_sup"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_dance"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="pc_cmd_insertemail"/>
			<dependency name="EOS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gString"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendPolice" syntax="sendPolice(type, playerid, accusedid, wantedlevel, reason[])">
			<attribute name="public"/>
			<stacksize value="4107"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="TimerWanted"/>
			<referrer name="OnPlayerDeath"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="sendFactionMessage"/>
			<dependency name="true"/>
			<dependency name="wantedName"/>
			<param name="type">
			</param>
			<param name="playerid">
			</param>
			<param name="accusedid">
			</param>
			<param name="wantedlevel">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sendSplitMessage" syntax="sendSplitMessage(playerid, color, text[])">
			<stacksize value="367"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="sendToAdmin"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="advertismentTimer"/>
			<referrer name="sendClanMessage"/>
			<referrer name="InsertCarDS"/>
			<dependency name="SendClientMessage"/>
			<dependency name="strlen"/>
			<dependency name="strmid"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sendStaff" syntax="sendStaff(color, text[], ...)">
			<stacksize value="15"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="removeFunction"/>
			<referrer name="Reclama"/>
			<referrer name="pc_cmd_helperchat"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<dependency name="EOS"/>
			<dependency name="Iterator@ServerStaff"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gFast"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:sendToAdmin" syntax="sendToAdmin(playerid, color, text[], &amp;level, ...)">
			<stacksize value="15"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_reply"/>
			<dependency name="EOS"/>
			<dependency name="Iter_Contains_InternalC"/>
			<dependency name="Iterator@ServerAdmins"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gString"/>
			<dependency name="pAdmin"/>
			<dependency name="playerInfo"/>
			<dependency name="sendSplitMessage"/>
			<dependency name="true"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="color">
			</param>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="level">
				<paraminfo> &amp; </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:serverTextDraws" syntax="serverTextDraws()">
			<stacksize value="5"/>
			<referrer name="MySQLLoad"/>
			<dependency name="ClockTD"/>
			<dependency name="TextDrawAlignment"/>
			<dependency name="TextDrawBackgroundColor"/>
			<dependency name="TextDrawBoxColor"/>
			<dependency name="TextDrawColor"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="TextDrawFont"/>
			<dependency name="TextDrawLetterSize"/>
			<dependency name="TextDrawSetOutline"/>
			<dependency name="TextDrawSetProportional"/>
			<dependency name="TextDrawSetSelectable"/>
			<dependency name="TextDrawSetShadow"/>
			<dependency name="TextDrawTextSize"/>
			<dependency name="TextDrawUseBox"/>
			<dependency name="serverDealerTD"/>
			<dependency name="true"/>
		</member>
		<member name="M:serverWeapon" syntax="serverWeapon(playerid, weaponid, ammo)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="pc_cmd_duty"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<dependency name="GivePlayerWeapon"/>
			<dependency name="WeaponAmmo"/>
			<dependency name="WeaponAmmo"/>
			<dependency name="Weapons"/>
			<dependency name="Weapons"/>
			<dependency name="Working"/>
			<dependency name="getWeaponSlot"/>
			<dependency name="pJob"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="weaponid">
			</param>
			<param name="ammo">
			</param>
		</member>
		<member name="M:setSkin" syntax="setSkin(playerid, skin)">
			<stacksize value="4"/>
			<referrer name="pc_cmd_set"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="pSkin"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
			<param name="skin">
			</param>
		</member>
		<member name="M:setarg" syntax="setarg(arg, index, value)">
			<attribute name="native"/>
			<referrer name="Iter_Clear_InternalC"/>
			<param name="arg">
			</param>
			<param name="index">
			</param>
			<param name="value">
			</param>
		</member>
		<member name="M:setproperty" syntax="setproperty(id, name[], value, string[])">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="X@"/>
			<referrer name="Y@"/>
			<referrer name="Z@"/>
			<referrer name="S@"/>
			<referrer name="R@"/>
			<referrer name="Malloc_OnScriptInit"/>
			<referrer name="ScriptInit_OnScriptExit"/>
			<referrer name="Master_Reassert"/>
			<referrer name="_Master_Get"/>
			<referrer name="@a"/>
			<param name="id">
			</param>
			<param name="name">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="value">
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:showFactionMembers" syntax="showFactionMembers(playerid)">
			<attribute name="public"/>
			<stacksize value="4175"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<dependency name="Dialog_Open"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerID"/>
			<dependency name="Iter_Single@FactionMembers"/>
			<dependency name="Selected"/>
			<dependency name="cache_get_value_name"/>
			<dependency name="cache_get_value_name_int"/>
			<dependency name="cache_num_rows"/>
			<dependency name="format"/>
			<dependency name="gString"/>
			<dependency name="pFaction"/>
			<dependency name="playerInfo"/>
			<dependency name="strcat"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:showLicenses" syntax="showLicenses(playerid, userID)">
			<stacksize value="7"/>
			<referrer name="pc_cmd_licenses"/>
			<referrer name="pc_cmd_showlicenses"/>
			<dependency name="SendClientMessage"/>
			<dependency name="pBoatLicense"/>
			<dependency name="pBoatLicenseSuspend"/>
			<dependency name="pDrivingLicense"/>
			<dependency name="pDrivingLicenseSuspend"/>
			<dependency name="pFlyLicense"/>
			<dependency name="pFlyLicenseSuspend"/>
			<dependency name="pName"/>
			<dependency name="pWeaponLicense"/>
			<dependency name="pWeaponLicenseSuspend"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="userID">
			</param>
		</member>
		<member name="M:showMDC" syntax="showMDC(playerid, targetid)">
			<attribute name="public"/>
			<stacksize value="4104"/>
			<referrer name="pc_cmd_mdc"/>
			<dependency name="SendClientMessage"/>
			<dependency name="chasedBy"/>
			<dependency name="pMDCon"/>
			<dependency name="pName"/>
			<dependency name="pWantedLevel"/>
			<dependency name="pWantedTime"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="wantedName"/>
			<dependency name="wantedName"/>
			<param name="playerid">
			</param>
			<param name="targetid">
			</param>
		</member>
		<member name="M:showStats" syntax="showStats(playerid, userID)">
			<stacksize value="17"/>
			<referrer name="pc_cmd_stats"/>
			<dependency name="GetBankMoney"/>
			<dependency name="GetCashStr"/>
			<dependency name="GetPlayerInterior"/>
			<dependency name="GetPlayerVirtualWorld"/>
			<dependency name="Iter_Single@ServerAdmins"/>
			<dependency name="Iter_Single@ServerHelpers"/>
			<dependency name="SendClientMessage"/>
			<dependency name="factionName"/>
			<dependency name="formatNumber"/>
			<dependency name="pAFKSeconds"/>
			<dependency name="pAdmin"/>
			<dependency name="pDrugs"/>
			<dependency name="pFaction"/>
			<dependency name="pFactionRank"/>
			<dependency name="pHours"/>
			<dependency name="pLevel"/>
			<dependency name="pMats"/>
			<dependency name="pName"/>
			<dependency name="pPhone"/>
			<dependency name="pPremium"/>
			<dependency name="pPremiumPoints"/>
			<dependency name="pRespectPoints"/>
			<dependency name="pSQLID"/>
			<dependency name="pSeconds"/>
			<dependency name="pVIP"/>
			<dependency name="pWarn"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_SendClientMessage"/>
			<param name="playerid">
			</param>
			<param name="userID">
			</param>
		</member>
		<member name="M:slapPlayer" syntax="slapPlayer(playerid)">
			<stacksize value="9"/>
			<referrer name="@yH_OnPlayerEnterVehicle@007"/>
			<dependency name="operator+(Float:,_:)"/>
			<dependency name="GetPlayerPos"/>
			<dependency name="SetPlayerPos"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:sscanf" syntax="sscanf(data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="DateToTimestamp"/>
			<referrer name="dialog_DIALOG_REPORT_CHEATER"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="LoadClans"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="LoadPersonalVehicle"/>
			<referrer name="pc_cmd_carcolor"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_vehicle" syntax="sscanf_vehicle(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:sscanf_weapon" syntax="sscanf_weapon(string[])">
			<attribute name="public"/>
			<stacksize value="6"/>
			<dependency name="strcmp"/>
			<dependency name="strval"/>
			<dependency name="true"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strcat" syntax="strcat(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="DisasmGetInsnName"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="CodeScanGetMatchName"/>
			<referrer name="returnstringarg"/>
			<referrer name="va_getstring"/>
			<referrer name="Hooks_GetPreHooks"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="_@_y_inline_@_"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="pc_cmd_factions"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="showFactionMembers"/>
			<referrer name="pc_cmd_setguns"/>
			<referrer name="pc_cmd_svf"/>
			<referrer name="pc_cmd_shop"/>
			<referrer name="pc_cmd_hud"/>
			<referrer name="ShowEmails"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strcmp" syntax="strcmp(string1[], string2[], ignorecase, length)">
			<attribute name="native"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="boolstr"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="_@_y_inline_@_"/>
			<referrer name="Callback_Get"/>
			<referrer name="Remote_DoSearch"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="strmatch"/>
			<referrer name="GetPlayerID"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<param name="string1">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="string2">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="length">
			</param>
		</member>
		<member name="M:strcpy" syntax="strcpy(dest[], src[], len)">
			<stacksize value="1"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
				Destination string.
			</param>
			<param name="src">
				<paraminfo> [] </paraminfo>
				Source string.
			</param>
			<param name="len">
				(Implicit) maximum length of the destination.
			</param>
			     
		</member>
		<member name="M:strdel" syntax="strdel(string[], start, end)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="Hooks_IsolateName"/>
			<referrer name="formatNumbers2"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
		</member>
		<member name="M:strfind" syntax="strfind(string[], sub[], ignorecase, pos)">
			<attribute name="native"/>
			<referrer name="IsPlayerInZone"/>
			<referrer name="YVers_Callback"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="AMX_GetEntry"/>
			<referrer name="AMX_GetName"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="Hooks_IsolateName"/>
			<referrer name="_@_y_inline_@_"/>
			<referrer name="Callback_Get"/>
			<referrer name="I@E"/>
			<referrer name="isValidEmail"/>
			<referrer name="CheckerBigInt"/>
			<referrer name="Translate32Bit"/>
			<referrer name="formatNumbers2"/>
			<referrer name="faceReclama"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="sub">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="ignorecase">
				<paraminfo>bool </paraminfo>
			</param>
			<param name="pos">
			</param>
		</member>
		<member name="M:string_fast" syntax="string_fast(varname[], ...)">
			<stacksize value="15"/>
			<referrer name="Calculate"/>
			<referrer name="dialog_EMAIL"/>
			<referrer name="LoadHouses"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="LoadFactions"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_wanteds"/>
			<referrer name="pc_cmd_members"/>
			<referrer name="showFactionMembers"/>
			<referrer name="dialog_DIALOG_MEMBERS"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="dialog_DIALOG_SVF"/>
			<referrer name="LoadSafes"/>
			<referrer name="pc_cmd_fwithdraw"/>
			<referrer name="pc_cmd_order"/>
			<referrer name="dialog_DIALOG_FWITHDRAW"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="LoadJobs"/>
			<referrer name="FishingTimer"/>
			<referrer name="dialog_DIALOG_JOBS"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_skills"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="advertismentTimer"/>
			<referrer name="LoadBusinesses"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_bizbalance"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_adminbusiness"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_transfer"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="dialog_DIALOG_CLAN"/>
			<referrer name="SetClanTag"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="BanIPPlayer"/>
			<referrer name="checkMission"/>
			<referrer name="dialog_MY_GARAGE_DESPAWNED"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_vehicles"/>
			<referrer name="updateGasCan"/>
			<referrer name="TimerM"/>
			<referrer name="Timers"/>
			<referrer name="TimerTutorial"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="cancelDriveTest"/>
			<referrer name="dialog_DIALOG_EMAILS"/>
			<referrer name="pc_cmd_emails"/>
			<referrer name="CB_OnGameModeInit"/>
			<referrer name="SSCANF_OnPlayerConnect"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerText"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="EOS"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gFast"/>
			<dependency name="string_fast"/>
			<dependency name="va_format"/>
			<param name="varname">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:strins" syntax="strins(string[], substr[], pos, maxlength)">
			<tagname value="bool"/>
			<attribute name="native"/>
			<referrer name="Hooks_MakeLongName"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="Hooks_GetDefaultReturn"/>
			<referrer name="formatNumber"/>
			<referrer name="formatNumbers"/>
			<referrer name="formatNumbers2"/>
			<referrer name="FormatIntNumber"/>
			<referrer name="formatNumberss"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="substr">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="pos">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strlen" syntax="strlen(string[])">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="DisasmWriteCode"/>
			<referrer name="StripNL"/>
			<referrer name="StripL"/>
			<referrer name="Strip"/>
			<referrer name="endofline"/>
			<referrer name="chrfind"/>
			<referrer name="unpack"/>
			<referrer name="va_strlen"/>
			<referrer name="Hooks_MakeShortName"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="_Hooks_AddReplacement"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="Malloc_SetVAS"/>
			<referrer name="_Timer_S"/>
			<referrer name="Callback_Get"/>
			<referrer name="StoredF_WritePublicCode"/>
			<referrer name="Remote_RawStrpack"/>
			<referrer name="Remote_WriteSpecAndFunc"/>
			<referrer name="YHash"/>
			<referrer name="OnPlayerUpdate"/>
			<referrer name="Dialog_Open"/>
			<referrer name="OnDialogResponse"/>
			<referrer name="sendSplitMessage"/>
			<referrer name="formatNumber"/>
			<referrer name="strmatch"/>
			<referrer name="isValidEmail"/>
			<referrer name="IsNumeric"/>
			<referrer name="Translate32Bit"/>
			<referrer name="formatNumbers"/>
			<referrer name="formatNumbers2"/>
			<referrer name="FormatIntNumber"/>
			<referrer name="formatNumberss"/>
			<referrer name="dialog_REGISTER"/>
			<referrer name="dialog_LOGIN"/>
			<referrer name="dialog_DIALOG_REPORT_NORMAL"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_endlive"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_unban"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_unbanip"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_insertemail"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmatch" syntax="strmatch(stringone[], stringtwo[])">
			<stacksize value="6"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="OnPlayerText"/>
			<dependency name="false"/>
			<dependency name="strcmp"/>
			<dependency name="strlen"/>
			<dependency name="true"/>
			<param name="stringone">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="stringtwo">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:strmid" syntax="strmid(dest[], source[], start, end, maxlength)">
			<attribute name="native"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="sendSplitMessage"/>
			<referrer name="CheckerBigInt"/>
			<referrer name="Translate32Bit"/>
			<referrer name="InsertCarDS"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="start">
			</param>
			<param name="end">
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strpack" syntax="strpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="Hooks_GetPointerRewrite"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="_@_y_inline_@_"/>
			<referrer name="Remote_RawStrpack"/>
			<referrer name="Dialog_Open"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strunpack" syntax="strunpack(dest[], source[], maxlength)">
			<attribute name="native"/>
			<referrer name="_@_y_funcinc_@_"/>
			<referrer name="unpack"/>
			<referrer name="S@"/>
			<referrer name="F@"/>
			<referrer name="Hooks_GetPreloadLibraries"/>
			<referrer name="Hooks_GetAllHooks"/>
			<referrer name="Hooks_Collate"/>
			<referrer name="Malloc_NewS"/>
			<referrer name="Malloc_GetS"/>
			<referrer name="Malloc_SetS"/>
			<referrer name="GetMapZoneName"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="source">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="maxlength">
			</param>
		</member>
		<member name="M:strval" syntax="strval(string[])">
			<attribute name="native"/>
			<referrer name="GangZoneCreateEx"/>
			<referrer name="IPToInt"/>
			<referrer name="sscanf_weapon"/>
			<referrer name="sscanf_vehicle"/>
			<referrer name="Translate32Bit"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_flock"/>
			<referrer name="pc_cmd_fapps"/>
			<referrer name="pc_cmd_fspec"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_despawncar"/>
			<referrer name="pc_cmd_gotocar"/>
			<referrer name="pc_cmd_getcar"/>
			<referrer name="pc_cmd_slapcar"/>
			<referrer name="pc_cmd_fixveh"/>
			<referrer name="pc_cmd_addnos"/>
			<referrer name="pc_cmd_flipveh"/>
			<referrer name="pc_cmd_gotojob"/>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:tazerTimer" syntax="tazerTimer(playerid)">
			<stacksize value="4"/>
			<referrer name="tazerTimer@_yT"/>
			<dependency name="TogglePlayerControllable"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:tazerTimer@_yT" syntax="tazerTimer@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="tazerTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:tazerTimer_yT@" syntax="tazerTimer_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:testDriveTimer" syntax="testDriveTimer(playerid)">
			<stacksize value="5"/>
			<referrer name="testDriveTimer@_yT"/>
			<dependency name="cancelDriveTest"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:testDriveTimer@_yT" syntax="testDriveTimer@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="testDriveTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:testDriveTimer_yT@" syntax="testDriveTimer_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:tolower" syntax="tolower(c)">
			<attribute name="native"/>
			<referrer name="StrToLower"/>
			<param name="c">
			</param>
		</member>
		<member name="M:totalAds" syntax="totalAds()">
			<attribute name="public"/>
			<stacksize value="3"/>
			<referrer name="advertismentTimer_yT@"/>
			<referrer name="pc_cmd_ad"/>
			<dependency name="AdTimer"/>
			<dependency name="Iterator@loggedPlayers"/>
		</member>
		<member name="M:toupper" syntax="toupper(c)">
			<attribute name="native"/>
			<referrer name="StrToUpper"/>
			<referrer name="YHash"/>
			<param name="c">
			</param>
		</member>
		<member name="M:u@" syntax="u@(u[])">
			<stacksize value="1"/>
			<param name="u">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:unformat" syntax="unformat(data[], format[], ...)">
			<attribute name="native"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_adminhouse"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_f"/>
			<referrer name="pc_cmd_r"/>
			<referrer name="pc_cmd_d"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_so"/>
			<referrer name="pc_cmd_megaphone"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_cuff"/>
			<referrer name="pc_cmd_uncuff"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_mdc"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_news"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_question"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="pc_cmd_tie"/>
			<referrer name="pc_cmd_untie"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="pc_cmd_n"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="pc_cmd_cinvite"/>
			<referrer name="pc_cmd_clanchat"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="pc_cmd_fill"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_banoffline"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_kick"/>
			<referrer name="pc_cmd_spawncar"/>
			<referrer name="pc_cmd_entercar"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_banip"/>
			<referrer name="pc_cmd_banipoffline"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_unjailo"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_jailo"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="pc_cmd_count"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_lean"/>
			<referrer name="pc_cmd_dancing"/>
			<referrer name="pc_cmd_sup"/>
			<referrer name="pc_cmd_rap"/>
			<referrer name="pc_cmd_knife"/>
			<referrer name="pc_cmd_basket"/>
			<referrer name="pc_cmd_dance"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="pc_cmd_insertemail"/>
			<param name="data">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {Float,_} </paraminfo>
			</param>
		</member>
		<member name="M:unpack" syntax="unpack(str[])">
			<stacksize value="135"/>
			<referrer name="Hooks_IsolateName"/>
			<dependency name="strlen"/>
			<dependency name="strunpack"/>
			<dependency name="unpack"/>
			<param name="str">
				<paraminfo> [] </paraminfo>
				String to unpack
			</param>
			  <returns>  unpacked string  </returns>  <remarks>  Mainly used for debugging.  </remarks> 
		</member>
		<member name="M:update" syntax="update(text[], ...)">
			<stacksize value="15"/>
			<referrer name="warnPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_SPAWNCHANGE"/>
			<referrer name="dialog_TOG"/>
			<referrer name="dialog_DIALOG_SHOP"/>
			<referrer name="buyHouseOffline"/>
			<referrer name="dialog_SELL_HOUSE_STATE"/>
			<referrer name="dialog_HOUSE_OPTION_TITLE"/>
			<referrer name="dialog_HOUSE_OPTION_DESCRIPTION"/>
			<referrer name="dialog_HOUSE_OPTION_TITLEADMIN"/>
			<referrer name="dialog_HOUSE_OPTION_DESCADMIN"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_unrentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="factionLog"/>
			<referrer name="save_guns"/>
			<referrer name="whenPlayerLeaveFaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_su"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="dialog_DIALOG_MEMBERS2"/>
			<referrer name="dialog_DIALOG_MEMBERSRANK"/>
			<referrer name="dialog_DIALOG_MEMBERSUINV2"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="addRaportPoint"/>
			<referrer name="saveSafe"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="dialog_DIALOG_FWITHDRAW2"/>
			<referrer name="dialog_DIALOG_FDEPOSIT2"/>
			<referrer name="pc_cmd_getjob"/>
			<referrer name="pc_cmd_usedrugs"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="dialog_BIZ_OPTION_TITLE"/>
			<referrer name="dialog_BIZ_OPTION_DESCRIPTION"/>
			<referrer name="dialog_SELL_BIZ_STATE"/>
			<referrer name="dialog_BIZ_OPTION_TITLEADMIN"/>
			<referrer name="dialog_BIZ_OPTION_DESCADMIN"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="dialog_TRANSFERBIZ"/>
			<referrer name="pc_cmd_buybusiness"/>
			<referrer name="pc_cmd_bizwithdraw"/>
			<referrer name="pc_cmd_bizdeposit"/>
			<referrer name="pc_cmd_bizlock"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_deposit"/>
			<referrer name="pc_cmd_withdraw"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS1"/>
			<referrer name="dialog_DIALOG_CLANSETTINGS2"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPanel"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="checkBanPlayer"/>
			<referrer name="CheckIP"/>
			<referrer name="checkAccountJail"/>
			<referrer name="checkAccountJailo"/>
			<referrer name="questProgress"/>
			<referrer name="giveQuest"/>
			<referrer name="resetQuest"/>
			<referrer name="checkMission"/>
			<referrer name="removeFunction"/>
			<referrer name="Reclama"/>
			<referrer name="dialog_MY_GARAGE_SPAWNED"/>
			<referrer name="dialog_BUY_INSURANCE"/>
			<referrer name="@yH_OnPlayerDisconnect@012"/>
			<referrer name="pc_cmd_lock"/>
			<referrer name="pc_cmd_swapcolors"/>
			<referrer name="pc_cmd_carplate"/>
			<referrer name="pc_cmd_carcolor"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="TimerTutorial"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="InsertCarDS"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="InsertEmail"/>
			<referrer name="dialog_DIALOG_EMAILS2"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnVehiclePaintjob"/>
			<referrer name="OnVehicleRespray"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<dependency name="EOS"/>
			<dependency name="SQL"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gFast"/>
			<dependency name="mysql_tquery"/>
			<dependency name="va_format"/>
			<param name="text">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:updateGasCan" syntax="updateGasCan(gid)">
			<attribute name="public"/>
			<stacksize value="4113"/>
			<referrer name="LoadGasCan"/>
			<referrer name="pc_cmd_addbizgas"/>
			<dependency name="CreateDynamic3DTextLabel"/>
			<dependency name="CreateDynamicPickup"/>
			<dependency name="GASCAN"/>
			<dependency name="PickInfo"/>
			<dependency name="PickInfo"/>
			<dependency name="gBizID"/>
			<dependency name="gFull"/>
			<dependency name="gLabel"/>
			<dependency name="gPickup"/>
			<dependency name="gX"/>
			<dependency name="gY"/>
			<dependency name="gZ"/>
			<dependency name="gasInfo"/>
			<dependency name="gasInfo"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<param name="gid">
			</param>
		</member>
		<member name="M:updateLevelBar" syntax="updateLevelBar(playerid)">
			<stacksize value="10"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkMission"/>
			<referrer name="PayDay"/>
			<referrer name="pc_cmd_set"/>
			<referrer name="pc_cmd_buylevel"/>
			<dependency name="operator+(Float:,Float:)"/>
			<dependency name="operator*(Float:,Float:)"/>
			<dependency name="operator&gt;(Float:,_:)"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="PlayerTextDrawTextSize"/>
			<dependency name="float"/>
			<dependency name="levelBar"/>
			<dependency name="pLevel"/>
			<dependency name="pRespectPoints"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:updatePlayer" syntax="updatePlayer(playerid)">
			<attribute name="public"/>
			<stacksize value="4"/>
			<referrer name="GivePlayerCash"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_set"/>
			<dependency name="GivePlayerMoney"/>
			<dependency name="MoneyMoney"/>
			<dependency name="ResetPlayerMoney"/>
			<dependency name="StoreMoney"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:updateTaxiTextdraw" syntax="updateTaxiTextdraw(playerid)">
			<attribute name="public"/>
			<stacksize value="12298"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="fareUpdateTimer"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="PlayerTextDrawShow"/>
			<dependency name="fareTD"/>
			<dependency name="formatNumber"/>
			<dependency name="formatNumber"/>
			<dependency name="pTaxiDriver"/>
			<dependency name="pTaxiDuty"/>
			<dependency name="pTaxiFare"/>
			<dependency name="pTaxiMoney"/>
			<dependency name="playerInfo"/>
			<dependency name="string_fast"/>
			<dependency name="string_fast"/>
			<dependency name="true"/>
			<dependency name="va_PlayerTextDrawSetString"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:usedrugsTimer" syntax="usedrugsTimer(playerid)">
			<stacksize value="5"/>
			<referrer name="usedrugsTimer@_yT"/>
			<dependency name="Float:operator=(_:)"/>
			<dependency name="ClearAnimations"/>
			<dependency name="SendClientMessage"/>
			<dependency name="SetPlayerHealthEx"/>
			<dependency name="SetPlayerWeather"/>
			<dependency name="UsingDrugs"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:usedrugsTimer@_yT" syntax="usedrugsTimer@_yT(__r, playerid)">
			<tagname value="@Yj"/>
			<attribute name="public"/>
			<stacksize value="4"/>
			<dependency name="usedrugsTimer"/>
			<param name="__r">
			</param>
			<param name="playerid">
			</param>
		</member>
		<member name="M:usedrugsTimer_yT@" syntax="usedrugsTimer_yT@(playerid)">
			<stacksize value="8"/>
			<referrer name="pc_cmd_usedrugs"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="O@"/>
			<dependency name="_Timer_C"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:va_CreatePlayerTextDraw" syntax="va_CreatePlayerTextDraw(playerid, x, y, fmat[], ...)">
			<tagname value="PlayerText"/>
			<stacksize value="146"/>
			<dependency name="CreatePlayerTextDraw"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForAll" syntax="va_GameTextForAll(fmat[], time, style, ...)">
			<stacksize value="143"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_count"/>
			<dependency name="GameTextForAll"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_GameTextForPlayer" syntax="va_GameTextForPlayer(playerid, fmat[], time, style, ...)">
			<stacksize value="144"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_ad"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<dependency name="GameTextForPlayer"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="time">
			</param>
			<param name="style">
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_PlayerTextDrawSetString" syntax="va_PlayerTextDrawSetString(playerid, text, string[], ...)">
			<stacksize value="15"/>
			<referrer name="updateLevelBar"/>
			<referrer name="updateTaxiTextdraw"/>
			<referrer name="TimerWar"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="TimerSpeedo"/>
			<referrer name="TimerJail"/>
			<referrer name="TimerWanted"/>
			<referrer name="Timers"/>
			<referrer name="pc_cmd_acover"/>
			<referrer name="pc_cmd_exam"/>
			<referrer name="ShowDealerShipTD"/>
			<referrer name="@yH_OnPlayerClickTextDraw@013"/>
			<referrer name="OnPlayerEnterCheckpoint"/>
			<dependency name="EOS"/>
			<dependency name="PlayerTextDrawSetString"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="gString"/>
			<dependency name="va_format"/>
			<param name="playerid">
			</param>
			<param name="text">
				<paraminfo>PlayerText </paraminfo>
			</param>
			<param name="string">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessage" syntax="va_SendClientMessage(playerid, colour, fmat[], ...)">
			<stacksize value="145"/>
			<referrer name="sendSplitMessage"/>
			<referrer name="warnPlayer"/>
			<referrer name="mutePlayer"/>
			<referrer name="showStats"/>
			<referrer name="showLicenses"/>
			<referrer name="dialog_GENDER"/>
			<referrer name="dialog_GPS1"/>
			<referrer name="pc_cmd_buyhouse"/>
			<referrer name="pc_cmd_housebalance"/>
			<referrer name="pc_cmd_housewithdraw"/>
			<referrer name="pc_cmd_housedeposit"/>
			<referrer name="pc_cmd_hlock"/>
			<referrer name="pc_cmd_sellhouse"/>
			<referrer name="pc_cmd_rentabil"/>
			<referrer name="pc_cmd_renters"/>
			<referrer name="pc_cmd_rentroom"/>
			<referrer name="pc_cmd_setrentprice"/>
			<referrer name="pc_cmd_upgradehouse"/>
			<referrer name="pc_cmd_createhouse"/>
			<referrer name="@yH_OnPlayerDeath@007"/>
			<referrer name="@yH_OnPlayerDisconnect@007"/>
			<referrer name="dialog_DIALOG_WANTEDS"/>
			<referrer name="showMDC"/>
			<referrer name="pc_cmd_gotofaction"/>
			<referrer name="pc_cmd_makeleader"/>
			<referrer name="pc_cmd_auninvite"/>
			<referrer name="pc_cmd_heal"/>
			<referrer name="pc_cmd_service"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="pc_cmd_frisk"/>
			<referrer name="pc_cmd_confiscate"/>
			<referrer name="pc_cmd_ticket"/>
			<referrer name="pc_cmd_clear"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_live"/>
			<referrer name="pc_cmd_startlesson"/>
			<referrer name="pc_cmd_stoplesson"/>
			<referrer name="pc_cmd_givelicense"/>
			<referrer name="dialog_DIALOG_SETGUN"/>
			<referrer name="pc_cmd_wars"/>
			<referrer name="TimerWar"/>
			<referrer name="pc_cmd_contract"/>
			<referrer name="pc_cmd_gethit"/>
			<referrer name="pc_cmd_contracts"/>
			<referrer name="pc_cmd_setraport"/>
			<referrer name="pc_cmd_resetraport"/>
			<referrer name="pc_cmd_myraport"/>
			<referrer name="pc_cmd_createsafe"/>
			<referrer name="dialog_BUYBIZ"/>
			<referrer name="pc_cmd_sellbiz"/>
			<referrer name="pc_cmd_balance"/>
			<referrer name="pc_cmd_myad"/>
			<referrer name="pc_cmd_createbusiness"/>
			<referrer name="CautaHelperNou"/>
			<referrer name="CautaHelper"/>
			<referrer name="pc_cmd_ar"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="pc_cmd_hl"/>
			<referrer name="pc_cmd_deletead"/>
			<referrer name="checkPlayerBan"/>
			<referrer name="onPlayerLogin"/>
			<referrer name="checkPlayerBanIP"/>
			<referrer name="pc_cmd_addbizgas"/>
			<referrer name="gasTimer"/>
			<referrer name="TimerJail"/>
			<referrer name="pc_cmd_addexamcp"/>
			<referrer name="pc_cmd_unwarn"/>
			<referrer name="pc_cmd_unmute"/>
			<referrer name="pc_cmd_mutedplayers"/>
			<referrer name="pc_cmd_setadmin"/>
			<referrer name="pc_cmd_sethelper"/>
			<referrer name="pc_cmd_givemoney"/>
			<referrer name="pc_cmd_adminsuspendlicense"/>
			<referrer name="pc_cmd_ip"/>
			<referrer name="pc_cmd_admingivelicense"/>
			<referrer name="pc_cmd_admintakelicense"/>
			<referrer name="pc_cmd_goto"/>
			<referrer name="pc_cmd_gethere"/>
			<referrer name="pc_cmd_slap"/>
			<referrer name="pc_cmd_freeze"/>
			<referrer name="pc_cmd_unfreeze"/>
			<referrer name="pc_cmd_respawn"/>
			<referrer name="pc_cmd_respawnhere"/>
			<referrer name="pc_cmd_pm"/>
			<referrer name="pc_cmd_area"/>
			<referrer name="pc_cmd_givegun"/>
			<referrer name="pc_cmd_disarm"/>
			<referrer name="pc_cmd_reports"/>
			<referrer name="pc_cmd_acceptreport"/>
			<referrer name="pc_cmd_rchat"/>
			<referrer name="pc_cmd_closereport"/>
			<referrer name="pc_cmd_reportmute"/>
			<referrer name="pc_cmd_gotoxyz"/>
			<referrer name="pc_cmd_unjail"/>
			<referrer name="pc_cmd_jail"/>
			<referrer name="pc_cmd_showfreq"/>
			<referrer name="pc_cmd_speed"/>
			<referrer name="pc_cmd_admins"/>
			<referrer name="pc_cmd_helpers"/>
			<referrer name="pc_cmd_showlicenses"/>
			<referrer name="pc_cmd_buylevel"/>
			<referrer name="pc_cmd_killcp"/>
			<referrer name="pc_cmd_sms"/>
			<referrer name="pc_cmd_number"/>
			<referrer name="pc_cmd_reply"/>
			<referrer name="pc_cmd_cancel"/>
			<referrer name="pc_cmd_accept"/>
			<referrer name="pc_cmd_quests"/>
			<referrer name="pc_cmd_setfreq"/>
			<referrer name="pc_cmd_wt"/>
			<referrer name="pc_cmd_freqmembers"/>
			<referrer name="pc_cmd_findbusiness"/>
			<referrer name="pc_cmd_findhouse"/>
			<referrer name="pc_cmd_id"/>
			<referrer name="pc_cmd_insertemail"/>
			<referrer name="CB_OnPlayerDisconnect"/>
			<referrer name="OnPlayerDeath"/>
			<referrer name="OnPlayerText"/>
			<referrer name="OnVehicleDeath"/>
			<referrer name="CB_OnPlayerKeyStateChange"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<referrer name="CB_OnPlayerWeaponShot"/>
			<referrer name="OnPlayerCommandReceived"/>
			<referrer name="OnPlayerCommandPerformed"/>
			<dependency name="SendClientMessage"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendClientMessageToAll" syntax="va_SendClientMessageToAll(colour, fmat[], ...)">
			<stacksize value="144"/>
			<referrer name="@yH_OnPlayerStateChange@005"/>
			<referrer name="warnPlayer"/>
			<referrer name="kickPlayer"/>
			<referrer name="pc_cmd_arrest"/>
			<referrer name="pc_cmd_fare"/>
			<referrer name="pc_cmd_aq"/>
			<referrer name="pc_cmd_ch"/>
			<referrer name="checkAccountBanDatabase"/>
			<referrer name="pc_cmd_warn"/>
			<referrer name="pc_cmd_ban"/>
			<referrer name="pc_cmd_mute"/>
			<referrer name="pc_cmd_announce"/>
			<referrer name="CB_OnPlayerStateChange"/>
			<dependency name="SendClientMessageToAll"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="colour">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToAll" syntax="va_SendPlayerMessageToAll(senderid, fmat[], ...)">
			<stacksize value="144"/>
			<dependency name="SendPlayerMessageToAll"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_SendPlayerMessageToPlayer" syntax="va_SendPlayerMessageToPlayer(playerid, senderid, fmat[], ...)">
			<stacksize value="145"/>
			<dependency name="SendPlayerMessageToPlayer"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="playerid">
			</param>
			<param name="senderid">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_TextDrawCreate" syntax="va_TextDrawCreate(x, y, fmat[], ...)">
			<tagname value="Text"/>
			<stacksize value="145"/>
			<dependency name="TextDrawCreate"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="va_return"/>
			<param name="x">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="y">
				<paraminfo>Float </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_format" syntax="va_format(output[], len, format[], ...)">
			<attribute name="native"/>
			<referrer name="string_fast"/>
			<referrer name="sendNearbyMessage"/>
			<referrer name="update"/>
			<referrer name="sendPlayerError"/>
			<referrer name="sendPlayerSyntax"/>
			<referrer name="va_PlayerTextDrawSetString"/>
			<referrer name="getDateTime"/>
			<referrer name="sendAdmin"/>
			<referrer name="sendHelper"/>
			<referrer name="sendStaff"/>
			<referrer name="oocNews"/>
			<referrer name="sendToAdmin"/>
			<referrer name="sendFactionMessage"/>
			<referrer name="pc_cmd_invite"/>
			<referrer name="@yH_OnPlayerEnterCheckpoint@008"/>
			<referrer name="jobWork"/>
			<referrer name="sendClanMessage"/>
			<referrer name="InsertCarDS"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="len">
			</param>
			<param name="format">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_formatex" syntax="va_formatex(output[], size, fmat[], STATIC_ARGS)">
			<stacksize value="1"/>
			<param name="output">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="size">
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="STATIC_ARGS">
				<paraminfo>va_ </paraminfo>
			</param>
		</member>
		<member name="M:va_fprintf" syntax="va_fprintf(fhnd, fmat[], ...)">
			<stacksize value="144"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="fwrite"/>
			<dependency name="va_return"/>
			<param name="fhnd">
				<paraminfo>File </paraminfo>
			</param>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_getstring" syntax="va_getstring(dest[], arg, len)">
			<stacksize value="1"/>
			<dependency name="strcat"/>
			<param name="dest">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="arg">
			</param>
			<param name="len">
			</param>
		</member>
		<member name="M:va_print" syntax="va_print(fmat[], ...)">
			<stacksize value="143"/>
			<dependency name="YVA2_DummyPush"/>
			<dependency name="print"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
			</param>
		</member>
		<member name="M:va_return" syntax="va_return(fmat[], ...)">
			<stacksize value="131"/>
			<referrer name="va_CreatePlayerTextDraw"/>
			<referrer name="va_TextDrawCreate"/>
			<referrer name="va_SendClientMessage"/>
			<referrer name="va_SendClientMessageToAll"/>
			<referrer name="va_SendPlayerMessageToPlayer"/>
			<referrer name="va_SendPlayerMessageToAll"/>
			<referrer name="va_GameTextForPlayer"/>
			<referrer name="va_GameTextForAll"/>
			<referrer name="va_print"/>
			<referrer name="va_fprintf"/>
			<dependency name="format"/>
			<dependency name="va_return"/>
			<param name="fmat">
				<paraminfo> [] </paraminfo>
				String format.
			</param>
			<param name="...">
				<paraminfo> {_,Language,Bit,Text,Menu,Style,XML,Bintree,Group,Timer,Float,File,Text3D} </paraminfo>
				Parameters.
			</param>
			    <returns>  Formatted string.  </returns>  <remarks>  Just wraps `format` and returns a string instead.  Has extra code to ensure that it works correct on the old compiler.  </remarks> 
		</member>
		<member name="M:va_strlen" syntax="va_strlen(arg)">
			<stacksize value="1"/>
			<dependency name="strlen"/>
			<param name="arg">
			</param>
		</member>
		<member name="M:wantedName" syntax="wantedName(playerid)">
			<stacksize value="1"/>
			<referrer name="showMDC"/>
			<referrer name="sendPolice"/>
			<referrer name="pc_cmd_clear"/>
			<dependency name="EOS"/>
			<dependency name="gString"/>
			<dependency name="pWantedLevel"/>
			<dependency name="playerInfo"/>
			<dependency name="wantedName"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:warnPlayer" syntax="warnPlayer(playerid, adminid, reason[])">
			<stacksize value="36"/>
			<referrer name="pc_cmd_warn"/>
			<dependency name="EOS"/>
			<dependency name="GetPlayerName"/>
			<dependency name="SQL"/>
			<dependency name="SetPVarInt"/>
			<dependency name="banPlayer"/>
			<dependency name="gQuery"/>
			<dependency name="gettime"/>
			<dependency name="mysql_format"/>
			<dependency name="mysql_pquery"/>
			<dependency name="pName"/>
			<dependency name="pSQLID"/>
			<dependency name="pWarn"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<dependency name="va_SendClientMessage"/>
			<dependency name="va_SendClientMessageToAll"/>
			<param name="playerid">
			</param>
			<param name="adminid">
			</param>
			<param name="reason">
				<paraminfo> [] </paraminfo>
			</param>
		</member>
		<member name="M:whenPlayerLeaveFaction" syntax="whenPlayerLeaveFaction(playerid)">
			<attribute name="public"/>
			<stacksize value="5"/>
			<referrer name="pc_cmd_auninvite"/>
			<dependency name="SetPlayerSkin"/>
			<dependency name="SpawnPlayer"/>
			<dependency name="pSQLID"/>
			<dependency name="pSkin"/>
			<dependency name="pSpawnChange"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="true"/>
			<dependency name="update"/>
			<param name="playerid">
			</param>
		</member>
		<member name="M:wrongPass" syntax="wrongPass(playerid)">
			<stacksize value="11"/>
			<referrer name="onPlayerLogin"/>
			<dependency name="Dialog_Open"/>
			<dependency name="I@"/>
			<dependency name="J@"/>
			<dependency name="kickEx_yT@"/>
			<dependency name="pLoginTries"/>
			<dependency name="pName"/>
			<dependency name="playerInfo"/>
			<dependency name="playerInfo"/>
			<dependency name="sendPlayerError"/>
			<dependency name="true"/>
			<param name="playerid">
			</param>
		</member>

	</members>
</doc>
